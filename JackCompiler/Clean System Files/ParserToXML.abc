.comp 920 000111010
.start _nostart_
.depend "Tokenizer" "20190528111305"
.depend "FileManipulation" "20190524120125"
.depend "StdLibMisc" "20180913124337"
.depend "Directory" "20180913124337"
.depend "_SystemEnumStrict" "20180913124337"
.depend "_SystemStrictLists" "20180913124337"
.depend "StdStrictLists" "20180913124337"
.depend "_SystemEnum" "20180913124337"
.depend "StdEnum" "20180913124337"
.depend "StdMisc" "20180913124337"
.depend "StdFunctions" "20180913124337"
.depend "StdCharList" "20180913124337"
.depend "StdTuple" "20180913124337"
.depend "StdOrdList" "20180913124337"
.depend "StdList" "20180913124337"
.depend "StdClass" "20180913124337"
.depend "StdFile" "20180913124337"
.depend "StdString" "20180913124337"
.depend "_SystemArray" "20180913124337"
.depend "StdArray" "20180913124337"
.depend "StdChar" "20180913124337"
.depend "StdReal" "20180913124337"
.depend "StdInt" "20180913124337"
.depend "StdOverloaded" "20180913124337"
.depend "StdBool" "20180913124337"
.depend "StdEnv" "20180913124337"
.depend "ParserToXML" "20190524122747"
.module m_ParserToXML "ParserToXML" "20190528161503"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod FileManipulation
.implab e_FileManipulation_slistOfLinesInFile
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod StdList
.implab e_StdList_stake
.implab e_StdList_slength;47
.implab e_StdList_stoString;79
.impmod StdFile
.impdesc e_StdFile_dfwrites
.implab e_StdFile_sfwrites
.implab e_StdFile_nfwrites
.impdesc e_StdFile_dFileSystem;.fclose
.implab e_StdFile_nFileSystem;.fclose e_StdFile_eaFileSystem;.fclose
.impdesc e_StdFile_dFileSystem;.fopen
.implab e_StdFile_nFileSystem;.fopen e_StdFile_eaFileSystem;.fopen
.impmod StdString
.implab e_StdString_s==;2
.impdesc e_StdString_d+++;11
.implab e_StdString_s+++;11
.implab e_StdString_n+++;11
.impmod _SystemArray
.impdesc e__SystemArray_dusize;23
.implab e__SystemArray_nusize;23
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s<;17
.impmod StdBool
.implab e_StdBool_snot
.export e_ParserToXML_sParseMultipleFiles
.descexp e_ParserToXML_dParseMultipleFiles e_ParserToXML_nParseMultipleFiles e_ParserToXML_lParseMultipleFiles 3 0 "ParseMultipleFiles"
.a 0 a1
.o 2 0
e_ParserToXML_lParseMultipleFiles
	repl_args 2 2
.o 3 0
a1
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_ParserToXML_dParseMultipleFiles
.o 1 0
e_ParserToXML_nParseMultipleFiles
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_ParserToXML_sParseMultipleFiles
	jsr_eval 4
.d 6 0
	jmp s1
.o 3 0
ea1
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s1
	eq_desc _Nil 0 4
	jmp_true case.1
	jmp case.2
case.1
	push_a 5
	buildB TRUE
	update_a 1 7
	updatepop_a 0 6
.d 2 0
	rtn
case.2
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n121
	push_a 0
	build _ 1 n122
	push_a 0
	build _ 1 n123
	push_a 11
	buildI 1
	push_a 2
	build _ 1 n124
	push_a 10
	buildh _Nil 0
	update_a 0 16
	update_a 0 8
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.3
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.3
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC ""
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 9
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.4
	buildAC "failed to close file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.4
	push_arg 0 2 2
	push_a 6
	buildAC "TxmlFiles\\"
	buildh ARRAY 1
	build _ 2 e_StdString_n+++;11
	push_a 10
	build _ 3 n119
	push_a 0
	build d_S.2 -1 n_S.2
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 0
	jsr e_FileManipulation_slistOfLinesInFile
.o 2 0
	push_a 2
	build d_S.3 -1 n_S.3
	push_a 11
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 3 n120
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	buildI 1
	push_a 7
	push_a 17
	push_a 17
	push_a 17
	push_a 17
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 8 0
	jsr s90
.o 1 1 b
	push_b 0
	notB
	jmp_false else.5
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ", execution terminated\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "Failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.5
	push_a 6
	jsr_eval 0
	push_a 1
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 13
	update_a 0 14
	update_a 0 15
	update_a 0 16
	update_a 0 12
	pop_a 1
.d 6 0
	jsr s91
.o 1 1 b
	pop_a 1
	notB
	jmp_false else.6
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "T.xml\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.6
	pop_a 6
	jmp s1.1
s1.1
	pop_a 6
	pushD m_ParserToXML
	pushD e_ParserToXML_dParseMultipleFiles
.d 0 2 ii
	jmp _match_error
.n 1 _ ea124
.o 1 0
n124
	push_node _cycle_in_spine 1
.o 2 0
ea124
.o 2 0
s124
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea123
.o 1 0
n123
	push_node _cycle_in_spine 1
.o 2 0
ea123
.o 2 0
s123
	push_a 0
	jsr_eval 0
	push_a 1
	pushI 0
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr s50
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s49
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea122
.o 1 0
n122
	push_node _cycle_in_spine 1
.o 2 0
ea122
.o 2 0
s122
	push_a 0
	jsr_eval 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 0
	updatepop_a 0 1
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea121
.o 1 0
n121
	push_node _cycle_in_spine 2
.o 3 0
ea121
.o 3 0
s121
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s47
.n 3 _ ea120
.o 1 0
n120
	push_node _cycle_in_spine 3
.o 4 0
ea120
.o 4 0
s120
	push_a 2
	push_a 1
	jsr_eval 0
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.n 3 _ ea119
.o 1 0
n119
	push_node _cycle_in_spine 3
.o 4 0
ea119
.o 4 0
s119
	push_a 2
	buildI 0
	push_a 2
	jsr_eval 0
	push_a 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 3
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 1 1 i
s50
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s66
.o 1 1 i
s66
	eq_desc _Cons 2 0
	jmp_true case.7
	jmp case.8
case.7
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s50
case.8
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s49
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s65
.o 3 0
s65
	eq_desc _Cons 2 0
	jmp_true case.9
	jmp case.10
case.9
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n193
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s49
case.10
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea193
.o 1 0
n193
	push_node _cycle_in_spine 1
.o 2 0
ea193
.o 2 0
s193
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s47
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.11
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n192
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.11
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n192
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea192
.o 2 2 ii
s192
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s47
.export e_ParserToXML_sstartParsing
.descexp e_ParserToXML_dstartParsing e_ParserToXML_nstartParsing e_ParserToXML_lstartParsing 5 0 "startParsing"
.a 0 a2
.o 2 0
e_ParserToXML_lstartParsing
	repl_args 4 4
.o 5 0
a2
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 5 e_ParserToXML_dstartParsing
.o 1 0
e_ParserToXML_nstartParsing
	push_node _cycle_in_spine 5
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
e_ParserToXML_sstartParsing
	jsr_eval 4
.d 8 0
	jmp s2
.o 5 0
ea2
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 8 0
s2
	eq_desc _Nil 0 4
	jmp_true case.12
	jmp case.13
case.12
	push_a 7
	buildB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	rtn
case.13
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s46
.o 1 0
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "<tokens>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.14
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s2
else.14
	buildAC "<keyword> class </keyword>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.15
	push_a 8
	jsr_eval 0
	push_a 7
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 7 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 8 0
	jmp s3
else.15
	buildAC "This is why you fail"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
.o 2 2 ii
s46
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.16
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n191
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.16
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n191
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea191
.o 2 2 ii
s191
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s46
.o 8 0
s3
	eq_desc _Cons 2 4
	jmp_true case.17
	jmp s3.1
case.17
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.18
	pop_a 2
	jmp s3.1
case.18
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 11
	buildI 2
	push_a 11
	build _ 1 n127
	push_a 8
	buildh _Nil 0
	update_a 0 16
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.19
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.19
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	push_a 6
	build _ 3 n125
	push_a 7
	update_a 5 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.20
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.20
	push_arg 0 2 2
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 10
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s88
.o 2 1 b
	push_b 0
	notB
	jmp_false else.21
	buildAC "failed to parse vardec"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.21
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 10
	push_a 10
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 8 0
	jsr s89
.o 2 1 b
	push_b 0
	notB
	jmp_false else.22
	buildAC "failed to parse subroutine"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.22
	push_a 1
	buildI 2
	push_a 9
	build _ 1 n126
	push_a 6
	pop_b 1
	update_a 9 13
	update_a 8 12
	update_a 7 11
	update_a 6 10
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.23
	buildAC "failed to open file"
	updatepop_a 0 5
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.23
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "<symbol> } </symbol>\n</class>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.24
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.24
	push_arg 0 2 2
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
s3.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_3
.d 0 2 ii
	jmp _match_error
.string x_3 "parseClass"
.n 1 _ ea127
.o 1 0
n127
	push_node _cycle_in_spine 1
.o 2 0
ea127
.o 2 0
s127
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea126
.o 1 0
n126
	push_node _cycle_in_spine 1
.o 2 0
ea126
.o 2 0
s126
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 3 _ ea125
.o 1 0
n125
	push_node _cycle_in_spine 3
.o 4 0
ea125
.o 4 0
s125
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n"
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<keyword> class </keyword>"
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<class>\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 1 1 b
s63
	eqB_b TRUE 0
	jmp_true case.25
	jmp case.26
case.25
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.26
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> method </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.27
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.27
	buildAC "<keyword> constructor </keyword>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 b
s62
	eqB_b TRUE 0
	jmp_true case.28
	jmp case.29
case.28
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.29
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.30
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.30
	buildAC "<keyword> while </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.31
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.31
	buildAC "<keyword> do </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.32
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.32
	buildAC "<keyword> return </keyword>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 b
s61
	eqB_b TRUE 0
	jmp_true case.33
	jmp case.34
case.33
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.34
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.35
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.35
	buildAC "<keyword> while </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.36
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.36
	buildAC "<keyword> do </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.37
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.37
	buildAC "<keyword> return </keyword>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 7 0
s22
	eq_desc _Cons 2 4
	jmp_true case.38
	jmp s22.1
case.38
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> + </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s59
.o 0 1 b
	notB
	jmp_false else.39
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.39
	buildAC "<symbol> = </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s60
.o 0 1 b
	notB
	jmp_false else.40
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.40
	push_a 8
	buildI 2
	push_a 9
	build _ 1 n145
	push_a 6
	buildh _Nil 0
	update_a 0 13
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.41
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.41
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.42
	buildAC "failed to close file"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.42
	push_arg 0 2 2
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s72
.o 2 1 b
	push_b 0
	notB
	jmp_false else.43
	buildAC "failed expression"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.43
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s22
s22.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_22
.d 0 2 ii
	jmp _match_error
.string x_22 "parseOpTerm"
.n 1 _ ea145
.o 1 0
n145
	push_node _cycle_in_spine 1
.o 2 0
ea145
.o 2 0
s145
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 4 _
.o 1 0
n21
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea21
.o 3 0
	push_a 2
	push_a 2
	push_a 2
	fillh _Tuple 3 6
	pop_a 3
.d 1 0
	rtn
.o 4 0
ea21
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 7 0
s21
	eq_desc _Cons 2 4
	jmp_true case.44
	jmp s21.1
case.44
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.45
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.45
	push_a 8
	buildI 2
	push_a 9
	build _ 1 n143
	push_a 6
	buildh _Nil 0
	update_a 0 13
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.46
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.46
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "<expression>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.47
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.47
	push_arg 0 2 2
	jsr_eval 0
	push_a 9
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 4
	push_a 4
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 0
	jsr s70
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	buildAC "<symbol> + </symbol>\n"
	push_a 1
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.48
	buildAC "<symbol> - </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.48
	buildAC "<symbol> * </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.48
	buildAC "<symbol> / </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.48
	buildAC "<symbol> &amp; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.48
then.48
	push_a 1
	push_a 1
	buildh ARRAY 1
	buildh _Cons 2
	push_a 3
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s22
else.48
	buildAC "<symbol> | </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.53
	buildAC "<symbol> &gt; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.53
	buildAC "<symbol> &lt; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.53
	buildAC "<symbol> = </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.53
then.53
	push_a 1
	push_a 1
	buildh ARRAY 1
	buildh _Cons 2
	push_a 3
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s22
else.53
	push_a 2
	buildI 2
	push_a 10
	build _ 1 n144
	push_a 7
	buildh _Nil 0
	update_a 0 13
	update_a 0 7
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.57
	buildAC "failed to open file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.57
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "</expression>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 6
	update_a 5 13
	update_a 4 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.58
	buildAC "failed to close file"
	updatepop_a 0 3
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.58
	push_arg 0 2 2
	push_a 3
	push_a 3
	buildh ARRAY 1
	buildh _Cons 2
	buildB TRUE
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	rtn
s21.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_21
.d 0 2 ii
	jmp _match_error
.string x_21 "parseExpression"
.n 1 _ ea144
.o 1 0
n144
	push_node _cycle_in_spine 1
.o 2 0
ea144
.o 2 0
s144
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea143
.o 1 0
n143
	push_node _cycle_in_spine 1
.o 2 0
ea143
.o 2 0
s143
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 1 b
s60
	eqB_b TRUE 0
	jmp_true case.59
	jmp case.60
case.59
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.60
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> &amp </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.61
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.61
	buildAC "<symbol> | </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.62
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.62
	buildAC "<symbol> &lt </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.63
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.63
	buildAC "<symbol> &gt </symbol>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 b
s59
	eqB_b TRUE 0
	jmp_true case.64
	jmp case.65
case.64
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.65
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.66
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.66
	buildAC "<symbol> * </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.67
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.67
	buildAC "<symbol> / </symbol>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.n 4 _
.o 1 0
n33
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea33
	jsr_eval 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	push_array 2
	push_array 2
	push_r_args 2 4 0
	update_a 5 8
	update_a 2 5
	update_a 4 7
	update_a 1 4
	update_a 3 6
	update_a 0 3
	pop_a 3
.o 7 0
s33
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n132
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.68
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.68
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.69
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.69
	push_arg 0 2 2
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.n 1 _ ea132
.o 1 0
n132
	push_node _cycle_in_spine 1
.o 2 0
ea132
.o 2 0
s132
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 1 i
s34
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n157
	create
	push_a 1
	push_b 0
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	create
	push_a 2
	push_b 0
	updatepop_b 0 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 0
.d 1 1 i
	jsr s45
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s44
.n 2 _ ea157
.o 1 0
n157
	push_node _cycle_in_spine 2
.o 3 0
ea157
.o 3 0
s157
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s42
.o 1 1 i
s45
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s58
.o 1 1 i
s58
	eq_desc _Cons 2 0
	jmp_true case.70
	jmp case.71
case.70
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s45
case.71
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s44
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s57
.o 3 0
s57
	eq_desc _Cons 2 0
	jmp_true case.72
	jmp case.73
case.72
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n159
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s44
case.73
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea159
.o 1 0
n159
	push_node _cycle_in_spine 1
.o 2 0
ea159
.o 2 0
s159
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s42
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.74
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n158
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.74
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n158
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea158
.o 2 2 ii
s158
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s42
.o 1 1 b
s53
	eqB_b TRUE 0
	jmp_true case.75
	jmp case.76
case.75
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.76
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> field </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.n 5 _
.o 1 0
n6
	push_node _cycle_in_spine 5
.d 5 0
	jsr ea6
.o 3 0
	push_a 2
	push_a 2
	push_a 2
	fillh _Tuple 3 6
	pop_a 3
.d 1 0
	rtn
.o 5 0
ea6
	jsr_eval 4
	jsr_eval 2
	jsr_eval 1
	push_array 2
	push_r_args 1 4 0
	update_a 4 7
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 8 0
s6
	eq_desc _Cons 2 4
	jmp_true case.77
	jmp s6.1
case.77
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.78
	pop_a 2
	jmp s6.1
case.78
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 11
	buildI 2
	push_a 11
	build _ 1 n190
	push_a 8
	buildh _Nil 0
	update_a 0 16
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.79
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.79
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	push_a 6
	build _ 3 n189
	push_a 7
	update_a 5 7
	update_a 4 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.80
	buildAC "failed to close file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.80
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.81
	push_arg 0 2 2
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s6
else.81
	push_arg 0 2 2
	push_a 2
	buildB TRUE
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 3 0
	rtn
s6.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_6
.d 0 2 ii
	jmp _match_error
.string x_6 "parseAllVars"
.n 1 _ ea190
.o 1 0
n190
	push_node _cycle_in_spine 1
.o 2 0
ea190
.o 2 0
s190
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 3 _ ea189
.o 1 0
n189
	push_node _cycle_in_spine 3
.o 4 0
ea189
.o 4 0
s189
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 8 0
s69
	eq_desc _Cons 2 4
	jmp_true case.82
	jmp s69.1
case.82
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.83
	pop_a 2
	jmp s69.1
case.83
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 11
	buildI 2
	push_a 11
	build _ 1 n181
	push_a 8
	buildh _Nil 0
	update_a 0 16
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.84
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.84
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	push_a 6
	build _ 3 n180
	push_a 7
	update_a 5 7
	update_a 4 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.85
	buildAC "failed to close file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.85
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.86
	push_arg 0 2 2
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s69
else.86
	push_arg 0 2 2
	push_a 2
	pushB TRUE
	update_a 1 11
	updatepop_a 0 10
.d 2 1 b
	rtn
s69.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_69
.d 0 2 ii
	jmp _match_error
.string x_69 "parseAllVars"
.n 1 _ ea181
.o 1 0
n181
	push_node _cycle_in_spine 1
.o 2 0
ea181
.o 2 0
s181
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 3 _ ea180
.o 1 0
n180
	push_node _cycle_in_spine 3
.o 4 0
ea180
.o 4 0
s180
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 7 0
s70
	eq_desc _Cons 2 4
	jmp_true case.87
	jmp s70.1
case.87
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pushI 17
	push_a 0
.d 1 1 i
	jsr s34
.o 1 0
	buildAC "<integerConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.88
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s107
else.88
	pushI 16
	push_a 0
.d 1 1 i
	jsr s34
.o 1 0
	buildAC "<stringConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.89
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s107
else.89
	pushI 9
	push_a 0
.d 1 1 i
	jsr s34
.o 1 0
	buildAC "<keyword>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.90
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s107
else.90
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.91
	buildAC "<symbol> ~ </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.91
then.91
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s107
else.91
	buildAC "<symbol> ( </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.93
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s106
else.93
	pushI 12
	push_a 0
.d 1 1 i
	jsr s34
.o 1 0
	buildAC "<identifier>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.94
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s105
else.94
	pop_a 2
	jmp s70.1
s70.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_70
.d 0 2 ii
	jmp _match_error
.string x_70 "parseTerm"
.o 7 0
s71
	eq_desc _Cons 2 4
	jmp_true case.95
	jmp s71.1
case.95
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.96
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.96
	push_a 8
	buildI 2
	push_a 9
	build _ 1 n149
	push_a 6
	buildh _Nil 0
	update_a 0 13
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.97
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.97
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.98
	buildAC "failed to close file"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.98
	push_arg 0 2 2
	push_a 2
	jsr_eval 0
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s73
.o 2 1 b
	push_b 0
	notB
	jmp_false else.99
	buildAC "failed expression"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.99
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s71
s71.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_71
.d 0 2 ii
	jmp _match_error
.string x_71 "parseSemiExpression"
.n 1 _ ea149
.o 1 0
n149
	push_node _cycle_in_spine 1
.o 2 0
ea149
.o 2 0
s149
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s72
	eq_desc _Cons 2 4
	jmp_true case.100
	jmp s72.1
case.100
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pushI 17
	push_a 0
.d 1 1 i
	jsr s34
.o 1 0
	buildAC "<integerConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.101
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s104
else.101
	pushI 16
	push_a 0
.d 1 1 i
	jsr s34
.o 1 0
	buildAC "<stringConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.102
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s104
else.102
	pushI 9
	push_a 0
.d 1 1 i
	jsr s34
.o 1 0
	buildAC "<keyword>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.103
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s104
else.103
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.104
	buildAC "<symbol> ~ </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.104
then.104
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s104
else.104
	buildAC "<symbol> ( </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.106
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s103
else.106
	pushI 12
	push_a 0
.d 1 1 i
	jsr s34
.o 1 0
	buildAC "<identifier>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.107
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s102
else.107
	pop_a 2
	jmp s72.1
s72.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_72
.d 0 2 ii
	jmp _match_error
.string x_72 "parseTerm"
.o 7 0
s73
	eq_desc _Cons 2 4
	jmp_true case.108
	jmp s73.1
case.108
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.109
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.109
	push_a 8
	buildI 2
	push_a 9
	build _ 1 n150
	push_a 6
	buildh _Nil 0
	update_a 0 13
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.110
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.110
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "<expression>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.111
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.111
	push_arg 0 2 2
	jsr_eval 0
	push_a 9
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 4
	push_a 4
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 0
	jsr s70
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	buildAC "<symbol> + </symbol>\n"
	push_a 1
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.112
	buildAC "<symbol> - </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.112
	buildAC "<symbol> * </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.112
	buildAC "<symbol> / </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.112
	buildAC "<symbol> &amp; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.112
then.112
	push_a 1
	push_a 1
	buildh ARRAY 1
	buildh _Cons 2
	push_a 3
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s101
else.112
	buildAC "<symbol> | </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.117
	buildAC "<symbol> &gt; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.117
	buildAC "<symbol> &lt; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.117
	buildAC "<symbol> = </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.117
then.117
	push_a 1
	push_a 1
	buildh ARRAY 1
	buildh _Cons 2
	push_a 3
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s101
else.117
	push_a 2
	buildI 2
	push_a 10
	build _ 1 n151
	push_a 7
	buildh _Nil 0
	update_a 0 13
	update_a 0 7
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.121
	buildAC "failed to open file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.121
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "</expression>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 6
	update_a 5 13
	update_a 4 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.122
	buildAC "failed to close file"
	updatepop_a 0 3
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.122
	push_arg 0 2 2
	push_a 3
	push_a 3
	buildh ARRAY 1
	buildh _Cons 2
	pushB TRUE
	update_a 1 4
	updatepop_a 0 3
.d 2 1 b
	rtn
s73.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_73
.d 0 2 ii
	jmp _match_error
.string x_73 "parseExpression"
.n 1 _ ea151
.o 1 0
n151
	push_node _cycle_in_spine 1
.o 2 0
ea151
.o 2 0
s151
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea150
.o 1 0
n150
	push_node _cycle_in_spine 1
.o 2 0
ea150
.o 2 0
s150
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s74
	eq_desc _Cons 2 4
	jmp_true case.123
	jmp s74.1
case.123
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ) </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.124
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.124
	push_a 1
	jsr_eval 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s73
.o 2 1 b
	push_b 0
	notB
	jmp_false else.125
	buildAC "failed expression"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.125
	push_a 0
	build _ 1 n203
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	buildh _Cons 2
	push_a 3
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jsr s71
.o 2 1 b
	push_b 0
	notB
	jmp_false else.126
	buildAC "failed semiEpression"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.126
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildB TRUE
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 3 0
	rtn
s74.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_74
.d 0 2 ii
	jmp _match_error
.string x_74 "parseExpressionList"
.n 1 _ ea203
.o 1 0
n203
	push_node _cycle_in_spine 1
.o 2 0
ea203
	jsr_eval 0
.o 2 0
s203
	eq_desc _Cons 2 0
	jmp_true case.127
	jmp s203.1
case.127
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s203.1
	pop_a 2
	pushD m_ParserToXML
	pushD x_203
.d 0 2 ii
	jmp _match_error
.string x_203 "_match0"
.o 7 0
s75
	eq_desc _Cons 2 4
	jmp_true case.128
	jmp s75.1
case.128
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.129
	pop_a 2
	jmp s75.1
case.129
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 8 10
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.130
	buildAC "a"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.130
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> . </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.131
	push_a 0
	jsr_eval 0
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s100
else.131
	push_a 0
	jsr_eval 0
	push_a 9
	push_array 3
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.132
	buildAC "a"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.132
	push_a 0
	jsr_eval 0
	push_a 8
	buildAC "<expressionList>\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s82
.o 2 0
	pop_a 1
	push_a 1
	jsr_eval 0
	push_a 8
	buildh ARRAY 1
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s74
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	push_a 0
	buildAC "</expressionList>\n"
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.133
	buildAC "a"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.133
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s75.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_75
.d 0 2 ii
	jmp _match_error
.string x_75 "parseSubroutineCallNoTerm"
.o 7 0
s76
	eq_desc _Cons 2 4
	jmp_true case.134
	jmp s76.1
case.134
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.135
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.135
	push_a 8
	buildI 2
	push_a 9
	buildh ARRAY 1
	build _ 1 n162
	push_a 6
	buildh _Nil 0
	update_a 0 13
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.136
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
.d 3 0
	rtn
else.136
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "<expression>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.137
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
.d 3 0
	rtn
else.137
	push_arg 0 2 2
	jsr_eval 0
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 0
	jsr s70
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	buildAC "<symbol> + </symbol>\n"
	push_a 1
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.138
	buildAC "<symbol> - </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.138
	buildAC "<symbol> * </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.138
	buildAC "<symbol> / </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.138
	buildAC "<symbol> &amp; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.138
then.138
	push_a 2
	jsr_eval 0
	push_a 2
	push_a 2
	buildh ARRAY 1
	buildh _Cons 2
	push_a 10
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s99
else.138
	buildAC "<symbol> | </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.143
	buildAC "<symbol> &gt; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.143
	buildAC "<symbol> &lt; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.143
	buildAC "<symbol> = </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.143
then.143
	push_a 2
	jsr_eval 0
	push_a 2
	push_a 2
	buildh ARRAY 1
	buildh _Cons 2
	push_a 10
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s99
else.143
	push_a 2
	buildI 2
	push_a 10
	buildh ARRAY 1
	build _ 1 n163
	push_a 7
	buildh _Nil 0
	update_a 0 13
	update_a 0 7
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.147
	buildAC "failed to open file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
.d 3 0
	rtn
else.147
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "</expression>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 6
	update_a 5 13
	update_a 4 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.148
	buildAC "failed to close file"
	updatepop_a 0 3
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
.d 3 0
	rtn
else.148
	push_arg 0 2 2
	jsr_eval 0
	push_a 3
	push_a 3
	buildh ARRAY 1
	buildh _Cons 2
	buildB TRUE
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	rtn
s76.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_76
.d 0 2 ii
	jmp _match_error
.string x_76 "parseExpression"
.n 1 _ ea163
.o 1 0
n163
	push_node _cycle_in_spine 1
.o 2 0
ea163
.o 2 0
s163
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea162
.o 1 0
n162
	push_node _cycle_in_spine 1
.o 2 0
ea162
.o 2 0
s162
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 8 0
s77
	eq_desc _Cons 2 4
	jmp_true case.149
	jmp s77.1
case.149
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s62
.o 0 1 b
	notB
	jmp_false else.150
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 10
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 11
	updatepop_a 0 10
.d 2 1 b
	rtn
else.150
	push_a 9
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s78
.o 2 1 b
	push_b 0
	notB
	jmp_false else.151
	buildAC "error in let statement"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.151
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	pop_b 1
.d 8 0
	jmp s77
s77.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_77
.d 0 2 ii
	jmp _match_error
.string x_77 "parseStatement"
.o 7 0
s78
	eq_desc _Cons 2 4
	jmp_true case.152
	jmp s78.1
case.152
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.153
	pop_a 2
	jmp s78.1
case.153
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.154
	pop_a 4
	jmp s78.1
case.154
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.155
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jmp s98
else.155
	push_a 12
	buildI 2
	push_a 13
	build _ 1 n139
	push_a 10
	buildh _Nil 0
	update_a 0 17
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.156
	buildAC "failed to open file"
	updatepop_a 0 14
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.156
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	push_a 6
	push_a 9
	build _ 4 n140
	push_a 9
	update_a 5 9
	update_a 4 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.157
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.157
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> [ </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.158
	push_arg 0 2 2
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s97
else.158
	push_arg 0 2 2
.impmod StdFile
.impdesc e_StdFile_rFileSystem;
	build_r e_StdFile_rFileSystem; 4 0 3 0
	push_a 9
	buildh ARRAY 1
	push_a 4
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n21
	push_a 0
	build d_S.3 -1 n_S.3
	buildI 2
	push_a 10
	build _ 1 n141
	push_a 7
	update_a 10 13
	update_a 9 12
	update_a 8 11
	update_a 7 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.159
	buildAC "failed to open file"
	updatepop_a 0 6
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.159
	push_a 1
	build d_S.2 -1 n_S.2
	build _ 1 n204
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build d_S.1 -1 n_S.1
	build _ 2 n142
	push_a 5
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.160
	buildAC "failed to close file"
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.160
	push_arg 0 2 2
	push_a 2
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
.d 2 1 b
	rtn
s78.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_78
.d 0 2 ii
	jmp _match_error
.string x_78 "parseLetStatement"
.n 1 _ ea204
.o 1 0
n204
	push_node _cycle_in_spine 1
.o 2 0
ea204
	jsr_eval 0
.o 2 0
s204
	eq_desc _Cons 2 0
	jmp_true case.161
	jmp s204.1
case.161
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s204.1
	pop_a 2
	pushD m_ParserToXML
	pushD x_204
.d 0 2 ii
	jmp _match_error
.string x_204 "_match1"
.n 2 _ ea142
.o 1 0
n142
	push_node _cycle_in_spine 2
.o 3 0
ea142
.o 3 0
s142
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "</letStatement>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea141
.o 1 0
n141
	push_node _cycle_in_spine 1
.o 2 0
ea141
.o 2 0
s141
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 4 _ ea140
.o 1 0
n140
	push_node _cycle_in_spine 4
.o 5 0
ea140
.o 5 0
s140
	push_a 3
	jsr_eval 0
	pushF_a 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<letStatement>\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea139
.o 1 0
n139
	push_node _cycle_in_spine 1
.o 2 0
ea139
.o 2 0
s139
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 8 0
s79
	eq_desc _Cons 2 4
	jmp_true case.162
	jmp s79.1
case.162
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s61
.o 0 1 b
	notB
	jmp_false else.163
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 10
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 3 0
	rtn
else.163
	push_a 9
	buildI 2
	push_a 9
	buildh ARRAY 1
	build _ 1 n167
	push_a 6
	buildh _Nil 0
	update_a 0 14
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.164
	buildAC "failed to open file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.164
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "<statements>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.165
	buildAC "failed to close file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.165
	push_arg 0 2 2
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	buildh ARRAY 1
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 8 0
	jsr s77
.o 2 1 b
	push_b 0
	notB
	jmp_false else.166
	buildAC "failed statments"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.166
	push_a 1
	buildI 2
	push_a 9
	buildh ARRAY 1
	build _ 1 n168
	push_a 6
	pop_b 1
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.167
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.167
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "</statements>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.168
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.168
	push_arg 0 2 2
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s96
s79.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_79
.d 0 2 ii
	jmp _match_error
.string x_79 "parseStatements"
.n 1 _ ea168
.o 1 0
n168
	push_node _cycle_in_spine 1
.o 2 0
ea168
.o 2 0
s168
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea167
.o 1 0
n167
	push_node _cycle_in_spine 1
.o 2 0
ea167
.o 2 0
s167
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s80
	eq_desc _Cons 2 4
	jmp_true case.169
	jmp s80.1
case.169
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.170
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.170
	push_a 8
	buildI 2
	push_a 9
	build _ 1 n153
	push_a 6
	buildh _Nil 0
	update_a 0 13
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.171
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.171
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "<expression>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.172
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.172
	push_arg 0 2 2
	jsr_eval 0
	push_a 9
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 4
	push_a 4
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 0
	jsr s70
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	buildAC "<symbol> + </symbol>\n"
	push_a 1
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.173
	buildAC "<symbol> - </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.173
	buildAC "<symbol> * </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.173
	buildAC "<symbol> / </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.173
	buildAC "<symbol> &amp; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.173
then.173
	push_a 2
	jsr_eval 0
	push_a 2
	push_a 2
	buildh ARRAY 1
	buildh _Cons 2
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s95
else.173
	buildAC "<symbol> | </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.178
	buildAC "<symbol> &gt; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.178
	buildAC "<symbol> &lt; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.178
	buildAC "<symbol> = </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.178
then.178
	push_a 2
	jsr_eval 0
	push_a 2
	push_a 2
	buildh ARRAY 1
	buildh _Cons 2
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s95
else.178
	push_a 2
	buildI 2
	push_a 10
	build _ 1 n154
	push_a 7
	buildh _Nil 0
	update_a 0 13
	update_a 0 7
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.182
	buildAC "failed to open file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.182
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "</expression>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 6
	update_a 5 13
	update_a 4 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.183
	buildAC "failed to close file"
	updatepop_a 0 3
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.183
	push_arg 0 2 2
	jsr_eval 0
	push_a 3
	push_a 3
	buildh ARRAY 1
	buildh _Cons 2
	buildB TRUE
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	rtn
s80.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_80
.d 0 2 ii
	jmp _match_error
.string x_80 "parseExpression"
.n 1 _ ea154
.o 1 0
n154
	push_node _cycle_in_spine 1
.o 2 0
ea154
.o 2 0
s154
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea153
.o 1 0
n153
	push_node _cycle_in_spine 1
.o 2 0
ea153
.o 2 0
s153
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 8 0
s81
	eq_desc _Cons 2 4
	jmp_true case.184
	jmp s81.1
case.184
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s61
.o 0 1 b
	notB
	jmp_false else.185
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 10
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 3 0
	rtn
else.185
	push_a 9
	buildI 2
	push_a 9
	buildh ARRAY 1
	build _ 1 n165
	push_a 6
	buildh _Nil 0
	update_a 0 14
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.186
	buildAC "failed to open file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.186
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "<statements>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.187
	buildAC "failed to close file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.187
	push_arg 0 2 2
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	buildh ARRAY 1
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 8 0
	jsr s77
.o 2 1 b
	push_b 0
	notB
	jmp_false else.188
	buildAC "failed statments"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.188
	push_a 1
	buildI 2
	push_a 9
	buildh ARRAY 1
	build _ 1 n166
	push_a 6
	pop_b 1
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.189
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.189
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "</statements>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.190
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.190
	push_arg 0 2 2
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s94
s81.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_81
.d 0 2 ii
	jmp _match_error
.string x_81 "parseStatements"
.n 1 _ ea166
.o 1 0
n166
	push_node _cycle_in_spine 1
.o 2 0
ea166
.o 2 0
s166
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea165
.o 1 0
n165
	push_node _cycle_in_spine 1
.o 2 0
ea165
.o 2 0
s165
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s82
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n148
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.191
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 1
.d 2 0
	rtn
else.191
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.192
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 1
.d 2 0
	rtn
else.192
	push_arg 0 2 2
	jsr_eval 0
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.n 1 _ ea148
.o 1 0
n148
	push_node _cycle_in_spine 1
.o 2 0
ea148
.o 2 0
s148
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s83
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n147
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.193
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.193
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.194
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.194
	push_arg 0 2 2
	pushB TRUE
	updatepop_a 0 1
.d 1 1 b
	rtn
.n 1 _ ea147
.o 1 0
n147
	push_node _cycle_in_spine 1
.o 2 0
ea147
.o 2 0
s147
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 8 0
s84
	eq_desc _Cons 2 4
	jmp_true case.195
	jmp s84.1
case.195
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.196
	pop_a 2
	jmp s84.1
case.196
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.197
	pop_a 4
	jmp s84.1
case.197
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> var </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.198
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 14
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 15
	updatepop_a 0 14
.d 2 1 b
	rtn
else.198
	push_a 13
	buildI 2
	push_a 13
	buildh ARRAY 1
	build _ 1 n177
	push_a 10
	buildh _Nil 0
	update_a 0 18
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.199
	buildAC "failed to open file"
	updatepop_a 0 15
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.199
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	push_a 6
	push_a 9
	build _ 4 n178
	push_a 9
	update_a 5 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.200
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.200
	push_arg 0 2 2
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 8 0
	jsr s69
.o 2 1 b
	push_b 0
	notB
	jmp_false else.201
	buildAC "failed vardec"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.201
	push_a 1
	buildI 2
	push_a 9
	buildh ARRAY 1
	build _ 1 n179
	push_a 6
	pop_b 1
	update_a 9 13
	update_a 8 12
	update_a 7 11
	update_a 6 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.202
	buildAC "failed to open file"
	updatepop_a 0 6
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.202
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "</varDec>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 4
	update_a 4 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.203
	buildAC "failed to close file"
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.203
	push_arg 0 2 2
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
.d 2 1 b
	rtn
s84.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_84
.d 0 2 ii
	jmp _match_error
.string x_84 "parseVarDec"
.n 1 _ ea179
.o 1 0
n179
	push_node _cycle_in_spine 1
.o 2 0
ea179
.o 2 0
s179
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 4 _ ea178
.o 1 0
n178
	push_node _cycle_in_spine 4
.o 5 0
ea178
.o 5 0
s178
	push_a 3
	jsr_eval 0
	pushF_a 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<varDec>\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea177
.o 1 0
n177
	push_node _cycle_in_spine 1
.o 2 0
ea177
.o 2 0
s177
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 8 0
s85
	eq_desc _Cons 2 4
	jmp_true case.204
	jmp s85.1
case.204
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s61
.o 0 1 b
	notB
	jmp_false else.205
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 10
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 11
	updatepop_a 0 10
.d 2 1 b
	rtn
else.205
	push_a 9
	buildI 2
	push_a 9
	buildh ARRAY 1
	build _ 1 n137
	push_a 6
	buildh _Nil 0
	update_a 0 14
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.206
	buildAC "failed to open file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.206
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "<statements>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.207
	buildAC "failed to close file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.207
	push_arg 0 2 2
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	buildh ARRAY 1
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 8 0
	jsr s77
.o 2 1 b
	push_b 0
	notB
	jmp_false else.208
	buildAC "failed statments"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.208
	push_a 1
	buildI 2
	push_a 9
	buildh ARRAY 1
	build _ 1 n138
	push_a 6
	pop_b 1
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.209
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.209
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "</statements>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.210
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.210
	push_arg 0 2 2
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 10
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s77
s85.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_85
.d 0 2 ii
	jmp _match_error
.string x_85 "parseStatements"
.n 1 _ ea138
.o 1 0
n138
	push_node _cycle_in_spine 1
.o 2 0
ea138
.o 2 0
s138
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea137
.o 1 0
n137
	push_node _cycle_in_spine 1
.o 2 0
ea137
.o 2 0
s137
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 8 0
s86
	eq_desc _Cons 2 4
	jmp_true case.211
	jmp s86.1
case.211
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.212
	pop_a 2
	jmp s86.1
case.212
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.213
	pop_a 4
	jmp s86.1
case.213
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ) </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.214
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 14
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 15
	updatepop_a 0 14
.d 2 1 b
	rtn
else.214
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ) </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.215
	push_a 13
	jsr_eval 0
	push_a 12
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 15
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 7 21
	update_a 6 20
	update_a 5 19
	update_a 4 18
	update_a 3 17
	update_a 2 16
	update_a 1 15
	updatepop_a 0 14
.d 8 0
	jmp s93
else.215
	push_a 13
	buildI 2
	push_a 13
	build _ 1 n182
	push_a 10
	buildh _Nil 0
	update_a 0 18
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.216
	buildAC "failed to open file"
	updatepop_a 0 15
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.216
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	push_a 6
	push_a 9
	build _ 4 n183
	push_a 9
	update_a 5 9
	update_a 4 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.217
	buildAC "failed to close file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.217
	buildAC "<symbol> , </symbol>\n"
	push_array 2
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.218
	push_arg 0 2 2
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s86
else.218
	push_arg 0 2 2
	push_a 2
	pushB TRUE
	update_a 1 11
	updatepop_a 0 10
.d 2 1 b
	rtn
s86.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_86
.d 0 2 ii
	jmp _match_error
.string x_86 "parseParameterList"
.n 4 _ ea183
.o 1 0
n183
	push_node _cycle_in_spine 4
.o 5 0
ea183
.o 5 0
s183
	push_a 3
	jsr_eval 0
	pushF_a 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea182
.o 1 0
n182
	push_node _cycle_in_spine 1
.o 2 0
ea182
.o 2 0
s182
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 8 0
s87
	eq_desc _Cons 2 4
	jmp_true case.219
	jmp s87.1
case.219
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 9
	buildI 2
	push_a 9
	build _ 1 n136
	push_a 6
	buildh _Nil 0
	update_a 0 14
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.220
	buildAC "failed to open file"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.220
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	build _ 2 n133
	push_a 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.221
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.221
	push_arg 0 2 2
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s84
.o 2 1 b
	push_b 0
	notB
	jmp_false else.222
	buildAC "failed to parse vardec"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.222
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 8 0
	jsr s85
.o 2 1 b
	push_b 0
	notB
	jmp_false else.223
	buildAC "failed to parse statements"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.223
	push_a 1
	buildI 2
	push_a 9
	build _ 1 n134
	push_a 6
	pop_b 1
	update_a 9 13
	update_a 8 12
	update_a 7 11
	update_a 6 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.224
	buildAC "failed to open file"
	updatepop_a 0 6
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.224
	push_a 1
	build _ 1 n205
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build d_S.1 -1 n_S.1
	build _ 2 n135
	push_a 5
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.225
	buildAC "failed to close file"
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.225
	push_arg 0 2 2
	push_a 2
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
.d 2 1 b
	rtn
s87.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_87
.d 0 2 ii
	jmp _match_error
.string x_87 "parseSubroutineBody"
.n 1 _ ea205
.o 1 0
n205
	push_node _cycle_in_spine 1
.o 2 0
ea205
	jsr_eval 0
.o 2 0
s205
	eq_desc _Cons 2 0
	jmp_true case.226
	jmp s205.1
case.226
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s205.1
	pop_a 2
	pushD m_ParserToXML
	pushD x_205
.d 0 2 ii
	jmp _match_error
.string x_205 "_match2"
.n 1 _ ea136
.o 1 0
n136
	push_node _cycle_in_spine 1
.o 2 0
ea136
.o 2 0
s136
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 2 _ ea135
.o 1 0
n135
	push_node _cycle_in_spine 2
.o 3 0
ea135
.o 3 0
s135
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "</subroutineBody>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea134
.o 1 0
n134
	push_node _cycle_in_spine 1
.o 2 0
ea134
.o 2 0
s134
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 2 _ ea133
.o 1 0
n133
	push_node _cycle_in_spine 2
.o 3 0
ea133
.o 3 0
s133
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<subroutineBody>\n"
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 8 0
s88
	eq_desc _Cons 2 4
	jmp_true case.227
	jmp s88.1
case.227
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.228
	pop_a 2
	jmp s88.1
case.228
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> static </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 2
.d 1 1 b
	jsr s53
.o 0 1 b
	notB
	jmp_false else.229
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 12
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 13
	updatepop_a 0 12
.d 2 1 b
	rtn
else.229
	push_a 11
	buildI 2
	push_a 11
	build _ 1 n186
	push_a 8
	buildh _Nil 0
	update_a 0 16
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.230
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.230
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	push_a 6
	build _ 3 n187
	push_a 7
	update_a 5 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.231
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.231
	push_arg 0 2 2
	build_r e_StdFile_rFileSystem; 4 0 3 0
	push_a 10
	push_a 10
	push_a 5
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n6
	push_a 0
	build d_S.3 -1 n_S.3
	buildI 2
	push_a 10
	build _ 1 n188
	push_a 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.232
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.232
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "</classVarDec>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.233
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.233
	push_arg 0 2 2
	jsr_eval 2
	push_arg 2 3 2
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s88
s88.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_88
.d 0 2 ii
	jmp _match_error
.string x_88 "parseClassVarDec"
.n 1 _ ea188
.o 1 0
n188
	push_node _cycle_in_spine 1
.o 2 0
ea188
.o 2 0
s188
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 3 _ ea187
.o 1 0
n187
	push_node _cycle_in_spine 3
.o 4 0
ea187
.o 4 0
s187
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<classVarDec>\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea186
.o 1 0
n186
	push_node _cycle_in_spine 1
.o 2 0
ea186
.o 2 0
s186
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 8 0
s89
	eq_desc _Cons 2 4
	jmp_true case.234
	jmp s89.1
case.234
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.235
	pop_a 2
	jmp s89.1
case.235
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.236
	pop_a 4
	jmp s89.1
case.236
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.237
	pop_a 6
	jmp s89.1
case.237
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> function </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 6
.d 1 1 b
	jsr s63
.o 0 1 b
	notB
	jmp_false else.238
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 16
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 17
	updatepop_a 0 16
.d 2 1 b
	rtn
else.238
	push_a 15
	buildI 2
	push_a 15
	build _ 1 n128
	push_a 12
	buildh _Nil 0
	update_a 0 20
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.239
	buildAC "failed to open file"
	updatepop_a 0 17
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.239
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	push_a 6
	push_a 9
	push_a 12
	build _ 5 n129
	push_a 11
	update_a 5 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.240
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.240
	push_arg 0 2 2
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s86
.o 2 1 b
	push_b 0
	notB
	jmp_false else.241
	buildAC "failed to parse params list"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.241
	push_a 1
	buildI 2
	push_a 9
	build _ 1 n130
	push_a 6
	pop_b 1
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.242
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.242
	push_a 1
	build _ 1 n206
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build d_S.1 -1 n_S.1
	build _ 2 n131
	push_a 5
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.243
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.243
	push_arg 0 2 2
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	jsr_eval 3
	push_arg 3 2 2
	jsr_eval 0
	push_a 11
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s87
.o 2 1 b
	push_b 0
	notB
	jmp_false else.244
	buildAC "failed to parse subroutine body"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.244
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 2
	push_a 9
	buildAC "</subroutineDec>\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n33
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	pop_b 1
.d 8 0
	jmp s89
s89.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_89
.d 0 2 ii
	jmp _match_error
.string x_89 "parseSubroutineDec"
.n 1 _ ea206
.o 1 0
n206
	push_node _cycle_in_spine 1
.o 2 0
ea206
	jsr_eval 0
.o 2 0
s206
	eq_desc _Cons 2 0
	jmp_true case.245
	jmp s206.1
case.245
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s206.1
	pop_a 2
	pushD m_ParserToXML
	pushD x_206
.d 0 2 ii
	jmp _match_error
.string x_206 "_match3"
.n 2 _ ea131
.o 1 0
n131
	push_node _cycle_in_spine 2
.o 3 0
ea131
.o 3 0
s131
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "</parameterList>\n"
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea130
.o 1 0
n130
	push_node _cycle_in_spine 1
.o 2 0
ea130
.o 2 0
s130
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 5 _ ea129
.o 1 0
n129
	push_node _cycle_in_spine 5
.o 6 0
ea129
.o 6 0
s129
	push_a 4
	jsr_eval 0
	pushF_a 5
	pop_a 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<parameterList>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<subroutineDec>\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea128
.o 1 0
n128
	push_node _cycle_in_spine 1
.o 2 0
ea128
.o 2 0
s128
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 8 0
s90
	eq_desc _Nil 0 4
	jmp_true case.246
	jmp case.247
case.246
	push_a 7
	pushB TRUE
	updatepop_a 0 8
.d 1 1 b
	rtn
case.247
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s46
.o 1 0
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "<tokens>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.248
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s90
else.248
	buildAC "<keyword> class </keyword>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.249
	push_a 8
	jsr_eval 0
	push_a 7
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 7 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 8 0
	jmp s92
else.249
	buildAC "This is why you fail"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
.o 6 0
s91
	eq_desc _Nil 0 4
	jmp_true case.250
	jmp case.251
case.250
	push_a 5
	pushB TRUE
	updatepop_a 0 6
.d 1 1 b
	rtn
case.251
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n196
	push_a 0
	build _ 1 n197
	push_a 0
	build _ 1 n198
	push_a 11
	buildI 1
	push_a 2
	build _ 1 n199
	push_a 10
	buildh _Nil 0
	update_a 0 16
	update_a 0 8
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.252
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.252
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC ""
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 9
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.253
	buildAC "failed to close file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.253
	push_arg 0 2 2
	push_a 6
	buildAC "TxmlFiles\\"
	buildh ARRAY 1
	build _ 2 e_StdString_n+++;11
	push_a 10
	build _ 3 n194
	push_a 0
	build d_S.2 -1 n_S.2
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 0
	jsr e_FileManipulation_slistOfLinesInFile
.o 2 0
	push_a 2
	build d_S.3 -1 n_S.3
	push_a 11
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 3 n195
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	buildI 1
	push_a 7
	push_a 17
	push_a 17
	push_a 17
	push_a 17
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 8 0
	jsr s90
.o 1 1 b
	push_b 0
	notB
	jmp_false else.254
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ", execution terminated\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "Failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.254
	push_a 6
	jsr_eval 0
	push_a 1
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 13
	update_a 0 14
	update_a 0 15
	update_a 0 16
	update_a 0 12
	pop_a 1
.d 6 0
	jsr s91
.o 1 1 b
	pop_a 1
	notB
	jmp_false else.255
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "T.xml\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.255
	pop_a 6
	jmp s91.1
s91.1
	pop_a 6
	pushD m_ParserToXML
	pushD x_91
.d 0 2 ii
	jmp _match_error
.string x_91 "ParseMultipleFiles"
.n 1 _ ea199
.o 1 0
n199
	push_node _cycle_in_spine 1
.o 2 0
ea199
.o 2 0
s199
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea198
.o 1 0
n198
	push_node _cycle_in_spine 1
.o 2 0
ea198
.o 2 0
s198
	push_a 0
	jsr_eval 0
	push_a 1
	pushI 0
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr s50
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s49
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea197
.o 1 0
n197
	push_node _cycle_in_spine 1
.o 2 0
ea197
.o 2 0
s197
	push_a 0
	jsr_eval 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 0
	updatepop_a 0 1
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea196
.o 1 0
n196
	push_node _cycle_in_spine 2
.o 3 0
ea196
.o 3 0
s196
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s47
.n 3 _ ea195
.o 1 0
n195
	push_node _cycle_in_spine 3
.o 4 0
ea195
.o 4 0
s195
	push_a 2
	push_a 1
	jsr_eval 0
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.n 3 _ ea194
.o 1 0
n194
	push_node _cycle_in_spine 3
.o 4 0
ea194
.o 4 0
s194
	push_a 2
	buildI 0
	push_a 2
	jsr_eval 0
	push_a 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 3
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 8 0
s92
	eq_desc _Cons 2 4
	jmp_true case.256
	jmp s92.1
case.256
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.257
	pop_a 2
	jmp s92.1
case.257
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 11
	buildI 2
	push_a 11
	build _ 1 n202
	push_a 8
	buildh _Nil 0
	update_a 0 16
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.258
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.258
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	push_a 6
	build _ 3 n200
	push_a 7
	update_a 5 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.259
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.259
	push_arg 0 2 2
	push_a 2
	jsr_eval 0
	push_a 10
	push_a 10
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s88
.o 2 1 b
	push_b 0
	notB
	jmp_false else.260
	buildAC "failed to parse vardec"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.260
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 10
	push_a 10
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 8 0
	jsr s89
.o 2 1 b
	push_b 0
	notB
	jmp_false else.261
	buildAC "failed to parse subroutine"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.261
	push_a 1
	buildI 2
	push_a 9
	build _ 1 n201
	push_a 6
	pop_b 1
	update_a 9 13
	update_a 8 12
	update_a 7 11
	update_a 6 10
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.262
	buildAC "failed to open file"
	updatepop_a 0 5
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.262
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "<symbol> } </symbol>\n</class>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.263
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.263
	push_arg 0 2 2
	pushB TRUE
	updatepop_a 0 1
.d 1 1 b
	rtn
s92.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_92
.d 0 2 ii
	jmp _match_error
.string x_92 "parseClass"
.n 1 _ ea202
.o 1 0
n202
	push_node _cycle_in_spine 1
.o 2 0
ea202
.o 2 0
s202
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea201
.o 1 0
n201
	push_node _cycle_in_spine 1
.o 2 0
ea201
.o 2 0
s201
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 3 _ ea200
.o 1 0
n200
	push_node _cycle_in_spine 3
.o 4 0
ea200
.o 4 0
s200
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n"
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<keyword> class </keyword>"
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<class>\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 8 0
s93
	eq_desc _Cons 2 4
	jmp_true case.264
	jmp s93.1
case.264
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.265
	pop_a 2
	jmp s93.1
case.265
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.266
	pop_a 4
	jmp s93.1
case.266
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 13
	buildI 2
	push_a 13
	build _ 1 n185
	push_a 10
	buildh _Nil 0
	update_a 0 16
	update_a 0 18
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.267
	buildAC "failed to open file"
	updatepop_a 0 15
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.267
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 5
	push_a 8
	build _ 3 n184
	push_a 9
	update_a 5 17
	update_a 4 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.268
	buildAC "failed to close file"
	updatepop_a 0 3
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.268
	push_arg 0 2 2
	push_a 3
	push_a 3
	buildh _Cons 2
	pushB TRUE
	update_a 1 4
	updatepop_a 0 3
.d 2 1 b
	rtn
s93.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_93
.d 0 2 ii
	jmp _match_error
.string x_93 "finishParameterList"
.n 1 _ ea185
.o 1 0
n185
	push_node _cycle_in_spine 1
.o 2 0
ea185
.o 2 0
s185
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 3 _ ea184
.o 1 0
n184
	push_node _cycle_in_spine 3
.o 4 0
ea184
.o 4 0
s184
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 8 0
s94
	eq_desc _Cons 2 4
	jmp_true case.269
	jmp s94.1
case.269
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s62
.o 0 1 b
	notB
	jmp_false else.270
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 10
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 3 0
	rtn
else.270
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 10
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s78
.o 2 1 b
	push_b 0
	notB
	jmp_false else.271
	buildAC "error in let statement"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.271
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	pop_b 1
.d 8 0
	jmp s94
s94.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_94
.d 0 2 ii
	jmp _match_error
.string x_94 "parseStatement"
.o 7 0
s95
	eq_desc _Cons 2 4
	jmp_true case.272
	jmp s95.1
case.272
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> + </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s59
.o 0 1 b
	notB
	jmp_false else.273
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.273
	buildAC "<symbol> = </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s60
.o 0 1 b
	notB
	jmp_false else.274
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.274
	push_a 8
	buildI 2
	push_a 9
	build _ 1 n155
	push_a 6
	buildh _Nil 0
	update_a 0 13
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.275
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.275
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.276
	buildAC "failed to close file"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.276
	push_arg 0 2 2
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s72
.o 2 1 b
	push_b 0
	notB
	jmp_false else.277
	buildAC "failed expression"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
.d 3 0
	rtn
else.277
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s95
s95.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_95
.d 0 2 ii
	jmp _match_error
.string x_95 "parseOpTerm"
.n 1 _ ea155
.o 1 0
n155
	push_node _cycle_in_spine 1
.o 2 0
ea155
.o 2 0
s155
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 8 0
s96
	eq_desc _Cons 2 4
	jmp_true case.278
	jmp s96.1
case.278
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s62
.o 0 1 b
	notB
	jmp_false else.279
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 10
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 3 0
	rtn
else.279
	push_a 9
	jsr_eval 0
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s78
.o 2 1 b
	push_b 0
	notB
	jmp_false else.280
	buildAC "error in let statement"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.280
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	pop_b 1
.d 8 0
	jmp s96
s96.1
	pop_a 8
	pushD m_ParserToXML
	pushD x_96
.d 0 2 ii
	jmp _match_error
.string x_96 "parseStatement"
.o 7 0
s97
	push_a 6
	push_a 6
	buildh ARRAY 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	buildh _Nil 0
	update_a 0 12
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s80
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	push_a 0
	push_a 3
	update_a 3 7
	update_a 1 6
	updatepop_a 0 5
.d 2 0
	jsr catAC
.o 1 0
	push_a 2
	push_a 9
	push_a 2
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	buildh _Nil 0
	update_a 0 10
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.281
	buildAC "error in array let statemeny"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.281
	push_a 0
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 8 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 0
	jsr s76
.o 3 0
	push_a 2
	push_a 10
	push_a 5
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	update_a 8 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.282
	buildAC "error in let statemeny"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.282
	push_a 1
	build _ 1 n207
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
.n 1 _ ea207
.o 1 0
n207
	push_node _cycle_in_spine 1
.o 2 0
ea207
	jsr_eval 0
.o 2 0
s207
	eq_desc _Cons 2 0
	jmp_true case.283
	jmp s207.1
case.283
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s207.1
	pop_a 2
	pushD m_ParserToXML
	pushD x_207
.d 0 2 ii
	jmp _match_error
.string x_207 "_match4"
.o 7 0
s98
	eq_desc _Cons 2 4
	jmp_true case.284
	jmp s98.1
case.284
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.285
	pop_a 2
	jmp s98.1
case.285
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.286
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s113
else.286
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_array 3
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<ifStatement>\n"
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.287
	buildAC "error in if statement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.287
	push_a 0
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s80
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	push_a 0
	push_a 3
	update_a 3 7
	update_a 1 6
	updatepop_a 0 5
.d 2 0
	jsr catAC
.o 1 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.288
	buildAC "error in if statement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.288
	push_a 1
	jsr_eval 0
	push_a 1
	buildI 0
	push_a 10
	push_a 3
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	pop_b 1
	update_a 8 10
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s79
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 2
	pop_a 2
	buildAC "<keyword> else </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.289
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s82
.o 2 0
	pop_a 1
	push_a 7
	push_a 2
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s112
else.289
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s82
.o 2 0
	pop_a 1
	push_a 7
	buildAC "</ifStatement>\n"
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	update_a 7 14
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.290
	buildAC "error in let statemeny"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.290
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s98.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_98
.d 0 2 ii
	jmp _match_error
.string x_98 "parseIfStatement"
.o 7 0
s99
	eq_desc _Cons 2 4
	jmp_true case.291
	jmp s99.1
case.291
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> + </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s59
.o 0 1 b
	notB
	jmp_false else.292
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.292
	buildAC "<symbol> = </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s60
.o 0 1 b
	notB
	jmp_false else.293
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.293
	push_a 8
	buildI 2
	push_a 9
	build _ 1 n164
	push_a 6
	buildh _Nil 0
	update_a 0 13
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.294
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
.d 3 0
	rtn
else.294
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.295
	buildAC "failed to close file"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
.d 3 0
	rtn
else.295
	push_arg 0 2 2
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s72
.o 2 1 b
	push_b 0
	notB
	jmp_false else.296
	buildAC "failed expression"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
.d 3 0
	rtn
else.296
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s99
s99.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_99
.d 0 2 ii
	jmp _match_error
.string x_99 "parseOpTerm"
.n 1 _ ea164
.o 1 0
n164
	push_node _cycle_in_spine 1
.o 2 0
ea164
.o 2 0
s164
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s100
	eq_desc _Cons 2 4
	jmp_true case.297
	jmp s100.1
case.297
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.298
	pop_a 2
	jmp s100.1
case.298
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.299
	pop_a 4
	jmp s100.1
case.299
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.300
	buildAC "a"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.300
	push_a 0
	jsr_eval 0
	push_a 8
	buildAC "<expressionList>\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s82
.o 2 0
	pop_a 1
	push_a 1
	jsr_eval 0
	push_a 8
	buildh ARRAY 1
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s80
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	push_a 0
	buildAC "</expressionList>\n"
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.301
	buildAC "a"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.301
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s100.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_100
.d 0 2 ii
	jmp _match_error
.string x_100 "parseNestedSubroutineCall"
.o 7 0
s101
	eq_desc _Cons 2 4
	jmp_true case.302
	jmp s101.1
case.302
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> + </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s59
.o 0 1 b
	notB
	jmp_false else.303
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.303
	buildAC "<symbol> = </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s60
.o 0 1 b
	notB
	jmp_false else.304
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.304
	push_a 8
	buildI 2
	push_a 9
	build _ 1 n152
	push_a 6
	buildh _Nil 0
	update_a 0 13
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.305
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.305
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	build _ 2 e_StdFile_nfwrites
	push_a 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.306
	buildAC "failed to close file"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.306
	push_arg 0 2 2
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s72
.o 2 1 b
	push_b 0
	notB
	jmp_false else.307
	buildAC "failed expression"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.307
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s101
s101.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_101
.d 0 2 ii
	jmp _match_error
.string x_101 "parseOpTerm"
.n 1 _ ea152
.o 1 0
n152
	push_node _cycle_in_spine 1
.o 2 0
ea152
.o 2 0
s152
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s102
	eq_desc _Cons 2 4
	jmp_true case.308
	jmp s102.1
case.308
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.309
	pop_a 2
	jmp s102.1
case.309
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ( </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.310
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s111
else.310
	buildAC "<symbol> . </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.311
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s111
else.311
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s110
s102.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_102
.d 0 2 ii
	jmp _match_error
.string x_102 "var_or_subroutine"
.o 7 0
s103
	eq_desc _Cons 2 4
	jmp_true case.312
	jmp s103.1
case.312
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<term>\n"
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.313
	buildAC ""
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.313
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 1
	push_a 9
	buildh ARRAY 1
	push_a 4
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n21
	push_a 0
	build d_S.2 -1 n_S.2
	build _ 1 n208
	push_a 1
	build d_S.3 -1 n_S.3
	push_a 1
	build d_S.1 -1 n_S.1
	build_r e_StdFile_rFileSystem; 4 0 6 0
	push_a 12
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
	build _ 4 n156
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 12
	updatepop_a 0 11
	updatepop_b 0 1
.d 2 1 b
	rtn
s103.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_103
.d 0 2 ii
	jmp _match_error
.string x_103 "parseTermExpression"
.n 1 _ ea208
.o 1 0
n208
	push_node _cycle_in_spine 1
.o 2 0
ea208
	jsr_eval 0
.o 2 0
s208
	eq_desc _Cons 2 0
	jmp_true case.314
	jmp s208.1
case.314
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s208.1
	pop_a 2
	pushD m_ParserToXML
	pushD x_208
.d 0 2 ii
	jmp _match_error
.string x_208 "_match5"
.n 4 _ ea156
.o 1 0
n156
	push_node _cycle_in_spine 4
.o 5 0
ea156
.o 5 0
s156
	push_a 3
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "</term>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 2 4 0
	push_a 8
	push_a 5
	update_a 1 6
	update_a 2 1
	update_a 3 2
	update_a 4 3
	update_a 5 4
	update_a 0 5
	pop_a 1
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s104
	eq_desc _Cons 2 4
	jmp_true case.315
	jmp s104.1
case.315
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "</term>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<term>\n"
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 14
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.316
	buildAC "error constant"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.316
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s104.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_104
.d 0 2 ii
	jmp _match_error
.string x_104 "parseConstant"
.o 7 0
s105
	eq_desc _Cons 2 4
	jmp_true case.317
	jmp s105.1
case.317
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.318
	pop_a 2
	jmp s105.1
case.318
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ( </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.319
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s109
else.319
	buildAC "<symbol> . </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.320
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s109
else.320
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s108
s105.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_105
.d 0 2 ii
	jmp _match_error
.string x_105 "var_or_subroutine"
.o 7 0
s106
	eq_desc _Cons 2 4
	jmp_true case.321
	jmp s106.1
case.321
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<term>\n"
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.322
	buildAC ""
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.322
	push_a 1
	jsr_eval 0
	push_a 1
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s21
.o 3 0
	push_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 5
	push_a 12
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n161
	build d_S.2 -1 n_S.2
	push_a 2
	buildB TRUE
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 3 0
	rtn
s106.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_106
.d 0 2 ii
	jmp _match_error
.string x_106 "parseTermExpression"
.n 4 _ ea161
.o 1 0
n161
	push_node _cycle_in_spine 4
.o 5 0
ea161
.o 5 0
s161
	push_a 3
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "</term>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 2 4 0
	push_a 8
	push_a 5
	update_a 1 6
	update_a 2 1
	update_a 3 2
	update_a 4 3
	update_a 5 4
	update_a 0 5
	pop_a 1
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s107
	eq_desc _Cons 2 4
	jmp_true case.323
	jmp s107.1
case.323
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "</term>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<term>\n"
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 14
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.324
	buildAC "error constant"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.324
	push_a 1
	jsr_eval 0
	push_a 1
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 3 0
	rtn
s107.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_107
.d 0 2 ii
	jmp _match_error
.string x_107 "parseConstant"
.o 7 0
s108
	eq_desc _Cons 2 4
	jmp_true case.325
	jmp s108.1
case.325
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.326
	pop_a 2
	jmp s108.1
case.326
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<term>\n"
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.327
	buildAC "a"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.327
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> [ </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.328
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 1
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s117
else.328
	push_a 0
	jsr_eval 0
	push_a 9
	buildAC "</term>\n"
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	update_a 9 16
	update_a 8 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.329
	buildAC "a2"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.329
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 1
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	pop_b 1
.d 3 0
	rtn
s108.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_108
.d 0 2 ii
	jmp _match_error
.string x_108 "parseVarName"
.o 7 0
s109
	eq_desc _Cons 2 4
	jmp_true case.330
	jmp s109.1
case.330
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.331
	pop_a 2
	jmp s109.1
case.331
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<term>\n"
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.332
	buildAC "a"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.332
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> . </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.333
	push_a 0
	jsr_eval 0
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s116
else.333
	push_a 0
	jsr_eval 0
	push_a 9
	push_array 3
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.334
	buildAC "a"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.334
	push_a 0
	jsr_eval 0
	push_a 8
	buildAC "<expressionList>\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s82
.o 2 0
	pop_a 1
	push_a 1
	jsr_eval 0
	push_a 8
	buildh ARRAY 1
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s74
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	buildAC "</term>\n"
	push_a 1
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "</expressionList>\n"
.d 2 0
	jsr catAC
.o 1 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.335
	buildAC "a"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.335
	push_a 1
	jsr_eval 0
	push_a 1
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 3 0
	rtn
s109.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_109
.d 0 2 ii
	jmp _match_error
.string x_109 "parseSubroutineCall"
.o 7 0
s110
	eq_desc _Cons 2 4
	jmp_true case.336
	jmp s110.1
case.336
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.337
	pop_a 2
	jmp s110.1
case.337
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<term>\n"
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.338
	buildAC "a"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.338
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> [ </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.339
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 1
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s115
else.339
	push_a 0
	jsr_eval 0
	push_a 9
	buildAC "</term>\n"
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	update_a 9 16
	update_a 8 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.340
	buildAC "a2"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.340
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 4
	updatepop_a 0 3
	updatepop_b 0 1
.d 2 1 b
	rtn
s110.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_110
.d 0 2 ii
	jmp _match_error
.string x_110 "parseVarName"
.o 7 0
s111
	eq_desc _Cons 2 4
	jmp_true case.341
	jmp s111.1
case.341
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.342
	pop_a 2
	jmp s111.1
case.342
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<term>\n"
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.343
	buildAC "a"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.343
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> . </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.344
	push_a 0
	jsr_eval 0
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jmp s100
else.344
	push_a 0
	jsr_eval 0
	push_a 9
	push_array 3
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.345
	buildAC "a"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.345
	push_a 0
	jsr_eval 0
	push_a 8
	buildAC "<expressionList>\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s82
.o 2 0
	pop_a 1
	push_a 1
	jsr_eval 0
	push_a 8
	buildh ARRAY 1
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s74
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	buildAC "</term>\n"
	push_a 1
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "</expressionList>\n"
.d 2 0
	jsr catAC
.o 1 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.346
	buildAC "a"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.346
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s111.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_111
.d 0 2 ii
	jmp _match_error
.string x_111 "parseSubroutineCall"
.o 7 0
s112
	eq_desc _Cons 2 4
	jmp_true case.347
	jmp s112.1
case.347
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.348
	pop_a 2
	jmp s112.1
case.348
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.349
	buildAC "error in if statement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.349
	push_a 0
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s80
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 2
	pop_a 2
	push_a 1
	update_a 1 5
	updatepop_a 0 4
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.350
	buildAC "error in if statement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.350
	push_a 0
	jsr_eval 0
	buildI 0
	push_a 9
	push_a 4
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	pop_b 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s81
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	push_a 4
	push_a 11
	push_a 2
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	update_a 8 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s82
.o 2 0
	pop_a 1
	push_a 7
	buildAC "</ifStatement>\n"
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	update_a 7 14
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.351
	buildAC "error in let statemeny"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.351
	push_a 1
	build _ 1 n209
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s112.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_112
.d 0 2 ii
	jmp _match_error
.string x_112 "parseElseStatement"
.n 1 _ ea209
.o 1 0
n209
	push_node _cycle_in_spine 1
.o 2 0
ea209
	jsr_eval 0
.o 2 0
s209
	eq_desc _Cons 2 0
	jmp_true case.352
	jmp s209.1
case.352
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s209.1
	pop_a 2
	pushD m_ParserToXML
	pushD x_209
.d 0 2 ii
	jmp _match_error
.string x_209 "_match6"
.o 7 0
s113
	eq_desc _Cons 2 4
	jmp_true case.353
	jmp s113.1
case.353
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.354
	pop_a 2
	jmp s113.1
case.354
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> while </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.355
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s114
else.355
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_array 3
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<whileStatement?\n"
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.356
	buildAC "error in if statement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.356
	push_a 0
	jsr_eval 0
	push_a 2
	jsr_eval 0
	buildI 0
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s81
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	push_a 4
	push_a 11
	push_a 2
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	update_a 8 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s82
.o 2 0
	pop_a 1
	push_a 7
	buildAC "</ifStatement>\n"
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	update_a 7 14
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.357
	buildAC "error in let statemeny"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.357
	push_a 1
	build _ 1 n210
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s113.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_113
.d 0 2 ii
	jmp _match_error
.string x_113 "parseWhileStatement"
.n 1 _ ea210
.o 1 0
n210
	push_node _cycle_in_spine 1
.o 2 0
ea210
	jsr_eval 0
.o 2 0
s210
	eq_desc _Cons 2 0
	jmp_true case.358
	jmp s210.1
case.358
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s210.1
	pop_a 2
	pushD m_ParserToXML
	pushD x_210
.d 0 2 ii
	jmp _match_error
.string x_210 "_match7"
.o 7 0
s114
	eq_desc _Cons 2 4
	jmp_true case.359
	jmp s114.1
case.359
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> do </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.360
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s118
else.360
	push_a 8
	buildI 2
	push_a 9
	build _ 1 n169
	push_a 6
	buildh _Nil 0
	update_a 0 13
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.361
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.361
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	build _ 2 n170
	push_a 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.362
	buildAC "failed to close file"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.362
	push_arg 0 2 2
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s75
.o 2 1 b
	push_b 0
	notB
	jmp_false else.363
	buildAC "failed doStatmente"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.363
	push_a 1
	buildI 2
	push_a 9
	build _ 1 n171
	push_a 6
	pop_b 1
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.364
	buildAC "failed to open file"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.364
	push_a 1
	build _ 1 n211
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build d_S.1 -1 n_S.1
	build _ 2 n172
	push_a 5
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.365
	buildAC "failed to close file"
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.365
	push_arg 0 2 2
	push_a 2
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
.d 2 1 b
	rtn
s114.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_114
.d 0 2 ii
	jmp _match_error
.string x_114 "parseDoStatement"
.n 1 _ ea211
.o 1 0
n211
	push_node _cycle_in_spine 1
.o 2 0
ea211
	jsr_eval 0
.o 2 0
s211
	eq_desc _Cons 2 0
	jmp_true case.366
	jmp s211.1
case.366
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s211.1
	pop_a 2
	pushD m_ParserToXML
	pushD x_211
.d 0 2 ii
	jmp _match_error
.string x_211 "_match8"
.n 2 _ ea172
.o 1 0
n172
	push_node _cycle_in_spine 2
.o 3 0
ea172
.o 3 0
s172
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "</doStatement>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea171
.o 1 0
n171
	push_node _cycle_in_spine 1
.o 2 0
ea171
.o 2 0
s171
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 2 _ ea170
.o 1 0
n170
	push_node _cycle_in_spine 2
.o 3 0
ea170
.o 3 0
s170
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<doStatement>\n"
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea169
.o 1 0
n169
	push_node _cycle_in_spine 1
.o 2 0
ea169
.o 2 0
s169
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s115
	eq_desc _Cons 2 4
	jmp_true case.367
	jmp s115.1
case.367
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	buildh ARRAY 1
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n33
	build d_S.2 -1 n_S.2
	build_r e_StdFile_rFileSystem; 4 0 3 0
	push_a 9
	buildh ARRAY 1
	push_a 4
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n21
	push_a 0
	build d_S.2 -1 n_S.2
	build _ 1 n212
	push_a 1
	build d_S.3 -1 n_S.3
	push_a 1
	build d_S.1 -1 n_S.1
	build_r e_StdFile_rFileSystem; 4 0 6 0
	push_a 12
	buildh ARRAY 1
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
	build _ 4 n146
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 12
	updatepop_a 0 11
.d 2 1 b
	rtn
s115.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_115
.d 0 2 ii
	jmp _match_error
.string x_115 "parseVarExperssion"
.n 1 _ ea212
.o 1 0
n212
	push_node _cycle_in_spine 1
.o 2 0
ea212
	jsr_eval 0
.o 2 0
s212
	eq_desc _Cons 2 0
	jmp_true case.368
	jmp s212.1
case.368
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s212.1
	pop_a 2
	pushD m_ParserToXML
	pushD x_212
.d 0 2 ii
	jmp _match_error
.string x_212 "_match9"
.n 4 _ ea146
.o 1 0
n146
	push_node _cycle_in_spine 4
.o 5 0
ea146
.o 5 0
s146
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "</term>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s116
	eq_desc _Cons 2 4
	jmp_true case.369
	jmp s116.1
case.369
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.370
	pop_a 2
	jmp s116.1
case.370
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.371
	pop_a 4
	jmp s116.1
case.371
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.372
	buildAC "a"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.372
	push_a 0
	jsr_eval 0
	push_a 8
	buildAC "<expressionList>\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s82
.o 2 0
	pop_a 1
	push_a 1
	jsr_eval 0
	push_a 8
	buildh ARRAY 1
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s80
.o 3 0
	push_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	push_a 0
	buildAC "</expressionList>\n"
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s83
.o 1 1 b
	push_b 0
	notB
	jmp_false else.373
	buildAC "a"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 1
.d 3 0
	rtn
else.373
	push_a 1
	jsr_eval 0
	push_a 1
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 3 0
	rtn
s116.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_116
.d 0 2 ii
	jmp _match_error
.string x_116 "parseNestedSubroutineCall"
.o 7 0
s117
	eq_desc _Cons 2 4
	jmp_true case.374
	jmp s117.1
case.374
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	buildh ARRAY 1
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n33
	build d_S.2 -1 n_S.2
	push_a 2
	jsr_eval 0
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s21
.o 3 0
	push_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 5
	push_a 12
	buildh ARRAY 1
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n160
	build d_S.2 -1 n_S.2
	push_a 2
	buildB TRUE
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 3 0
	rtn
s117.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_117
.d 0 2 ii
	jmp _match_error
.string x_117 "parseVarExperssion"
.n 4 _ ea160
.o 1 0
n160
	push_node _cycle_in_spine 4
.o 5 0
ea160
.o 5 0
s160
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "</term>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s118
	eq_desc _Cons 2 4
	jmp_true case.375
	jmp s118.1
case.375
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 8
	buildI 2
	push_a 9
	build _ 1 n176
	push_a 6
	buildh _Nil 0
	update_a 0 13
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.376
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.376
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	build _ 2 n173
	push_a 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.377
	buildAC "failed to close file"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.377
	push_arg 0 2 2
	push_a 2
	jsr_eval 0
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s73
.o 2 1 b
	push_b 0
	notB
	jmp_false else.378
	buildAC "failed returnStatement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.378
	push_a 1
	buildI 2
	push_a 9
	build _ 1 n174
	push_a 6
	pop_b 1
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.379
	buildAC "failed to open file"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.379
	push_a 1
	build _ 1 n213
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build d_S.1 -1 n_S.1
	build _ 2 n175
	push_a 5
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.380
	buildAC "failed to close file"
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.380
	push_arg 0 2 2
	push_a 2
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
.d 2 1 b
	rtn
s118.1
	pop_a 7
	pushD m_ParserToXML
	pushD x_118
.d 0 2 ii
	jmp _match_error
.string x_118 "parseReturnStatement"
.n 1 _ ea213
.o 1 0
n213
	push_node _cycle_in_spine 1
.o 2 0
ea213
	jsr_eval 0
.o 2 0
s213
	eq_desc _Cons 2 0
	jmp_true case.381
	jmp s213.1
case.381
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s213.1
	pop_a 2
	pushD m_ParserToXML
	pushD x_213
.d 0 2 ii
	jmp _match_error
.string x_213 "_match10"
.n 1 _ ea176
.o 1 0
n176
	push_node _cycle_in_spine 1
.o 2 0
ea176
.o 2 0
s176
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 2 _ ea175
.o 1 0
n175
	push_node _cycle_in_spine 2
.o 3 0
ea175
.o 3 0
s175
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "</returnStatement>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea174
.o 1 0
n174
	push_node _cycle_in_spine 1
.o 2 0
ea174
.o 2 0
s174
	buildAC ".xml"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 2 _ ea173
.o 1 0
n173
	push_node _cycle_in_spine 2
.o 3 0
ea173
.o 3 0
s173
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<returnStatement>\n"
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.impmod _system
.implab _match_error
.implab selector_m_error
