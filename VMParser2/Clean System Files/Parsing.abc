.comp 920 0001110100100
.start _nostart_
.depend "_SystemEnumStrict" "20180913130454"
.depend "_SystemStrictLists" "20180913130454"
.depend "StdStrictLists" "20180913130454"
.depend "_SystemEnum" "20180913130454"
.depend "StdEnum" "20180913130454"
.depend "StdMisc" "20180913130454"
.depend "StdFunctions" "20180913130454"
.depend "StdCharList" "20180913130454"
.depend "StdTuple" "20180913130454"
.depend "StdOrdList" "20180913130454"
.depend "StdList" "20180913130454"
.depend "StdClass" "20180913130454"
.depend "StdFile" "20180913130454"
.depend "StdString" "20180913130454"
.depend "_SystemArray" "20180913130454"
.depend "StdArray" "20180913130454"
.depend "StdChar" "20180913130454"
.depend "StdReal" "20180913130454"
.depend "StdInt" "20180913130454"
.depend "StdOverloaded" "20180913130454"
.depend "StdBool" "20180913130454"
.depend "StdEnv" "20180913130454"
.depend "Parsing" "20190402181851"
.module m_Parsing "Parsing" "20190402183115"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod StdList
.implab e_StdList_s!!
.implab e_StdList_sdrop
.implab e_StdList_sdropWhile
.impdesc e_StdList_dspan
.implab e_StdList_nspan
.implab e_StdList_slength;47
.implab e_StdList_sfromString;78
.impdesc e_StdList_dtoString;79
.implab e_StdList_stoString;79
.implab e_StdList_ntoString;79
.impmod StdFile
.impdesc e_StdFile_dfwrites
.implab e_StdFile_sfwrites
.implab e_StdFile_nfwrites
.impmod StdString
.implab e_StdString_s==;2
.impdesc e_StdString_dtoString;5
.implab e_StdString_stoString;5
.implab e_StdString_ntoString;5
.implab e_StdString_s%;10
.implab e_StdString_s+++;11
.impmod _SystemArray
.impdesc e__SystemArray_dusize;23
.implab e__SystemArray_nusize;23
.impmod StdChar
.impdesc e_StdChar_disSpace
.implab e_StdChar_sisSpace
.impmod StdInt
.impdesc e_StdInt_d+;6
.implab e_StdInt_s+;6
.implab e_StdInt_n+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s<;17
.implab e_StdInt_stoInt;23
.impmod StdBool
.implab e_StdBool_snot
.export e_Parsing_sparse
.descexp e_Parsing_dparse e_Parsing_nparse e_Parsing_lparse 5 0 "parse"
.a 0 a1
.o 2 0
e_Parsing_lparse
	repl_args 4 4
.o 5 0
a1
.d 5 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 5 e_Parsing_dparse
.o 1 0
e_Parsing_nparse
	push_node _cycle_in_spine 5
.d 5 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
e_Parsing_sparse
	jsr_eval 4
.d 8 0
	jmp s1
.o 5 0
ea1
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 8 0
s1
	eq_desc _Nil 0 4
	jmp_true case.1
	jmp case.2
case.1
	push_a 7
	buildB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	rtn
case.2
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 10
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 18
	pop_a 1
.d 8 0
	jsr s109
.o 1 1 b
	push_b 0
	notB
	jmp_false else.3
	buildAC "\n"
	push_array 2
	pop_b 1
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse line "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.3
	buildI 1
	push_a 10
	build _ 2 e_StdInt_n+;6
	push_a 3
	jsr_eval 0
	push_a 2
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 7
	update_a 6 8
	update_a 5 6
	update_a 7 5
	update_a 0 7
	pop_a 1
	update_a 7 18
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
	pop_b 1
.d 8 0
	jmp s1
.export e_Parsing_sparseLine
.descexp e_Parsing_dparseLine e_Parsing_nparseLine e_Parsing_lparseLine 5 0 "parseLine"
.a 0 a2
.o 2 0
e_Parsing_lparseLine
	repl_args 4 4
.o 5 0
a2
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 5 e_Parsing_dparseLine
.o 1 0
e_Parsing_nparseLine
	push_node _cycle_in_spine 5
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
e_Parsing_sparseLine
	jsr_eval 4
	push_array 4
	update_a 0 5
	pop_a 1
.d 8 0
	jmp s2
.o 5 0
ea2
	jsr_eval 1
	jsr_eval 0
	push_array 1
	push_r_args 1 4 0
	update_a 4 6
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 8 0
s2
	buildAC "\n"
	push_a 5
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.4
	buildAC ""
	push_a 5
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.4
then.4
	push_a 7
	buildB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	rtn
else.4
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "//"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.6
	push_a 7
	buildB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	rtn
else.6
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push constant"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.7
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s3
else.7
	pushI 10
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push static"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.8
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s13
else.8
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push argument"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.9
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s14
else.9
	pushI 9
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push local"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.10
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s15
else.10
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push this"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.11
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s16
else.11
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push that"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.12
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s17
else.12
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push temp"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.13
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s18
else.13
	pushI 9
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop static"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.14
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s19
else.14
	pushI 11
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop argument"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.15
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s20
else.15
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop local"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.16
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s21
else.16
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop this"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.17
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s22
else.17
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop that"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.18
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s23
else.18
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop temp"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.19
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s24
else.19
	pushI 13
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push pointer 0"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.20
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s25
else.20
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop pointer 0"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.21
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s27
else.21
	pushI 13
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push pointer 1"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.22
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s26
else.22
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop pointer 1"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.23
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s28
else.23
	pushI 4
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "label"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.24
	push_a 7
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	buildh ARRAY 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s29
else.24
	pushI 3
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "goto"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.25
	push_a 7
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	buildh ARRAY 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s30
else.25
	pushI 6
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "if-goto"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.26
	push_a 7
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	buildh ARRAY 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s31
else.26
	pushI 3
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "call"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.27
	push_a 7
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s32
else.27
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "function"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.28
	push_a 7
	jsr_eval 0
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s33
else.28
	pushI 5
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "return"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.29
	push_a 7
	jsr_eval 0
	push_a 6
	push_a 6
	buildh ARRAY 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s34
else.29
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "add"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.30
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s4
else.30
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "sub"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.31
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s5
else.31
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "neg"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.32
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s6
else.32
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "and"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.33
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s7
else.33
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "or"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.34
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s8
else.34
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "not"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.35
	push_a 7
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s9
else.35
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "eq"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.36
	push_a 7
	jsr_eval 0
	push_a 7
	jsr_eval 0
	pushI_a 8
	pop_a 1
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 1 i
	jmp s10
else.36
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "gt"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.37
	push_a 7
	jsr_eval 0
	push_a 7
	jsr_eval 0
	pushI_a 8
	pop_a 1
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 1 i
	jmp s11
else.37
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "lt"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.38
	push_a 7
	jsr_eval 0
	push_a 7
	jsr_eval 0
	pushI_a 8
	pop_a 1
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 1 i
	jmp s12
else.38
	push_a 7
	buildB FALSE
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	rtn
.export e_Parsing_sparseLTCommand
.descexp e_Parsing_dparseLTCommand e_Parsing_nparseLTCommand e_Parsing_lparseLTCommand 4 0 "parseLTCommand"
.a 0 a12
.o 2 0
e_Parsing_lparseLTCommand
	repl_args 3 3
.o 4 0
a12
.d 4 0
	jsr ea12
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseLTCommand
.o 1 0
e_Parsing_nparseLTCommand
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea12
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseLTCommand
	jsr_eval 6
	jsr_eval 5
	pushI_a 5
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 6 1 i
	jmp s12
.o 4 0
ea12
	jsr_eval 3
	jsr_eval 2
	jsr_eval 0
	pushI_a 2
	repl_r_args 4 0
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.o 6 1 i
s12
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.39
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.39
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n142
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.40
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.40
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea142
.o 1 0
n142
	push_node _cycle_in_spine 2
.o 3 0
ea142
.o 3 0
s142
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JLT\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// lt command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.export e_Parsing_sparseGTCommand
.descexp e_Parsing_dparseGTCommand e_Parsing_nparseGTCommand e_Parsing_lparseGTCommand 4 0 "parseGTCommand"
.a 0 a11
.o 2 0
e_Parsing_lparseGTCommand
	repl_args 3 3
.o 4 0
a11
.d 4 0
	jsr ea11
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseGTCommand
.o 1 0
e_Parsing_nparseGTCommand
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea11
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseGTCommand
	jsr_eval 6
	jsr_eval 5
	pushI_a 5
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 6 1 i
	jmp s11
.o 4 0
ea11
	jsr_eval 3
	jsr_eval 2
	jsr_eval 0
	pushI_a 2
	repl_r_args 4 0
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.o 6 1 i
s11
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.41
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.41
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n143
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.42
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.42
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea143
.o 1 0
n143
	push_node _cycle_in_spine 2
.o 3 0
ea143
.o 3 0
s143
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JGT\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// gt command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.export e_Parsing_sparseEQCommand
.descexp e_Parsing_dparseEQCommand e_Parsing_nparseEQCommand e_Parsing_lparseEQCommand 4 0 "parseEQCommand"
.a 0 a10
.o 2 0
e_Parsing_lparseEQCommand
	repl_args 3 3
.o 4 0
a10
.d 4 0
	jsr ea10
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseEQCommand
.o 1 0
e_Parsing_nparseEQCommand
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea10
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseEQCommand
	jsr_eval 6
	jsr_eval 5
	pushI_a 5
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 6 1 i
	jmp s10
.o 4 0
ea10
	jsr_eval 3
	jsr_eval 2
	jsr_eval 0
	pushI_a 2
	repl_r_args 4 0
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.o 6 1 i
s10
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.43
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.43
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n144
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.44
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.44
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea144
.o 1 0
n144
	push_node _cycle_in_spine 2
.o 3 0
ea144
.o 3 0
s144
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JEQ\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// eq command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.export e_Parsing_sparseNotCommand
.descexp e_Parsing_dparseNotCommand e_Parsing_nparseNotCommand e_Parsing_lparseNotCommand 3 0 "parseNotCommand"
.a 0 a9
.o 2 0
e_Parsing_lparseNotCommand
	repl_args 2 2
.o 3 0
a9
.d 3 0
	jsr ea9
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseNotCommand
.o 1 0
e_Parsing_nparseNotCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea9
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseNotCommand
	jsr_eval 5
.d 6 0
	jmp s9
.o 3 0
ea9
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s9
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.45
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.45
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//not instruction\nA=M-1\nM=!M\nD=M\n@0\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.46
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.46
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseOrCommand
.descexp e_Parsing_dparseOrCommand e_Parsing_nparseOrCommand e_Parsing_lparseOrCommand 3 0 "parseOrCommand"
.a 0 a8
.o 2 0
e_Parsing_lparseOrCommand
	repl_args 2 2
.o 3 0
a8
.d 3 0
	jsr ea8
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseOrCommand
.o 1 0
e_Parsing_nparseOrCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea8
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseOrCommand
	jsr_eval 5
.d 6 0
	jmp s8
.o 3 0
ea8
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s8
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.47
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.47
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//or instruction\nA=M-1\nD=M\nA=A-1\nD=D|M\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.48
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.48
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseAndCommand
.descexp e_Parsing_dparseAndCommand e_Parsing_nparseAndCommand e_Parsing_lparseAndCommand 3 0 "parseAndCommand"
.a 0 a7
.o 2 0
e_Parsing_lparseAndCommand
	repl_args 2 2
.o 3 0
a7
.d 3 0
	jsr ea7
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseAndCommand
.o 1 0
e_Parsing_nparseAndCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea7
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseAndCommand
	jsr_eval 5
.d 6 0
	jmp s7
.o 3 0
ea7
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s7
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.49
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.49
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//and instruction\nA=M-1\nD=M\nA=A-1\nD=D&M\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.50
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.50
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseNegCommand
.descexp e_Parsing_dparseNegCommand e_Parsing_nparseNegCommand e_Parsing_lparseNegCommand 3 0 "parseNegCommand"
.a 0 a6
.o 2 0
e_Parsing_lparseNegCommand
	repl_args 2 2
.o 3 0
a6
.d 3 0
	jsr ea6
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseNegCommand
.o 1 0
e_Parsing_nparseNegCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea6
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseNegCommand
	jsr_eval 5
.d 6 0
	jmp s6
.o 3 0
ea6
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s6
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.51
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.51
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//neg instruction\nA=M-1\nM=-M\nD=M\n@0\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.52
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.52
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseSubCommand
.descexp e_Parsing_dparseSubCommand e_Parsing_nparseSubCommand e_Parsing_lparseSubCommand 3 0 "parseSubCommand"
.a 0 a5
.o 2 0
e_Parsing_lparseSubCommand
	repl_args 2 2
.o 3 0
a5
.d 3 0
	jsr ea5
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseSubCommand
.o 1 0
e_Parsing_nparseSubCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea5
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseSubCommand
	jsr_eval 5
.d 6 0
	jmp s5
.o 3 0
ea5
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s5
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.53
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.53
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//sub instruction\nA=M-1\nD=M\nA=A-1\nD=M-D\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.54
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.54
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseAddCommand
.descexp e_Parsing_dparseAddCommand e_Parsing_nparseAddCommand e_Parsing_lparseAddCommand 3 0 "parseAddCommand"
.a 0 a4
.o 2 0
e_Parsing_lparseAddCommand
	repl_args 2 2
.o 3 0
a4
.d 3 0
	jsr ea4
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseAddCommand
.o 1 0
e_Parsing_nparseAddCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea4
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseAddCommand
	jsr_eval 5
.d 6 0
	jmp s4
.o 3 0
ea4
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s4
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.55
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.55
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//add instruction\nA=M-1\nD=M\nA=A-1\nD=M+D\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.56
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.56
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseReturn
.descexp e_Parsing_dparseReturn e_Parsing_nparseReturn e_Parsing_lparseReturn 4 0 "parseReturn"
.a 0 a34
.o 2 0
e_Parsing_lparseReturn
	repl_args 3 3
.o 4 0
a34
.d 4 0
	jsr ea34
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseReturn
.o 1 0
e_Parsing_nparseReturn
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea34
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseReturn
	jsr_eval 6
.d 7 0
	jmp s34
.o 4 0
ea34
	jsr_eval 3
	jsr_eval 0
	repl_r_args 4 0
.o 7 0
s34
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.57
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.57
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "@LCL\nD=M\n@5\nA=D-A\nD=M\n@13\nM=D\n@SP\nM=M-1\nA=M\nD=M\n@ARG\nA=M\nM=D\n@ARG\nD=M\n@SP\nM=D+1\n@LCL\nM=M-1\nA=M\nD=M\n@THAT\nM=D\n@LCL\nM=M-1\nA=M\nD=M\n@THIS\nM=D\n@LCL\nM=M-1\nA=M\nD=M\n@ARG\nM=D\n@LCL\nM=M-1\nA=M\nD=M\n@LCL\nM=D\n@13\nA=M\n0;JMP\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.58
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.58
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseFunction
.descexp e_Parsing_dparseFunction e_Parsing_nparseFunction e_Parsing_lparseFunction 4 0 "parseFunction"
.a 0 a33
.o 2 0
e_Parsing_lparseFunction
	repl_args 3 3
.o 4 0
a33
.d 4 0
	jsr ea33
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseFunction
.o 1 0
e_Parsing_nparseFunction
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseFunction
	jsr_eval 6
	jsr_eval 4
	push_array 4
	update_a 0 5
	pop_a 1
.d 7 0
	jmp s33
.o 4 0
ea33
	jsr_eval 3
	jsr_eval 1
	jsr_eval 0
	push_array 1
	push_r_args 1 4 0
	update_a 4 6
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 7 0
s33
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.59
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.59
	push_a 5
	buildh ARRAY 1
	build _ 1 n35
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n145
	push_a 4
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.60
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.60
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea145
.o 1 0
n145
	push_node _cycle_in_spine 2
.o 3 0
ea145
.o 3 0
s145
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	update_a 1 2
	updatepop_a 0 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	buildAC ".End)\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "("
.d 2 0
	jsr catAC
.o 1 0
	buildAC ".Loop\nD=D-1;JNE\n"
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ".Loop)\n@SP\nA=M\nM=0\n@SP\nM=M+1\n@"
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ".End\nD;JEQ\n("
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD=A\n@"
.d 2 0
	jsr catAC
.o 1 0
	pushI 2
	push_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\n@"
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 1
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "("
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.export e_Parsing_sparseCall
.descexp e_Parsing_dparseCall e_Parsing_nparseCall e_Parsing_lparseCall 4 0 "parseCall"
.a 0 a32
.o 2 0
e_Parsing_lparseCall
	repl_args 3 3
.o 4 0
a32
.d 4 0
	jsr ea32
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseCall
.o 1 0
e_Parsing_nparseCall
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea32
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseCall
	jsr_eval 6
	jsr_eval 5
	push_array 5
	jsr_eval 5
	push_array 5
	update_a 1 7
	update_a 0 6
	pop_a 2
.d 7 0
	jmp s32
.o 4 0
ea32
	jsr_eval 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	push_array 2
	push_array 2
	push_r_args 2 4 0
	update_a 5 8
	update_a 2 5
	update_a 4 7
	update_a 1 4
	update_a 3 6
	update_a 0 3
	pop_a 3
.o 7 0
s32
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.61
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.61
	push_a 5
	buildh ARRAY 1
	build _ 1 n35
	buildAC "D=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n"
	buildh ARRAY 1
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	push_a 4
	push_a 12
	build _ 4 n146
	push_a 5
	update_a 11 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.62
	buildAC "failed to close"
	updatepop_a 0 4
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.62
	push_arg 0 2 2
	buildB_b 0
	update_a 1 5
	updatepop_a 0 4
	pop_b 1
.d 2 0
	rtn
.n 4 _ ea146
.o 1 0
n146
	push_node _cycle_in_spine 4
.o 5 0
ea146
.o 5 0
s146
	push_a 3
	jsr_eval 0
	pushF_a 4
	pop_a 1
	push_a 1
	jsr_eval 0
	pushI 1
	buildh _Nil 0
	update_a 0 5
	pop_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	buildAC ".ReturnAddress)\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n("
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 2
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD=D-A\n@ARG\nM=D\n@SP\nD=M\n@LCL\nM=D\n@"
.d 2 0
	jsr catAC
.o 1 0
	pushI 2
	push_a 2
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
.d 0 1 i
	jsr ItoAC
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@THAT\n@SP\nD=M\n@"
.d 2 0
	jsr catAC
.o 1 0
	push_array 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@THIS\n"
.d 2 0
	jsr catAC
.o 1 0
	push_array 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@ARG\n"
.d 2 0
	jsr catAC
.o 1 0
	push_array 3
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
	buildAC "ReturnAddress\n@LCL\n"
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea35
.o 1 0
n35
	push_node _cycle_in_spine 1
.o 2 0
ea35
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
.o 2 0
s35
	create
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr e_StdList_sfromString;78
.o 1 0
.d 2 0
	jmp s37
.n 1 _ ea37
.o 1 0
n37
	push_node _cycle_in_spine 1
.o 2 0
ea37
	jsr_eval 0
.o 2 0
s37
	eq_desc _Nil 0 0
	jmp_true case.63
	jmp case.64
case.63
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
case.64
	push_args 0 2 2
	update_a 0 1
	pop_a 1
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	pop_a 1
.d 0 1 c
	jsr e_StdChar_sisSpace
.o 0 1 b
	jmp_false else.65
	buildh e_StdChar_disSpace 0
	create
	push_a 2
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr e_StdList_sdropWhile
.o 1 0
.d 2 0
	jmp s37
else.65
	buildh d106 0
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build e_StdList_dspan 2 e_StdList_nspan
	push_a 0
	build d_S.2 -1 n_S.2
	build _ 1 n37
	push_a 1
	build d_S.1 -1 n_S.1
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	fillh _Cons 2 4
	pop_a 2
.d 1 0
	rtn
.desc d106 _hnf l106 1 0 "<lambda>[line:15];13;105"
.o 2 0
l106
	pop_a 1
.d 1 0
	jsr ea106
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
ea106
	jsr_eval 0
	pushC_a 0
	pop_a 1
.o 0 1 c
s106
	push_b 0
	updatepop_b 0 1
.d 0 1 c
	jsr e_StdChar_sisSpace
.o 0 1 b
	notB
.d 0 1 b
	rtn
.export e_Parsing_sparseIfGoto
.descexp e_Parsing_dparseIfGoto e_Parsing_nparseIfGoto e_Parsing_lparseIfGoto 4 0 "parseIfGoto"
.a 0 a31
.o 2 0
e_Parsing_lparseIfGoto
	repl_args 3 3
.o 4 0
a31
.d 4 0
	jsr ea31
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseIfGoto
.o 1 0
e_Parsing_nparseIfGoto
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea31
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseIfGoto
	jsr_eval 6
	jsr_eval 5
	push_array 5
	update_a 0 6
	pop_a 1
.d 7 0
	jmp s31
.o 4 0
ea31
	jsr_eval 3
	jsr_eval 2
	jsr_eval 0
	push_array 2
	push_r_args 1 4 0
	update_a 4 7
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 7 0
s31
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.66
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.66
	buildAC "if-goto "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n150
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n149
	build _ 2 n148
	push_a 11
	build _ 3 n147
	push_a 5
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.67
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.67
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea150
.o 1 0
n150
	push_node _cycle_in_spine 2
.o 3 0
ea150
.o 3 0
s150
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s104
.n 2 _ ea149
.o 1 0
n149
	push_node _cycle_in_spine 2
.o 3 0
ea149
.o 3 0
s149
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s103
.n 2 _ ea148
.o 1 0
n148
	push_node _cycle_in_spine 2
.o 3 0
ea148
.o 3 0
s148
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 3 _ ea147
.o 1 0
n147
	push_node _cycle_in_spine 3
.o 4 0
ea147
.o 4 0
s147
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	update_a 1 3
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD;JNE\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@"
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@SP\nM=M-1\nA=M\nD=M\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s103
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.68
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n241
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.68
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n241
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea241
.o 2 2 ii
s241
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s103
.o 2 2 ii
s104
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.69
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n242
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.69
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n242
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea242
.o 2 2 ii
s242
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s104
.export e_Parsing_sparseGoto
.descexp e_Parsing_dparseGoto e_Parsing_nparseGoto e_Parsing_lparseGoto 4 0 "parseGoto"
.a 0 a30
.o 2 0
e_Parsing_lparseGoto
	repl_args 3 3
.o 4 0
a30
.d 4 0
	jsr ea30
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseGoto
.o 1 0
e_Parsing_nparseGoto
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea30
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseGoto
	jsr_eval 6
	jsr_eval 5
	push_array 5
	update_a 0 6
	pop_a 1
.d 7 0
	jmp s30
.o 4 0
ea30
	jsr_eval 3
	jsr_eval 2
	jsr_eval 0
	push_array 2
	push_r_args 1 4 0
	update_a 4 7
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 7 0
s30
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.70
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.70
	buildAC "goto "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n154
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n153
	build _ 2 n152
	push_a 11
	build _ 3 n151
	push_a 5
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.71
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.71
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea154
.o 1 0
n154
	push_node _cycle_in_spine 2
.o 3 0
ea154
.o 3 0
s154
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s102
.n 2 _ ea153
.o 1 0
n153
	push_node _cycle_in_spine 2
.o 3 0
ea153
.o 3 0
s153
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s101
.n 2 _ ea152
.o 1 0
n152
	push_node _cycle_in_spine 2
.o 3 0
ea152
.o 3 0
s152
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 3 _ ea151
.o 1 0
n151
	push_node _cycle_in_spine 3
.o 4 0
ea151
.o 4 0
s151
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	update_a 1 3
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\n0;JMP\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s101
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.72
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n239
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.72
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n239
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea239
.o 2 2 ii
s239
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s101
.o 2 2 ii
s102
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.73
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n240
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.73
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n240
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea240
.o 2 2 ii
s240
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s102
.export e_Parsing_sparseLabel
.descexp e_Parsing_dparseLabel e_Parsing_nparseLabel e_Parsing_lparseLabel 4 0 "parseLabel"
.a 0 a29
.o 2 0
e_Parsing_lparseLabel
	repl_args 3 3
.o 4 0
a29
.d 4 0
	jsr ea29
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseLabel
.o 1 0
e_Parsing_nparseLabel
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea29
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseLabel
	jsr_eval 6
	jsr_eval 5
	push_array 5
	update_a 0 6
	pop_a 1
.d 7 0
	jmp s29
.o 4 0
ea29
	jsr_eval 3
	jsr_eval 2
	jsr_eval 0
	push_array 2
	push_r_args 1 4 0
	update_a 4 7
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 7 0
s29
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.74
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.74
	buildAC "label "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n157
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n156
	build _ 2 n155
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	push_a 12
	build _ 3 n158
	push_a 6
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.75
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.75
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 3 _ ea158
.o 1 0
n158
	push_node _cycle_in_spine 3
.o 4 0
ea158
.o 4 0
s158
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 1
	update_a 1 3
	updatepop_a 0 2
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC ")\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "("
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea157
.o 1 0
n157
	push_node _cycle_in_spine 2
.o 3 0
ea157
.o 3 0
s157
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s100
.n 2 _ ea156
.o 1 0
n156
	push_node _cycle_in_spine 2
.o 3 0
ea156
.o 3 0
s156
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s99
.n 2 _ ea155
.o 1 0
n155
	push_node _cycle_in_spine 2
.o 3 0
ea155
.o 3 0
s155
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 2 2 ii
s99
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.76
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n237
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.76
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n237
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea237
.o 2 2 ii
s237
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s99
.o 2 2 ii
s100
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.77
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n238
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.77
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n238
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea238
.o 2 2 ii
s238
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s100
.export e_Parsing_sparsePopPointer1
.descexp e_Parsing_dparsePopPointer1 e_Parsing_nparsePopPointer1 e_Parsing_lparsePopPointer1 3 0 "parsePopPointer1"
.a 0 a28
.o 2 0
e_Parsing_lparsePopPointer1
	repl_args 2 2
.o 3 0
a28
.d 3 0
	jsr ea28
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopPointer1
.o 1 0
e_Parsing_nparsePopPointer1
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea28
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopPointer1
	jsr_eval 5
.d 6 0
	jmp s28
.o 3 0
ea28
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s28
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.78
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.78
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//pop instruction\n@SP\nA=M-1\nD=M\n@THAT\nM=D\n@SP\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.79
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.79
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparsePushPointer1
.descexp e_Parsing_dparsePushPointer1 e_Parsing_nparsePushPointer1 e_Parsing_lparsePushPointer1 3 0 "parsePushPointer1"
.a 0 a26
.o 2 0
e_Parsing_lparsePushPointer1
	repl_args 2 2
.o 3 0
a26
.d 3 0
	jsr ea26
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushPointer1
.o 1 0
e_Parsing_nparsePushPointer1
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea26
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushPointer1
	jsr_eval 5
.d 6 0
	jmp s26
.o 3 0
ea26
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s26
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.80
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.80
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//push static instruction\n@THAT\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.81
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.81
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparsePopPointer0
.descexp e_Parsing_dparsePopPointer0 e_Parsing_nparsePopPointer0 e_Parsing_lparsePopPointer0 3 0 "parsePopPointer0"
.a 0 a27
.o 2 0
e_Parsing_lparsePopPointer0
	repl_args 2 2
.o 3 0
a27
.d 3 0
	jsr ea27
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopPointer0
.o 1 0
e_Parsing_nparsePopPointer0
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea27
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopPointer0
	jsr_eval 5
.d 6 0
	jmp s27
.o 3 0
ea27
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s27
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.82
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.82
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//pop instruction\n@SP\nA=M-1\nD=M\n@THIS\nM=D\n@SP\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.83
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.83
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparsePushPointer0
.descexp e_Parsing_dparsePushPointer0 e_Parsing_nparsePushPointer0 e_Parsing_lparsePushPointer0 3 0 "parsePushPointer0"
.a 0 a25
.o 2 0
e_Parsing_lparsePushPointer0
	repl_args 2 2
.o 3 0
a25
.d 3 0
	jsr ea25
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushPointer0
.o 1 0
e_Parsing_nparsePushPointer0
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea25
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushPointer0
	jsr_eval 5
.d 6 0
	jmp s25
.o 3 0
ea25
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s25
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.84
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.84
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//push static instruction\n@THIS\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.85
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.85
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparsePopTemp
.descexp e_Parsing_dparsePopTemp e_Parsing_nparsePopTemp e_Parsing_lparsePopTemp 3 0 "parsePopTemp"
.a 0 a24
.o 2 0
e_Parsing_lparsePopTemp
	repl_args 2 2
.o 3 0
a24
.d 3 0
	jsr ea24
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopTemp
.o 1 0
e_Parsing_nparsePopTemp
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea24
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopTemp
	jsr_eval 5
.d 6 0
	jmp s24
.o 3 0
ea24
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s24
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.86
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.86
	buildAC "pop temp "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n161
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n160
	build _ 2 n159
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n162
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.87
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.87
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea162
.o 1 0
n162
	push_node _cycle_in_spine 2
.o 3 0
ea162
.o 3 0
s162
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nM=D\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop temp instruction\n@SP\nA=M-1\nD=M\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea161
.o 1 0
n161
	push_node _cycle_in_spine 2
.o 3 0
ea161
.o 3 0
s161
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s98
.n 2 _ ea160
.o 1 0
n160
	push_node _cycle_in_spine 2
.o 3 0
ea160
.o 3 0
s160
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s97
.n 2 _ ea159
.o 1 0
n159
	push_node _cycle_in_spine 2
.o 3 0
ea159
.o 3 0
s159
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 2 2 ii
s97
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.88
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n235
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.88
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n235
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea235
.o 2 2 ii
s235
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s97
.o 2 2 ii
s98
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.89
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n236
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.89
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n236
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea236
.o 2 2 ii
s236
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s98
.export e_Parsing_sparsePopThat
.descexp e_Parsing_dparsePopThat e_Parsing_nparsePopThat e_Parsing_lparsePopThat 3 0 "parsePopThat"
.a 0 a23
.o 2 0
e_Parsing_lparsePopThat
	repl_args 2 2
.o 3 0
a23
.d 3 0
	jsr ea23
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopThat
.o 1 0
e_Parsing_nparsePopThat
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea23
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopThat
	jsr_eval 5
.d 6 0
	jmp s23
.o 3 0
ea23
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s23
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.90
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.90
	buildAC "pop that "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n166
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n165
	build _ 2 n164
	build _ 2 n163
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.91
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.91
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea166
.o 1 0
n166
	push_node _cycle_in_spine 2
.o 3 0
ea166
.o 3 0
s166
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s96
.n 2 _ ea165
.o 1 0
n165
	push_node _cycle_in_spine 2
.o 3 0
ea165
.o 3 0
s165
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s95
.n 2 _ ea164
.o 1 0
n164
	push_node _cycle_in_spine 2
.o 3 0
ea164
.o 3 0
s164
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea163
.o 1 0
n163
	push_node _cycle_in_spine 2
.o 3 0
ea163
.o 3 0
s163
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THAT\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop that instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s95
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.92
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n233
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.92
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n233
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea233
.o 2 2 ii
s233
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s95
.o 2 2 ii
s96
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.93
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n234
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.93
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n234
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea234
.o 2 2 ii
s234
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s96
.export e_Parsing_sparsePopThis
.descexp e_Parsing_dparsePopThis e_Parsing_nparsePopThis e_Parsing_lparsePopThis 3 0 "parsePopThis"
.a 0 a22
.o 2 0
e_Parsing_lparsePopThis
	repl_args 2 2
.o 3 0
a22
.d 3 0
	jsr ea22
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopThis
.o 1 0
e_Parsing_nparsePopThis
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea22
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopThis
	jsr_eval 5
.d 6 0
	jmp s22
.o 3 0
ea22
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s22
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.94
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.94
	buildAC "pop this "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n170
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n169
	build _ 2 n168
	build _ 2 n167
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.95
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.95
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea170
.o 1 0
n170
	push_node _cycle_in_spine 2
.o 3 0
ea170
.o 3 0
s170
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s94
.n 2 _ ea169
.o 1 0
n169
	push_node _cycle_in_spine 2
.o 3 0
ea169
.o 3 0
s169
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s93
.n 2 _ ea168
.o 1 0
n168
	push_node _cycle_in_spine 2
.o 3 0
ea168
.o 3 0
s168
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea167
.o 1 0
n167
	push_node _cycle_in_spine 2
.o 3 0
ea167
.o 3 0
s167
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THIS\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop this instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s93
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.96
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n231
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.96
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n231
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea231
.o 2 2 ii
s231
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s93
.o 2 2 ii
s94
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.97
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n232
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.97
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n232
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea232
.o 2 2 ii
s232
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s94
.export e_Parsing_sparsePopLocal
.descexp e_Parsing_dparsePopLocal e_Parsing_nparsePopLocal e_Parsing_lparsePopLocal 3 0 "parsePopLocal"
.a 0 a21
.o 2 0
e_Parsing_lparsePopLocal
	repl_args 2 2
.o 3 0
a21
.d 3 0
	jsr ea21
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopLocal
.o 1 0
e_Parsing_nparsePopLocal
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea21
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopLocal
	jsr_eval 5
.d 6 0
	jmp s21
.o 3 0
ea21
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s21
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.98
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.98
	buildAC "pop local "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n174
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n173
	build _ 2 n172
	build _ 2 n171
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.99
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.99
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea174
.o 1 0
n174
	push_node _cycle_in_spine 2
.o 3 0
ea174
.o 3 0
s174
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s92
.n 2 _ ea173
.o 1 0
n173
	push_node _cycle_in_spine 2
.o 3 0
ea173
.o 3 0
s173
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s91
.n 2 _ ea172
.o 1 0
n172
	push_node _cycle_in_spine 2
.o 3 0
ea172
.o 3 0
s172
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea171
.o 1 0
n171
	push_node _cycle_in_spine 2
.o 3 0
ea171
.o 3 0
s171
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@LCL\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop local instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s91
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.100
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n229
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.100
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n229
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea229
.o 2 2 ii
s229
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s91
.o 2 2 ii
s92
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.101
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n230
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.101
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n230
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea230
.o 2 2 ii
s230
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s92
.export e_Parsing_sparsePopArgument
.descexp e_Parsing_dparsePopArgument e_Parsing_nparsePopArgument e_Parsing_lparsePopArgument 3 0 "parsePopArgument"
.a 0 a20
.o 2 0
e_Parsing_lparsePopArgument
	repl_args 2 2
.o 3 0
a20
.d 3 0
	jsr ea20
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopArgument
.o 1 0
e_Parsing_nparsePopArgument
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea20
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopArgument
	jsr_eval 5
.d 6 0
	jmp s20
.o 3 0
ea20
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s20
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.102
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.102
	buildAC "pop argument "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n178
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n177
	build _ 2 n176
	build _ 2 n175
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.103
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.103
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea178
.o 1 0
n178
	push_node _cycle_in_spine 2
.o 3 0
ea178
.o 3 0
s178
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s90
.n 2 _ ea177
.o 1 0
n177
	push_node _cycle_in_spine 2
.o 3 0
ea177
.o 3 0
s177
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s89
.n 2 _ ea176
.o 1 0
n176
	push_node _cycle_in_spine 2
.o 3 0
ea176
.o 3 0
s176
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea175
.o 1 0
n175
	push_node _cycle_in_spine 2
.o 3 0
ea175
.o 3 0
s175
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@ARG\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop argument instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s89
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.104
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n227
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.104
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n227
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea227
.o 2 2 ii
s227
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s89
.o 2 2 ii
s90
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.105
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n228
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.105
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n228
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea228
.o 2 2 ii
s228
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s90
.export e_Parsing_sparsePopStatic
.descexp e_Parsing_dparsePopStatic e_Parsing_nparsePopStatic e_Parsing_lparsePopStatic 3 0 "parsePopStatic"
.a 0 a19
.o 2 0
e_Parsing_lparsePopStatic
	repl_args 2 2
.o 3 0
a19
.d 3 0
	jsr ea19
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopStatic
.o 1 0
e_Parsing_nparsePopStatic
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea19
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopStatic
	jsr_eval 5
.d 6 0
	jmp s19
.o 3 0
ea19
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s19
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.106
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.106
	buildAC "pop static "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n181
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n180
	build _ 2 n179
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n182
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.107
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.107
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea182
.o 1 0
n182
	push_node _cycle_in_spine 2
.o 3 0
ea182
.o 3 0
s182
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 16
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nM=D\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop static instruction\n@SP\nA=M-1\nD=M\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea181
.o 1 0
n181
	push_node _cycle_in_spine 2
.o 3 0
ea181
.o 3 0
s181
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s88
.n 2 _ ea180
.o 1 0
n180
	push_node _cycle_in_spine 2
.o 3 0
ea180
.o 3 0
s180
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s87
.n 2 _ ea179
.o 1 0
n179
	push_node _cycle_in_spine 2
.o 3 0
ea179
.o 3 0
s179
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 2 2 ii
s87
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.108
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n225
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.108
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n225
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea225
.o 2 2 ii
s225
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s87
.o 2 2 ii
s88
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.109
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n226
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.109
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n226
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea226
.o 2 2 ii
s226
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s88
.export e_Parsing_sparsePushTemp
.descexp e_Parsing_dparsePushTemp e_Parsing_nparsePushTemp e_Parsing_lparsePushTemp 3 0 "parsePushTemp"
.a 0 a18
.o 2 0
e_Parsing_lparsePushTemp
	repl_args 2 2
.o 3 0
a18
.d 3 0
	jsr ea18
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushTemp
.o 1 0
e_Parsing_nparsePushTemp
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea18
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushTemp
	jsr_eval 5
.d 6 0
	jmp s18
.o 3 0
ea18
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s18
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.110
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.110
	buildAC "push temp "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n185
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n184
	build _ 2 n183
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n186
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.111
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.111
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea186
.o 1 0
n186
	push_node _cycle_in_spine 2
.o 3 0
ea186
.o 3 0
s186
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push temp instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea185
.o 1 0
n185
	push_node _cycle_in_spine 2
.o 3 0
ea185
.o 3 0
s185
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s86
.n 2 _ ea184
.o 1 0
n184
	push_node _cycle_in_spine 2
.o 3 0
ea184
.o 3 0
s184
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s85
.n 2 _ ea183
.o 1 0
n183
	push_node _cycle_in_spine 2
.o 3 0
ea183
.o 3 0
s183
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 2 2 ii
s85
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.112
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n223
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.112
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n223
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea223
.o 2 2 ii
s223
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s85
.o 2 2 ii
s86
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.113
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n224
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.113
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n224
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea224
.o 2 2 ii
s224
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s86
.export e_Parsing_sparsePushThat
.descexp e_Parsing_dparsePushThat e_Parsing_nparsePushThat e_Parsing_lparsePushThat 3 0 "parsePushThat"
.a 0 a17
.o 2 0
e_Parsing_lparsePushThat
	repl_args 2 2
.o 3 0
a17
.d 3 0
	jsr ea17
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushThat
.o 1 0
e_Parsing_nparsePushThat
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea17
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushThat
	jsr_eval 5
.d 6 0
	jmp s17
.o 3 0
ea17
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s17
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.114
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.114
	buildAC "push that "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n190
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n189
	build _ 2 n188
	build _ 2 n187
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.115
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.115
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea190
.o 1 0
n190
	push_node _cycle_in_spine 2
.o 3 0
ea190
.o 3 0
s190
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s84
.n 2 _ ea189
.o 1 0
n189
	push_node _cycle_in_spine 2
.o 3 0
ea189
.o 3 0
s189
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s83
.n 2 _ ea188
.o 1 0
n188
	push_node _cycle_in_spine 2
.o 3 0
ea188
.o 3 0
s188
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea187
.o 1 0
n187
	push_node _cycle_in_spine 2
.o 3 0
ea187
.o 3 0
s187
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THAT\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push that instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s83
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.116
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n221
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.116
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n221
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea221
.o 2 2 ii
s221
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s83
.o 2 2 ii
s84
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.117
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n222
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.117
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n222
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea222
.o 2 2 ii
s222
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s84
.export e_Parsing_sparsePushThis
.descexp e_Parsing_dparsePushThis e_Parsing_nparsePushThis e_Parsing_lparsePushThis 3 0 "parsePushThis"
.a 0 a16
.o 2 0
e_Parsing_lparsePushThis
	repl_args 2 2
.o 3 0
a16
.d 3 0
	jsr ea16
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushThis
.o 1 0
e_Parsing_nparsePushThis
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea16
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushThis
	jsr_eval 5
.d 6 0
	jmp s16
.o 3 0
ea16
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s16
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.118
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.118
	buildAC "push this "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n194
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n193
	build _ 2 n192
	build _ 2 n191
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.119
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.119
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea194
.o 1 0
n194
	push_node _cycle_in_spine 2
.o 3 0
ea194
.o 3 0
s194
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s82
.n 2 _ ea193
.o 1 0
n193
	push_node _cycle_in_spine 2
.o 3 0
ea193
.o 3 0
s193
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s81
.n 2 _ ea192
.o 1 0
n192
	push_node _cycle_in_spine 2
.o 3 0
ea192
.o 3 0
s192
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea191
.o 1 0
n191
	push_node _cycle_in_spine 2
.o 3 0
ea191
.o 3 0
s191
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THIS\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push this instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s81
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.120
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n219
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.120
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n219
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea219
.o 2 2 ii
s219
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s81
.o 2 2 ii
s82
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.121
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n220
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.121
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n220
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea220
.o 2 2 ii
s220
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s82
.export e_Parsing_sparsePushLocal
.descexp e_Parsing_dparsePushLocal e_Parsing_nparsePushLocal e_Parsing_lparsePushLocal 3 0 "parsePushLocal"
.a 0 a15
.o 2 0
e_Parsing_lparsePushLocal
	repl_args 2 2
.o 3 0
a15
.d 3 0
	jsr ea15
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushLocal
.o 1 0
e_Parsing_nparsePushLocal
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea15
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushLocal
	jsr_eval 5
.d 6 0
	jmp s15
.o 3 0
ea15
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s15
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.122
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.122
	buildAC "push local "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n198
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n197
	build _ 2 n196
	build _ 2 n195
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.123
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.123
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea198
.o 1 0
n198
	push_node _cycle_in_spine 2
.o 3 0
ea198
.o 3 0
s198
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s80
.n 2 _ ea197
.o 1 0
n197
	push_node _cycle_in_spine 2
.o 3 0
ea197
.o 3 0
s197
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s79
.n 2 _ ea196
.o 1 0
n196
	push_node _cycle_in_spine 2
.o 3 0
ea196
.o 3 0
s196
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea195
.o 1 0
n195
	push_node _cycle_in_spine 2
.o 3 0
ea195
.o 3 0
s195
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@LCL\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push local instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s79
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.124
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n217
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.124
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n217
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea217
.o 2 2 ii
s217
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s79
.o 2 2 ii
s80
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.125
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n218
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.125
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n218
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea218
.o 2 2 ii
s218
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s80
.export e_Parsing_sparsePushArgument
.descexp e_Parsing_dparsePushArgument e_Parsing_nparsePushArgument e_Parsing_lparsePushArgument 3 0 "parsePushArgument"
.a 0 a14
.o 2 0
e_Parsing_lparsePushArgument
	repl_args 2 2
.o 3 0
a14
.d 3 0
	jsr ea14
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushArgument
.o 1 0
e_Parsing_nparsePushArgument
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea14
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushArgument
	jsr_eval 5
.d 6 0
	jmp s14
.o 3 0
ea14
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s14
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.126
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.126
	buildAC "push argument "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n202
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n201
	build _ 2 n200
	build _ 2 n199
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.127
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.127
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea202
.o 1 0
n202
	push_node _cycle_in_spine 2
.o 3 0
ea202
.o 3 0
s202
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s78
.n 2 _ ea201
.o 1 0
n201
	push_node _cycle_in_spine 2
.o 3 0
ea201
.o 3 0
s201
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s77
.n 2 _ ea200
.o 1 0
n200
	push_node _cycle_in_spine 2
.o 3 0
ea200
.o 3 0
s200
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea199
.o 1 0
n199
	push_node _cycle_in_spine 2
.o 3 0
ea199
.o 3 0
s199
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@ARG\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push argument instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s77
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.128
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n215
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.128
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n215
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea215
.o 2 2 ii
s215
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s77
.o 2 2 ii
s78
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.129
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n216
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.129
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n216
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea216
.o 2 2 ii
s216
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s78
.export e_Parsing_sparsePushStatic
.descexp e_Parsing_dparsePushStatic e_Parsing_nparsePushStatic e_Parsing_lparsePushStatic 3 0 "parsePushStatic"
.a 0 a13
.o 2 0
e_Parsing_lparsePushStatic
	repl_args 2 2
.o 3 0
a13
.d 3 0
	jsr ea13
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushStatic
.o 1 0
e_Parsing_nparsePushStatic
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea13
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushStatic
	jsr_eval 5
.d 6 0
	jmp s13
.o 3 0
ea13
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s13
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.130
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.130
	buildAC "push static "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n205
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n204
	build _ 2 n203
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n206
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.131
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.131
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea206
.o 1 0
n206
	push_node _cycle_in_spine 2
.o 3 0
ea206
.o 3 0
s206
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 16
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push static instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea205
.o 1 0
n205
	push_node _cycle_in_spine 2
.o 3 0
ea205
.o 3 0
s205
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s76
.n 2 _ ea204
.o 1 0
n204
	push_node _cycle_in_spine 2
.o 3 0
ea204
.o 3 0
s204
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s75
.n 2 _ ea203
.o 1 0
n203
	push_node _cycle_in_spine 2
.o 3 0
ea203
.o 3 0
s203
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 2 2 ii
s75
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.132
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n213
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.132
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n213
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea213
.o 2 2 ii
s213
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s75
.o 2 2 ii
s76
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.133
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n214
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.133
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n214
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea214
.o 2 2 ii
s214
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s76
.export e_Parsing_sparsePushConstant
.descexp e_Parsing_dparsePushConstant e_Parsing_nparsePushConstant e_Parsing_lparsePushConstant 3 0 "parsePushConstant"
.a 0 a3
.o 2 0
e_Parsing_lparsePushConstant
	repl_args 2 2
.o 3 0
a3
.d 3 0
	jsr ea3
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushConstant
.o 1 0
e_Parsing_nparsePushConstant
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea3
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushConstant
	jsr_eval 5
.d 6 0
	jmp s3
.o 3 0
ea3
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s3
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.134
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.134
	buildAC "push constant "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n210
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n209
	build _ 2 n208
	build _ 2 n207
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.135
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.135
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea210
.o 1 0
n210
	push_node _cycle_in_spine 2
.o 3 0
ea210
.o 3 0
s210
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s74
.n 2 _ ea209
.o 1 0
n209
	push_node _cycle_in_spine 2
.o 3 0
ea209
.o 3 0
s209
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s73
.n 2 _ ea208
.o 1 0
n208
	push_node _cycle_in_spine 2
.o 3 0
ea208
.o 3 0
s208
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea207
.o 1 0
n207
	push_node _cycle_in_spine 2
.o 3 0
ea207
.o 3 0
s207
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "D=A\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s73
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.136
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n211
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.136
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n211
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea211
.o 2 2 ii
s211
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s73
.o 2 2 ii
s74
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.137
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n212
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.137
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n212
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea212
.o 2 2 ii
s212
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s74
.o 8 0
s109
	buildAC "\n"
	push_a 5
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.138
	buildAC ""
	push_a 5
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.138
then.138
	push_a 7
	pushB TRUE
	updatepop_a 0 8
.d 1 1 b
	rtn
else.138
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "//"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.140
	push_a 7
	pushB TRUE
	updatepop_a 0 8
.d 1 1 b
	rtn
else.140
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push constant"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.141
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s141
else.141
	pushI 10
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push static"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.142
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s140
else.142
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push argument"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.143
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s139
else.143
	pushI 9
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push local"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.144
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s138
else.144
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push this"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.145
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s137
else.145
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push that"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.146
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s136
else.146
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push temp"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.147
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s135
else.147
	pushI 9
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop static"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.148
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s134
else.148
	pushI 11
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop argument"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.149
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s133
else.149
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop local"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.150
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s132
else.150
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop this"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.151
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s131
else.151
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop that"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.152
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s130
else.152
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop temp"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.153
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s129
else.153
	pushI 13
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push pointer 0"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.154
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s128
else.154
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop pointer 0"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.155
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s127
else.155
	pushI 13
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push pointer 1"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.156
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s126
else.156
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop pointer 1"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.157
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s125
else.157
	pushI 4
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "label"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.158
	push_a 7
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s124
else.158
	pushI 3
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "goto"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.159
	push_a 7
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s123
else.159
	pushI 6
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "if-goto"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.160
	push_a 7
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s122
else.160
	pushI 3
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "call"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.161
	push_a 7
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s121
else.161
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "function"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.162
	push_a 7
	jsr_eval 0
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s120
else.162
	pushI 5
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "return"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.163
	push_a 7
	jsr_eval 0
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jmp s119
else.163
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "add"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.164
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s118
else.164
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "sub"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.165
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s117
else.165
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "neg"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.166
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s116
else.166
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "and"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.167
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s115
else.167
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "or"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.168
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s114
else.168
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "not"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.169
	push_a 7
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 0
	jmp s113
else.169
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "eq"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.170
	push_a 7
	jsr_eval 0
	push_a 7
	jsr_eval 0
	pushI_a 8
	pop_a 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 1 i
	jmp s112
else.170
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "gt"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.171
	push_a 7
	jsr_eval 0
	push_a 7
	jsr_eval 0
	pushI_a 8
	pop_a 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 1 i
	jmp s111
else.171
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "lt"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.172
	push_a 7
	jsr_eval 0
	push_a 7
	jsr_eval 0
	pushI_a 8
	pop_a 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 6 1 i
	jmp s110
else.172
	push_a 7
	pushB FALSE
	updatepop_a 0 8
.d 1 1 b
	rtn
.o 6 1 i
s110
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.173
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.173
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n243
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.174
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.174
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea243
.o 1 0
n243
	push_node _cycle_in_spine 2
.o 3 0
ea243
.o 3 0
s243
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JLT\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// lt command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 1 i
s111
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.175
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.175
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n244
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.176
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.176
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea244
.o 1 0
n244
	push_node _cycle_in_spine 2
.o 3 0
ea244
.o 3 0
s244
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JGT\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// gt command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 1 i
s112
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.177
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.177
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n245
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.178
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.178
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea245
.o 1 0
n245
	push_node _cycle_in_spine 2
.o 3 0
ea245
.o 3 0
s245
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JEQ\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// eq command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s113
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.179
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.179
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//not instruction\nA=M-1\nM=!M\nD=M\n@0\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.180
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.180
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s114
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.181
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.181
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//or instruction\nA=M-1\nD=M\nA=A-1\nD=D|M\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.182
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.182
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s115
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.183
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.183
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//and instruction\nA=M-1\nD=M\nA=A-1\nD=D&M\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.184
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.184
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s116
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.185
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.185
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//neg instruction\nA=M-1\nM=-M\nD=M\n@0\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.186
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.186
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s117
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.187
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.187
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//sub instruction\nA=M-1\nD=M\nA=A-1\nD=M-D\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.188
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.188
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s118
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.189
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.189
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//add instruction\nA=M-1\nD=M\nA=A-1\nD=M+D\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.190
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.190
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 7 0
s119
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.191
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.191
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "@LCL\nD=M\n@5\nA=D-A\nD=M\n@13\nM=D\n@SP\nM=M-1\nA=M\nD=M\n@ARG\nA=M\nM=D\n@ARG\nD=M\n@SP\nM=D+1\n@LCL\nM=M-1\nA=M\nD=M\n@THAT\nM=D\n@LCL\nM=M-1\nA=M\nD=M\n@THIS\nM=D\n@LCL\nM=M-1\nA=M\nD=M\n@ARG\nM=D\n@LCL\nM=M-1\nA=M\nD=M\n@LCL\nM=D\n@13\nA=M\n0;JMP\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.192
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.192
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 7 0
s120
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.193
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.193
	push_a 5
	buildh ARRAY 1
	build _ 1 n35
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n246
	push_a 4
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.194
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.194
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea246
.o 1 0
n246
	push_node _cycle_in_spine 2
.o 3 0
ea246
.o 3 0
s246
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	update_a 1 2
	updatepop_a 0 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	buildAC ".End)\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "("
.d 2 0
	jsr catAC
.o 1 0
	buildAC ".Loop\nD=D-1;JNE\n"
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ".Loop)\n@SP\nA=M\nM=0\n@SP\nM=M+1\n@"
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ".End\nD;JEQ\n("
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD=A\n@"
.d 2 0
	jsr catAC
.o 1 0
	pushI 2
	push_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\n@"
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 1
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "("
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 7 0
s121
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.195
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.195
	push_a 5
	buildh ARRAY 1
	build _ 1 n35
	buildAC "D=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n"
	buildh ARRAY 1
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	push_a 4
	push_a 12
	build _ 4 n247
	push_a 5
	update_a 11 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.196
	buildAC "failed to close"
	updatepop_a 0 4
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.196
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 4
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 4 _ ea247
.o 1 0
n247
	push_node _cycle_in_spine 4
.o 5 0
ea247
.o 5 0
s247
	push_a 3
	jsr_eval 0
	pushF_a 4
	pop_a 1
	push_a 1
	jsr_eval 0
	pushI 1
	buildh _Nil 0
	update_a 0 5
	pop_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	buildAC ".ReturnAddress)\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n("
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 2
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD=D-A\n@ARG\nM=D\n@SP\nD=M\n@LCL\nM=D\n@"
.d 2 0
	jsr catAC
.o 1 0
	pushI 2
	push_a 2
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
.d 0 1 i
	jsr ItoAC
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@THAT\n@SP\nD=M\n@"
.d 2 0
	jsr catAC
.o 1 0
	push_array 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@THIS\n"
.d 2 0
	jsr catAC
.o 1 0
	push_array 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@ARG\n"
.d 2 0
	jsr catAC
.o 1 0
	push_array 3
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr catAC
.o 1 0
	buildAC "ReturnAddress\n@LCL\n"
.d 2 0
	jsr catAC
.o 1 0
	pushI 1
	push_a 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 7 0
s122
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.197
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.197
	buildAC "if-goto "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n251
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n250
	build _ 2 n249
	push_a 11
	build _ 3 n248
	push_a 5
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.198
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.198
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea251
.o 1 0
n251
	push_node _cycle_in_spine 2
.o 3 0
ea251
.o 3 0
s251
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s104
.n 2 _ ea250
.o 1 0
n250
	push_node _cycle_in_spine 2
.o 3 0
ea250
.o 3 0
s250
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s103
.n 2 _ ea249
.o 1 0
n249
	push_node _cycle_in_spine 2
.o 3 0
ea249
.o 3 0
s249
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 3 _ ea248
.o 1 0
n248
	push_node _cycle_in_spine 3
.o 4 0
ea248
.o 4 0
s248
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	update_a 1 3
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD;JNE\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@"
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@SP\nM=M-1\nA=M\nD=M\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 7 0
s123
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.199
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.199
	buildAC "goto "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n255
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n254
	build _ 2 n253
	push_a 11
	build _ 3 n252
	push_a 5
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.200
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.200
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea255
.o 1 0
n255
	push_node _cycle_in_spine 2
.o 3 0
ea255
.o 3 0
s255
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s102
.n 2 _ ea254
.o 1 0
n254
	push_node _cycle_in_spine 2
.o 3 0
ea254
.o 3 0
s254
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s101
.n 2 _ ea253
.o 1 0
n253
	push_node _cycle_in_spine 2
.o 3 0
ea253
.o 3 0
s253
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 3 _ ea252
.o 1 0
n252
	push_node _cycle_in_spine 3
.o 4 0
ea252
.o 4 0
s252
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	update_a 1 3
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\n0;JMP\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 7 0
s124
	push_a 6
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.201
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.201
	buildAC "label "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n258
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n257
	build _ 2 n256
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	push_a 12
	build _ 3 n259
	push_a 6
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.202
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.202
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 3 _ ea259
.o 1 0
n259
	push_node _cycle_in_spine 3
.o 4 0
ea259
.o 4 0
s259
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 1
	update_a 1 3
	updatepop_a 0 2
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC ")\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "("
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea258
.o 1 0
n258
	push_node _cycle_in_spine 2
.o 3 0
ea258
.o 3 0
s258
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s100
.n 2 _ ea257
.o 1 0
n257
	push_node _cycle_in_spine 2
.o 3 0
ea257
.o 3 0
s257
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s99
.n 2 _ ea256
.o 1 0
n256
	push_node _cycle_in_spine 2
.o 3 0
ea256
.o 3 0
s256
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 6 0
s125
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.203
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.203
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//pop instruction\n@SP\nA=M-1\nD=M\n@THAT\nM=D\n@SP\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.204
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.204
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s126
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.205
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.205
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//push static instruction\n@THAT\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.206
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.206
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s127
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.207
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.207
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//pop instruction\n@SP\nA=M-1\nD=M\n@THIS\nM=D\n@SP\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.208
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.208
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s128
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.209
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.209
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//push static instruction\n@THIS\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.210
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.210
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s129
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.211
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.211
	buildAC "pop temp "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n262
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n261
	build _ 2 n260
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n263
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.212
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.212
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea263
.o 1 0
n263
	push_node _cycle_in_spine 2
.o 3 0
ea263
.o 3 0
s263
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nM=D\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop temp instruction\n@SP\nA=M-1\nD=M\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea262
.o 1 0
n262
	push_node _cycle_in_spine 2
.o 3 0
ea262
.o 3 0
s262
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s98
.n 2 _ ea261
.o 1 0
n261
	push_node _cycle_in_spine 2
.o 3 0
ea261
.o 3 0
s261
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s97
.n 2 _ ea260
.o 1 0
n260
	push_node _cycle_in_spine 2
.o 3 0
ea260
.o 3 0
s260
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 6 0
s130
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.213
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.213
	buildAC "pop that "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n267
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n266
	build _ 2 n265
	build _ 2 n264
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.214
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.214
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea267
.o 1 0
n267
	push_node _cycle_in_spine 2
.o 3 0
ea267
.o 3 0
s267
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s96
.n 2 _ ea266
.o 1 0
n266
	push_node _cycle_in_spine 2
.o 3 0
ea266
.o 3 0
s266
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s95
.n 2 _ ea265
.o 1 0
n265
	push_node _cycle_in_spine 2
.o 3 0
ea265
.o 3 0
s265
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea264
.o 1 0
n264
	push_node _cycle_in_spine 2
.o 3 0
ea264
.o 3 0
s264
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THAT\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop that instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s131
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.215
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.215
	buildAC "pop this "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n271
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n270
	build _ 2 n269
	build _ 2 n268
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.216
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.216
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea271
.o 1 0
n271
	push_node _cycle_in_spine 2
.o 3 0
ea271
.o 3 0
s271
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s94
.n 2 _ ea270
.o 1 0
n270
	push_node _cycle_in_spine 2
.o 3 0
ea270
.o 3 0
s270
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s93
.n 2 _ ea269
.o 1 0
n269
	push_node _cycle_in_spine 2
.o 3 0
ea269
.o 3 0
s269
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea268
.o 1 0
n268
	push_node _cycle_in_spine 2
.o 3 0
ea268
.o 3 0
s268
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THIS\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop this instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s132
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.217
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.217
	buildAC "pop local "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n275
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n274
	build _ 2 n273
	build _ 2 n272
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.218
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.218
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea275
.o 1 0
n275
	push_node _cycle_in_spine 2
.o 3 0
ea275
.o 3 0
s275
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s92
.n 2 _ ea274
.o 1 0
n274
	push_node _cycle_in_spine 2
.o 3 0
ea274
.o 3 0
s274
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s91
.n 2 _ ea273
.o 1 0
n273
	push_node _cycle_in_spine 2
.o 3 0
ea273
.o 3 0
s273
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea272
.o 1 0
n272
	push_node _cycle_in_spine 2
.o 3 0
ea272
.o 3 0
s272
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@LCL\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop local instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s133
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.219
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.219
	buildAC "pop argument "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n279
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n278
	build _ 2 n277
	build _ 2 n276
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.220
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.220
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea279
.o 1 0
n279
	push_node _cycle_in_spine 2
.o 3 0
ea279
.o 3 0
s279
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s90
.n 2 _ ea278
.o 1 0
n278
	push_node _cycle_in_spine 2
.o 3 0
ea278
.o 3 0
s278
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s89
.n 2 _ ea277
.o 1 0
n277
	push_node _cycle_in_spine 2
.o 3 0
ea277
.o 3 0
s277
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea276
.o 1 0
n276
	push_node _cycle_in_spine 2
.o 3 0
ea276
.o 3 0
s276
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@ARG\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop argument instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s134
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.221
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.221
	buildAC "pop static "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n282
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n281
	build _ 2 n280
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n283
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.222
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.222
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea283
.o 1 0
n283
	push_node _cycle_in_spine 2
.o 3 0
ea283
.o 3 0
s283
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 16
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nM=D\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop static instruction\n@SP\nA=M-1\nD=M\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea282
.o 1 0
n282
	push_node _cycle_in_spine 2
.o 3 0
ea282
.o 3 0
s282
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s88
.n 2 _ ea281
.o 1 0
n281
	push_node _cycle_in_spine 2
.o 3 0
ea281
.o 3 0
s281
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s87
.n 2 _ ea280
.o 1 0
n280
	push_node _cycle_in_spine 2
.o 3 0
ea280
.o 3 0
s280
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 6 0
s135
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.223
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.223
	buildAC "push temp "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n286
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n285
	build _ 2 n284
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n287
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.224
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.224
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea287
.o 1 0
n287
	push_node _cycle_in_spine 2
.o 3 0
ea287
.o 3 0
s287
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push temp instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea286
.o 1 0
n286
	push_node _cycle_in_spine 2
.o 3 0
ea286
.o 3 0
s286
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s86
.n 2 _ ea285
.o 1 0
n285
	push_node _cycle_in_spine 2
.o 3 0
ea285
.o 3 0
s285
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s85
.n 2 _ ea284
.o 1 0
n284
	push_node _cycle_in_spine 2
.o 3 0
ea284
.o 3 0
s284
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 6 0
s136
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.225
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.225
	buildAC "push that "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n291
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n290
	build _ 2 n289
	build _ 2 n288
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.226
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.226
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea291
.o 1 0
n291
	push_node _cycle_in_spine 2
.o 3 0
ea291
.o 3 0
s291
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s84
.n 2 _ ea290
.o 1 0
n290
	push_node _cycle_in_spine 2
.o 3 0
ea290
.o 3 0
s290
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s83
.n 2 _ ea289
.o 1 0
n289
	push_node _cycle_in_spine 2
.o 3 0
ea289
.o 3 0
s289
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea288
.o 1 0
n288
	push_node _cycle_in_spine 2
.o 3 0
ea288
.o 3 0
s288
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THAT\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push that instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s137
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.227
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.227
	buildAC "push this "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n295
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n294
	build _ 2 n293
	build _ 2 n292
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.228
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.228
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea295
.o 1 0
n295
	push_node _cycle_in_spine 2
.o 3 0
ea295
.o 3 0
s295
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s82
.n 2 _ ea294
.o 1 0
n294
	push_node _cycle_in_spine 2
.o 3 0
ea294
.o 3 0
s294
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s81
.n 2 _ ea293
.o 1 0
n293
	push_node _cycle_in_spine 2
.o 3 0
ea293
.o 3 0
s293
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea292
.o 1 0
n292
	push_node _cycle_in_spine 2
.o 3 0
ea292
.o 3 0
s292
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THIS\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push this instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s138
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.229
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.229
	buildAC "push local "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n299
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n298
	build _ 2 n297
	build _ 2 n296
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.230
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.230
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea299
.o 1 0
n299
	push_node _cycle_in_spine 2
.o 3 0
ea299
.o 3 0
s299
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s80
.n 2 _ ea298
.o 1 0
n298
	push_node _cycle_in_spine 2
.o 3 0
ea298
.o 3 0
s298
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s79
.n 2 _ ea297
.o 1 0
n297
	push_node _cycle_in_spine 2
.o 3 0
ea297
.o 3 0
s297
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea296
.o 1 0
n296
	push_node _cycle_in_spine 2
.o 3 0
ea296
.o 3 0
s296
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@LCL\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push local instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s139
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.231
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.231
	buildAC "push argument "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n303
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n302
	build _ 2 n301
	build _ 2 n300
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.232
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.232
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea303
.o 1 0
n303
	push_node _cycle_in_spine 2
.o 3 0
ea303
.o 3 0
s303
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s78
.n 2 _ ea302
.o 1 0
n302
	push_node _cycle_in_spine 2
.o 3 0
ea302
.o 3 0
s302
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s77
.n 2 _ ea301
.o 1 0
n301
	push_node _cycle_in_spine 2
.o 3 0
ea301
.o 3 0
s301
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea300
.o 1 0
n300
	push_node _cycle_in_spine 2
.o 3 0
ea300
.o 3 0
s300
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@ARG\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push argument instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s140
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.233
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.233
	buildAC "push static "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n306
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n305
	build _ 2 n304
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n307
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.234
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.234
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea307
.o 1 0
n307
	push_node _cycle_in_spine 2
.o 3 0
ea307
.o 3 0
s307
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 16
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push static instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea306
.o 1 0
n306
	push_node _cycle_in_spine 2
.o 3 0
ea306
.o 3 0
s306
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s76
.n 2 _ ea305
.o 1 0
n305
	push_node _cycle_in_spine 2
.o 3 0
ea305
.o 3 0
s305
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s75
.n 2 _ ea304
.o 1 0
n304
	push_node _cycle_in_spine 2
.o 3 0
ea304
.o 3 0
s304
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 6 0
s141
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.235
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.235
	buildAC "push constant "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n311
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n310
	build _ 2 n309
	build _ 2 n308
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.236
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.236
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea311
.o 1 0
n311
	push_node _cycle_in_spine 2
.o 3 0
ea311
.o 3 0
s311
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s74
.n 2 _ ea310
.o 1 0
n310
	push_node _cycle_in_spine 2
.o 3 0
ea310
.o 3 0
s310
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s73
.n 2 _ ea309
.o 1 0
n309
	push_node _cycle_in_spine 2
.o 3 0
ea309
.o 3 0
s309
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea308
.o 1 0
n308
	push_node _cycle_in_spine 2
.o 3 0
ea308
.o 3 0
s308
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "D=A\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
