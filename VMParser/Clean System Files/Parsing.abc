.comp 920 000111010
.start _nostart_
.depend "_SystemEnumStrict" "20180913114337"
.depend "_SystemStrictLists" "20180913114337"
.depend "StdStrictLists" "20180913114337"
.depend "_SystemEnum" "20180913114337"
.depend "StdEnum" "20180913114337"
.depend "StdMisc" "20180913114337"
.depend "StdFunctions" "20180913114337"
.depend "StdCharList" "20180913114337"
.depend "StdTuple" "20180913114337"
.depend "StdOrdList" "20180913114337"
.depend "StdList" "20180913114337"
.depend "StdClass" "20180913114337"
.depend "StdFile" "20180913114337"
.depend "StdString" "20180913114337"
.depend "_SystemArray" "20180913114337"
.depend "StdArray" "20180913114337"
.depend "StdChar" "20180913114337"
.depend "StdReal" "20180913114337"
.depend "StdInt" "20180913114337"
.depend "StdOverloaded" "20180913114337"
.depend "StdBool" "20180913114337"
.depend "StdEnv" "20180913114337"
.depend "Parsing" "20190326101455"
.module m_Parsing "Parsing" "20190326150223"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod StdList
.implab e_StdList_sdrop
.implab e_StdList_slength;47
.impdesc e_StdList_dtoString;79
.implab e_StdList_stoString;79
.implab e_StdList_ntoString;79
.impmod StdFile
.impdesc e_StdFile_dfwrites
.implab e_StdFile_sfwrites
.implab e_StdFile_nfwrites
.impmod StdString
.implab e_StdString_s==;2
.impdesc e_StdString_dtoString;5
.implab e_StdString_stoString;5
.implab e_StdString_ntoString;5
.implab e_StdString_s%;10
.implab e_StdString_s+++;11
.impmod _SystemArray
.impdesc e__SystemArray_dusize;23
.implab e__SystemArray_nusize;23
.impmod StdInt
.impdesc e_StdInt_d+;6
.implab e_StdInt_s+;6
.implab e_StdInt_n+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s<;17
.implab e_StdInt_stoInt;23
.impmod StdBool
.implab e_StdBool_snot
.export e_Parsing_sparse
.descexp e_Parsing_dparse e_Parsing_nparse e_Parsing_lparse 4 0 "parse"
.a 0 a1
.o 2 0
e_Parsing_lparse
	repl_args 3 3
.o 4 0
a1
.d 4 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparse
.o 1 0
e_Parsing_nparse
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparse
	jsr_eval 4
.d 7 0
	jmp s1
.o 4 0
ea1
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 7 0
s1
	eq_desc _Nil 0 4
	jmp_true case.1
	jmp case.2
case.1
	push_a 6
	buildB TRUE
	update_a 1 8
	updatepop_a 0 7
.d 2 0
	rtn
case.2
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s82
.o 1 1 b
	push_b 0
	notB
	jmp_false else.3
	buildAC "\n"
	push_array 2
	pop_b 1
	update_a 1 11
	updatepop_a 0 10
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse line "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.3
	buildI 1
	push_a 9
	build _ 2 e_StdInt_n+;6
	push_a 3
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	pop_b 1
.d 7 0
	jmp s1
.export e_Parsing_sparseLine
.descexp e_Parsing_dparseLine e_Parsing_nparseLine e_Parsing_lparseLine 4 0 "parseLine"
.a 0 a2
.o 2 0
e_Parsing_lparseLine
	repl_args 3 3
.o 4 0
a2
.d 4 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseLine
.o 1 0
e_Parsing_nparseLine
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseLine
	jsr_eval 4
	push_array 4
	update_a 0 5
	pop_a 1
.d 7 0
	jmp s2
.o 4 0
ea2
	jsr_eval 1
	jsr_eval 0
	push_array 1
	push_r_args 1 4 0
	update_a 4 6
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 7 0
s2
	buildAC "\n"
	push_a 5
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.4
	buildAC ""
	push_a 5
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.4
then.4
	push_a 6
	buildB TRUE
	update_a 1 8
	updatepop_a 0 7
.d 2 0
	rtn
else.4
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "//"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.6
	push_a 6
	buildB TRUE
	update_a 1 8
	updatepop_a 0 7
.d 2 0
	rtn
else.6
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push constant"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.7
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s3
else.7
	pushI 10
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push static"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.8
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s13
else.8
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push argument"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.9
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s14
else.9
	pushI 9
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push local"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.10
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s15
else.10
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push this"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.11
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s16
else.11
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push that"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.12
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s17
else.12
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push temp"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.13
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s18
else.13
	pushI 9
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop static"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.14
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s19
else.14
	pushI 11
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop argument"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.15
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s20
else.15
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop local"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.16
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s21
else.16
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop this"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.17
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s22
else.17
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop that"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.18
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s23
else.18
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop temp"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.19
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s24
else.19
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "add"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.20
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s4
else.20
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "sub"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.21
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s5
else.21
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "neg"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.22
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s6
else.22
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "and"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.23
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s7
else.23
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "or"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.24
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s8
else.24
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "not"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.25
	push_a 6
	jsr_eval 0
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s9
else.25
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "eq"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.26
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 1 i
	jmp s10
else.26
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "gt"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.27
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 1 i
	jmp s11
else.27
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "lt"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.28
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	push_a 5
	buildh ARRAY 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 1 i
	jmp s12
else.28
	push_a 6
	buildB FALSE
	update_a 1 8
	updatepop_a 0 7
.d 2 0
	rtn
.export e_Parsing_sparseLTCommand
.descexp e_Parsing_dparseLTCommand e_Parsing_nparseLTCommand e_Parsing_lparseLTCommand 4 0 "parseLTCommand"
.a 0 a12
.o 2 0
e_Parsing_lparseLTCommand
	repl_args 3 3
.o 4 0
a12
.d 4 0
	jsr ea12
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseLTCommand
.o 1 0
e_Parsing_nparseLTCommand
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea12
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseLTCommand
	jsr_eval 6
	jsr_eval 5
	pushI_a 5
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 6 1 i
	jmp s12
.o 4 0
ea12
	jsr_eval 3
	jsr_eval 2
	jsr_eval 0
	pushI_a 2
	repl_r_args 4 0
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.o 6 1 i
s12
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.29
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.29
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n105
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.30
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.30
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea105
.o 1 0
n105
	push_node _cycle_in_spine 2
.o 3 0
ea105
.o 3 0
s105
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JLT\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// lt command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.export e_Parsing_sparseGTCommand
.descexp e_Parsing_dparseGTCommand e_Parsing_nparseGTCommand e_Parsing_lparseGTCommand 4 0 "parseGTCommand"
.a 0 a11
.o 2 0
e_Parsing_lparseGTCommand
	repl_args 3 3
.o 4 0
a11
.d 4 0
	jsr ea11
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseGTCommand
.o 1 0
e_Parsing_nparseGTCommand
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea11
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseGTCommand
	jsr_eval 6
	jsr_eval 5
	pushI_a 5
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 6 1 i
	jmp s11
.o 4 0
ea11
	jsr_eval 3
	jsr_eval 2
	jsr_eval 0
	pushI_a 2
	repl_r_args 4 0
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.o 6 1 i
s11
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.31
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.31
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n106
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.32
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.32
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea106
.o 1 0
n106
	push_node _cycle_in_spine 2
.o 3 0
ea106
.o 3 0
s106
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JGT\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// gt command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.export e_Parsing_sparseEQCommand
.descexp e_Parsing_dparseEQCommand e_Parsing_nparseEQCommand e_Parsing_lparseEQCommand 4 0 "parseEQCommand"
.a 0 a10
.o 2 0
e_Parsing_lparseEQCommand
	repl_args 3 3
.o 4 0
a10
.d 4 0
	jsr ea10
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 4 e_Parsing_dparseEQCommand
.o 1 0
e_Parsing_nparseEQCommand
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea10
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
e_Parsing_sparseEQCommand
	jsr_eval 6
	jsr_eval 5
	pushI_a 5
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 6 1 i
	jmp s10
.o 4 0
ea10
	jsr_eval 3
	jsr_eval 2
	jsr_eval 0
	pushI_a 2
	repl_r_args 4 0
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
.o 6 1 i
s10
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.33
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.33
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n107
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.34
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.34
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea107
.o 1 0
n107
	push_node _cycle_in_spine 2
.o 3 0
ea107
.o 3 0
s107
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JEQ\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// eq command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.export e_Parsing_sparseNotCommand
.descexp e_Parsing_dparseNotCommand e_Parsing_nparseNotCommand e_Parsing_lparseNotCommand 3 0 "parseNotCommand"
.a 0 a9
.o 2 0
e_Parsing_lparseNotCommand
	repl_args 2 2
.o 3 0
a9
.d 3 0
	jsr ea9
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseNotCommand
.o 1 0
e_Parsing_nparseNotCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea9
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseNotCommand
	jsr_eval 5
.d 6 0
	jmp s9
.o 3 0
ea9
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s9
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.35
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.35
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//not instruction\nA=M-1\nM=!M\nD=M\n@0\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.36
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.36
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseOrCommand
.descexp e_Parsing_dparseOrCommand e_Parsing_nparseOrCommand e_Parsing_lparseOrCommand 3 0 "parseOrCommand"
.a 0 a8
.o 2 0
e_Parsing_lparseOrCommand
	repl_args 2 2
.o 3 0
a8
.d 3 0
	jsr ea8
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseOrCommand
.o 1 0
e_Parsing_nparseOrCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea8
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseOrCommand
	jsr_eval 5
.d 6 0
	jmp s8
.o 3 0
ea8
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s8
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.37
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.37
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//or instruction\nA=M-1\nD=M\nA=A-1\nD=D|M\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.38
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.38
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseAndCommand
.descexp e_Parsing_dparseAndCommand e_Parsing_nparseAndCommand e_Parsing_lparseAndCommand 3 0 "parseAndCommand"
.a 0 a7
.o 2 0
e_Parsing_lparseAndCommand
	repl_args 2 2
.o 3 0
a7
.d 3 0
	jsr ea7
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseAndCommand
.o 1 0
e_Parsing_nparseAndCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea7
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseAndCommand
	jsr_eval 5
.d 6 0
	jmp s7
.o 3 0
ea7
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s7
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.39
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.39
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//and instruction\nA=M-1\nD=M\nA=A-1\nD=D&M\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.40
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.40
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseNegCommand
.descexp e_Parsing_dparseNegCommand e_Parsing_nparseNegCommand e_Parsing_lparseNegCommand 3 0 "parseNegCommand"
.a 0 a6
.o 2 0
e_Parsing_lparseNegCommand
	repl_args 2 2
.o 3 0
a6
.d 3 0
	jsr ea6
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseNegCommand
.o 1 0
e_Parsing_nparseNegCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea6
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseNegCommand
	jsr_eval 5
.d 6 0
	jmp s6
.o 3 0
ea6
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s6
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.41
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.41
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//neg instruction\nA=M-1\nM=-M\nD=M\n@0\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.42
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.42
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseSubCommand
.descexp e_Parsing_dparseSubCommand e_Parsing_nparseSubCommand e_Parsing_lparseSubCommand 3 0 "parseSubCommand"
.a 0 a5
.o 2 0
e_Parsing_lparseSubCommand
	repl_args 2 2
.o 3 0
a5
.d 3 0
	jsr ea5
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseSubCommand
.o 1 0
e_Parsing_nparseSubCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea5
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseSubCommand
	jsr_eval 5
.d 6 0
	jmp s5
.o 3 0
ea5
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s5
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.43
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.43
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//sub instruction\nA=M-1\nD=M\nA=A-1\nD=M-D\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.44
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.44
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparseAddCommand
.descexp e_Parsing_dparseAddCommand e_Parsing_nparseAddCommand e_Parsing_lparseAddCommand 3 0 "parseAddCommand"
.a 0 a4
.o 2 0
e_Parsing_lparseAddCommand
	repl_args 2 2
.o 3 0
a4
.d 3 0
	jsr ea4
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparseAddCommand
.o 1 0
e_Parsing_nparseAddCommand
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea4
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparseAddCommand
	jsr_eval 5
.d 6 0
	jmp s4
.o 3 0
ea4
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s4
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.45
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.45
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//add instruction\nA=M-1\nD=M\nA=A-1\nD=M+D\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.46
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.46
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.export e_Parsing_sparsePopTemp
.descexp e_Parsing_dparsePopTemp e_Parsing_nparsePopTemp e_Parsing_lparsePopTemp 3 0 "parsePopTemp"
.a 0 a24
.o 2 0
e_Parsing_lparsePopTemp
	repl_args 2 2
.o 3 0
a24
.d 3 0
	jsr ea24
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopTemp
.o 1 0
e_Parsing_nparsePopTemp
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea24
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopTemp
	jsr_eval 5
.d 6 0
	jmp s24
.o 3 0
ea24
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s24
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.47
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.47
	buildAC "pop temp "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n110
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n109
	build _ 2 n108
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n111
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.48
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.48
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea111
.o 1 0
n111
	push_node _cycle_in_spine 2
.o 3 0
ea111
.o 3 0
s111
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nM=D\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop temp instruction\n@SP\nA=M-1\nD=M\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea110
.o 1 0
n110
	push_node _cycle_in_spine 2
.o 3 0
ea110
.o 3 0
s110
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s79
.n 2 _ ea109
.o 1 0
n109
	push_node _cycle_in_spine 2
.o 3 0
ea109
.o 3 0
s109
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s78
.n 2 _ ea108
.o 1 0
n108
	push_node _cycle_in_spine 2
.o 3 0
ea108
.o 3 0
s108
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 2 2 ii
s78
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.49
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n184
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.49
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n184
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea184
.o 2 2 ii
s184
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s78
.o 2 2 ii
s79
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.50
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n185
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.50
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n185
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea185
.o 2 2 ii
s185
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s79
.export e_Parsing_sparsePopThat
.descexp e_Parsing_dparsePopThat e_Parsing_nparsePopThat e_Parsing_lparsePopThat 3 0 "parsePopThat"
.a 0 a23
.o 2 0
e_Parsing_lparsePopThat
	repl_args 2 2
.o 3 0
a23
.d 3 0
	jsr ea23
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopThat
.o 1 0
e_Parsing_nparsePopThat
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea23
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopThat
	jsr_eval 5
.d 6 0
	jmp s23
.o 3 0
ea23
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s23
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.51
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.51
	buildAC "pop that "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n115
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n114
	build _ 2 n113
	build _ 2 n112
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.52
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.52
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea115
.o 1 0
n115
	push_node _cycle_in_spine 2
.o 3 0
ea115
.o 3 0
s115
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s77
.n 2 _ ea114
.o 1 0
n114
	push_node _cycle_in_spine 2
.o 3 0
ea114
.o 3 0
s114
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s76
.n 2 _ ea113
.o 1 0
n113
	push_node _cycle_in_spine 2
.o 3 0
ea113
.o 3 0
s113
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea112
.o 1 0
n112
	push_node _cycle_in_spine 2
.o 3 0
ea112
.o 3 0
s112
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THAT\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop that instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s76
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.53
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n182
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.53
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n182
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea182
.o 2 2 ii
s182
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s76
.o 2 2 ii
s77
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.54
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n183
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.54
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n183
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea183
.o 2 2 ii
s183
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s77
.export e_Parsing_sparsePopThis
.descexp e_Parsing_dparsePopThis e_Parsing_nparsePopThis e_Parsing_lparsePopThis 3 0 "parsePopThis"
.a 0 a22
.o 2 0
e_Parsing_lparsePopThis
	repl_args 2 2
.o 3 0
a22
.d 3 0
	jsr ea22
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopThis
.o 1 0
e_Parsing_nparsePopThis
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea22
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopThis
	jsr_eval 5
.d 6 0
	jmp s22
.o 3 0
ea22
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s22
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.55
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.55
	buildAC "pop this "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n119
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n118
	build _ 2 n117
	build _ 2 n116
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.56
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.56
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea119
.o 1 0
n119
	push_node _cycle_in_spine 2
.o 3 0
ea119
.o 3 0
s119
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s75
.n 2 _ ea118
.o 1 0
n118
	push_node _cycle_in_spine 2
.o 3 0
ea118
.o 3 0
s118
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s74
.n 2 _ ea117
.o 1 0
n117
	push_node _cycle_in_spine 2
.o 3 0
ea117
.o 3 0
s117
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea116
.o 1 0
n116
	push_node _cycle_in_spine 2
.o 3 0
ea116
.o 3 0
s116
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THIS\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop this instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s74
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.57
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n180
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.57
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n180
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea180
.o 2 2 ii
s180
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s74
.o 2 2 ii
s75
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.58
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n181
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.58
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n181
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea181
.o 2 2 ii
s181
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s75
.export e_Parsing_sparsePopLocal
.descexp e_Parsing_dparsePopLocal e_Parsing_nparsePopLocal e_Parsing_lparsePopLocal 3 0 "parsePopLocal"
.a 0 a21
.o 2 0
e_Parsing_lparsePopLocal
	repl_args 2 2
.o 3 0
a21
.d 3 0
	jsr ea21
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopLocal
.o 1 0
e_Parsing_nparsePopLocal
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea21
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopLocal
	jsr_eval 5
.d 6 0
	jmp s21
.o 3 0
ea21
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s21
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.59
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.59
	buildAC "pop local "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n123
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n122
	build _ 2 n121
	build _ 2 n120
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.60
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.60
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea123
.o 1 0
n123
	push_node _cycle_in_spine 2
.o 3 0
ea123
.o 3 0
s123
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s73
.n 2 _ ea122
.o 1 0
n122
	push_node _cycle_in_spine 2
.o 3 0
ea122
.o 3 0
s122
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s72
.n 2 _ ea121
.o 1 0
n121
	push_node _cycle_in_spine 2
.o 3 0
ea121
.o 3 0
s121
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea120
.o 1 0
n120
	push_node _cycle_in_spine 2
.o 3 0
ea120
.o 3 0
s120
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@LCL\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop local instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s72
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.61
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n178
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.61
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n178
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea178
.o 2 2 ii
s178
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s72
.o 2 2 ii
s73
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.62
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n179
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.62
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n179
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea179
.o 2 2 ii
s179
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s73
.export e_Parsing_sparsePopArgument
.descexp e_Parsing_dparsePopArgument e_Parsing_nparsePopArgument e_Parsing_lparsePopArgument 3 0 "parsePopArgument"
.a 0 a20
.o 2 0
e_Parsing_lparsePopArgument
	repl_args 2 2
.o 3 0
a20
.d 3 0
	jsr ea20
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopArgument
.o 1 0
e_Parsing_nparsePopArgument
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea20
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopArgument
	jsr_eval 5
.d 6 0
	jmp s20
.o 3 0
ea20
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s20
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.63
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.63
	buildAC "pop argument "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n127
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n126
	build _ 2 n125
	build _ 2 n124
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.64
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.64
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea127
.o 1 0
n127
	push_node _cycle_in_spine 2
.o 3 0
ea127
.o 3 0
s127
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s71
.n 2 _ ea126
.o 1 0
n126
	push_node _cycle_in_spine 2
.o 3 0
ea126
.o 3 0
s126
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s70
.n 2 _ ea125
.o 1 0
n125
	push_node _cycle_in_spine 2
.o 3 0
ea125
.o 3 0
s125
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea124
.o 1 0
n124
	push_node _cycle_in_spine 2
.o 3 0
ea124
.o 3 0
s124
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@ARG\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop argument instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s70
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.65
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n176
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.65
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n176
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea176
.o 2 2 ii
s176
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s70
.o 2 2 ii
s71
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.66
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n177
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.66
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n177
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea177
.o 2 2 ii
s177
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s71
.export e_Parsing_sparsePopStatic
.descexp e_Parsing_dparsePopStatic e_Parsing_nparsePopStatic e_Parsing_lparsePopStatic 3 0 "parsePopStatic"
.a 0 a19
.o 2 0
e_Parsing_lparsePopStatic
	repl_args 2 2
.o 3 0
a19
.d 3 0
	jsr ea19
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePopStatic
.o 1 0
e_Parsing_nparsePopStatic
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea19
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePopStatic
	jsr_eval 5
.d 6 0
	jmp s19
.o 3 0
ea19
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s19
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.67
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.67
	buildAC "pop static "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n131
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n130
	build _ 2 n129
	build _ 2 n128
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.68
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.68
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea131
.o 1 0
n131
	push_node _cycle_in_spine 2
.o 3 0
ea131
.o 3 0
s131
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s69
.n 2 _ ea130
.o 1 0
n130
	push_node _cycle_in_spine 2
.o 3 0
ea130
.o 3 0
s130
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s68
.n 2 _ ea129
.o 1 0
n129
	push_node _cycle_in_spine 2
.o 3 0
ea129
.o 3 0
s129
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea128
.o 1 0
n128
	push_node _cycle_in_spine 2
.o 3 0
ea128
.o 3 0
s128
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "/// TODO"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop static instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s68
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.69
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n174
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.69
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n174
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea174
.o 2 2 ii
s174
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s68
.o 2 2 ii
s69
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.70
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n175
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.70
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n175
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea175
.o 2 2 ii
s175
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s69
.export e_Parsing_sparsePushTemp
.descexp e_Parsing_dparsePushTemp e_Parsing_nparsePushTemp e_Parsing_lparsePushTemp 3 0 "parsePushTemp"
.a 0 a18
.o 2 0
e_Parsing_lparsePushTemp
	repl_args 2 2
.o 3 0
a18
.d 3 0
	jsr ea18
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushTemp
.o 1 0
e_Parsing_nparsePushTemp
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea18
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushTemp
	jsr_eval 5
.d 6 0
	jmp s18
.o 3 0
ea18
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s18
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.71
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.71
	buildAC "push temp "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n134
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n133
	build _ 2 n132
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n135
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.72
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.72
	push_arg 0 2 2
	buildB_b 0
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea135
.o 1 0
n135
	push_node _cycle_in_spine 2
.o 3 0
ea135
.o 3 0
s135
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push temp instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea134
.o 1 0
n134
	push_node _cycle_in_spine 2
.o 3 0
ea134
.o 3 0
s134
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s67
.n 2 _ ea133
.o 1 0
n133
	push_node _cycle_in_spine 2
.o 3 0
ea133
.o 3 0
s133
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s66
.n 2 _ ea132
.o 1 0
n132
	push_node _cycle_in_spine 2
.o 3 0
ea132
.o 3 0
s132
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 2 2 ii
s66
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.73
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n172
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.73
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n172
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea172
.o 2 2 ii
s172
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s66
.o 2 2 ii
s67
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.74
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n173
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.74
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n173
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea173
.o 2 2 ii
s173
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s67
.export e_Parsing_sparsePushThat
.descexp e_Parsing_dparsePushThat e_Parsing_nparsePushThat e_Parsing_lparsePushThat 3 0 "parsePushThat"
.a 0 a17
.o 2 0
e_Parsing_lparsePushThat
	repl_args 2 2
.o 3 0
a17
.d 3 0
	jsr ea17
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushThat
.o 1 0
e_Parsing_nparsePushThat
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea17
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushThat
	jsr_eval 5
.d 6 0
	jmp s17
.o 3 0
ea17
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s17
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.75
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.75
	buildAC "push that "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n139
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n138
	build _ 2 n137
	build _ 2 n136
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.76
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.76
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea139
.o 1 0
n139
	push_node _cycle_in_spine 2
.o 3 0
ea139
.o 3 0
s139
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s65
.n 2 _ ea138
.o 1 0
n138
	push_node _cycle_in_spine 2
.o 3 0
ea138
.o 3 0
s138
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s64
.n 2 _ ea137
.o 1 0
n137
	push_node _cycle_in_spine 2
.o 3 0
ea137
.o 3 0
s137
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea136
.o 1 0
n136
	push_node _cycle_in_spine 2
.o 3 0
ea136
.o 3 0
s136
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THAT\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push that instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s64
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.77
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n170
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.77
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n170
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea170
.o 2 2 ii
s170
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s64
.o 2 2 ii
s65
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.78
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n171
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.78
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n171
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea171
.o 2 2 ii
s171
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s65
.export e_Parsing_sparsePushThis
.descexp e_Parsing_dparsePushThis e_Parsing_nparsePushThis e_Parsing_lparsePushThis 3 0 "parsePushThis"
.a 0 a16
.o 2 0
e_Parsing_lparsePushThis
	repl_args 2 2
.o 3 0
a16
.d 3 0
	jsr ea16
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushThis
.o 1 0
e_Parsing_nparsePushThis
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea16
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushThis
	jsr_eval 5
.d 6 0
	jmp s16
.o 3 0
ea16
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s16
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.79
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.79
	buildAC "push this "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n143
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n142
	build _ 2 n141
	build _ 2 n140
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.80
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.80
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea143
.o 1 0
n143
	push_node _cycle_in_spine 2
.o 3 0
ea143
.o 3 0
s143
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s63
.n 2 _ ea142
.o 1 0
n142
	push_node _cycle_in_spine 2
.o 3 0
ea142
.o 3 0
s142
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s62
.n 2 _ ea141
.o 1 0
n141
	push_node _cycle_in_spine 2
.o 3 0
ea141
.o 3 0
s141
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea140
.o 1 0
n140
	push_node _cycle_in_spine 2
.o 3 0
ea140
.o 3 0
s140
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THIS\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push this instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s62
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.81
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n168
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.81
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n168
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea168
.o 2 2 ii
s168
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s62
.o 2 2 ii
s63
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.82
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n169
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.82
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n169
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea169
.o 2 2 ii
s169
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s63
.export e_Parsing_sparsePushLocal
.descexp e_Parsing_dparsePushLocal e_Parsing_nparsePushLocal e_Parsing_lparsePushLocal 3 0 "parsePushLocal"
.a 0 a15
.o 2 0
e_Parsing_lparsePushLocal
	repl_args 2 2
.o 3 0
a15
.d 3 0
	jsr ea15
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushLocal
.o 1 0
e_Parsing_nparsePushLocal
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea15
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushLocal
	jsr_eval 5
.d 6 0
	jmp s15
.o 3 0
ea15
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s15
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.83
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.83
	buildAC "push local "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n147
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n146
	build _ 2 n145
	build _ 2 n144
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.84
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.84
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea147
.o 1 0
n147
	push_node _cycle_in_spine 2
.o 3 0
ea147
.o 3 0
s147
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s61
.n 2 _ ea146
.o 1 0
n146
	push_node _cycle_in_spine 2
.o 3 0
ea146
.o 3 0
s146
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s60
.n 2 _ ea145
.o 1 0
n145
	push_node _cycle_in_spine 2
.o 3 0
ea145
.o 3 0
s145
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea144
.o 1 0
n144
	push_node _cycle_in_spine 2
.o 3 0
ea144
.o 3 0
s144
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@LCL\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push local instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s60
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.85
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n166
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.85
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n166
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea166
.o 2 2 ii
s166
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s60
.o 2 2 ii
s61
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.86
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n167
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.86
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n167
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea167
.o 2 2 ii
s167
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s61
.export e_Parsing_sparsePushArgument
.descexp e_Parsing_dparsePushArgument e_Parsing_nparsePushArgument e_Parsing_lparsePushArgument 3 0 "parsePushArgument"
.a 0 a14
.o 2 0
e_Parsing_lparsePushArgument
	repl_args 2 2
.o 3 0
a14
.d 3 0
	jsr ea14
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushArgument
.o 1 0
e_Parsing_nparsePushArgument
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea14
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushArgument
	jsr_eval 5
.d 6 0
	jmp s14
.o 3 0
ea14
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s14
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.87
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.87
	buildAC "push argument "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n151
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n150
	build _ 2 n149
	build _ 2 n148
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.88
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.88
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea151
.o 1 0
n151
	push_node _cycle_in_spine 2
.o 3 0
ea151
.o 3 0
s151
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s59
.n 2 _ ea150
.o 1 0
n150
	push_node _cycle_in_spine 2
.o 3 0
ea150
.o 3 0
s150
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s58
.n 2 _ ea149
.o 1 0
n149
	push_node _cycle_in_spine 2
.o 3 0
ea149
.o 3 0
s149
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea148
.o 1 0
n148
	push_node _cycle_in_spine 2
.o 3 0
ea148
.o 3 0
s148
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@ARG\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push argument instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s58
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.89
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n164
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.89
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n164
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea164
.o 2 2 ii
s164
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s58
.o 2 2 ii
s59
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.90
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n165
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.90
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n165
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea165
.o 2 2 ii
s165
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s59
.export e_Parsing_sparsePushStatic
.descexp e_Parsing_dparsePushStatic e_Parsing_nparsePushStatic e_Parsing_lparsePushStatic 3 0 "parsePushStatic"
.a 0 a13
.o 2 0
e_Parsing_lparsePushStatic
	repl_args 2 2
.o 3 0
a13
.d 3 0
	jsr ea13
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushStatic
.o 1 0
e_Parsing_nparsePushStatic
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea13
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushStatic
	jsr_eval 5
.d 6 0
	jmp s13
.o 3 0
ea13
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s13
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.91
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.91
	buildAC "push static "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n155
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n154
	build _ 2 n153
	build _ 2 n152
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.92
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.92
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea155
.o 1 0
n155
	push_node _cycle_in_spine 2
.o 3 0
ea155
.o 3 0
s155
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s57
.n 2 _ ea154
.o 1 0
n154
	push_node _cycle_in_spine 2
.o 3 0
ea154
.o 3 0
s154
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s56
.n 2 _ ea153
.o 1 0
n153
	push_node _cycle_in_spine 2
.o 3 0
ea153
.o 3 0
s153
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea152
.o 1 0
n152
	push_node _cycle_in_spine 2
.o 3 0
ea152
.o 3 0
s152
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@STATIC\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push static instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s56
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.93
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n162
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.93
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n162
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea162
.o 2 2 ii
s162
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s56
.o 2 2 ii
s57
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.94
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n163
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.94
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n163
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea163
.o 2 2 ii
s163
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s57
.export e_Parsing_sparsePushConstant
.descexp e_Parsing_dparsePushConstant e_Parsing_nparsePushConstant e_Parsing_lparsePushConstant 3 0 "parsePushConstant"
.a 0 a3
.o 2 0
e_Parsing_lparsePushConstant
	repl_args 2 2
.o 3 0
a3
.d 3 0
	jsr ea3
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_Parsing_dparsePushConstant
.o 1 0
e_Parsing_nparsePushConstant
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea3
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_Parsing_sparsePushConstant
	jsr_eval 5
.d 6 0
	jmp s3
.o 3 0
ea3
	jsr_eval 2
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s3
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.95
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.95
	buildAC "push constant "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n159
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n158
	build _ 2 n157
	build _ 2 n156
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.96
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.96
	push_arg 0 2 2
	buildB_b 0
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 2 _ ea159
.o 1 0
n159
	push_node _cycle_in_spine 2
.o 3 0
ea159
.o 3 0
s159
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s55
.n 2 _ ea158
.o 1 0
n158
	push_node _cycle_in_spine 2
.o 3 0
ea158
.o 3 0
s158
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s54
.n 2 _ ea157
.o 1 0
n157
	push_node _cycle_in_spine 2
.o 3 0
ea157
.o 3 0
s157
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea156
.o 1 0
n156
	push_node _cycle_in_spine 2
.o 3 0
ea156
.o 3 0
s156
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "D=A\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 2 2 ii
s54
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.97
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n160
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.97
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n160
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea160
.o 2 2 ii
s160
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s54
.o 2 2 ii
s55
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.98
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n161
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.98
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n161
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea161
.o 2 2 ii
s161
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s55
.o 7 0
s82
	buildAC "\n"
	push_a 5
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.99
	buildAC ""
	push_a 5
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.99
then.99
	push_a 6
	pushB TRUE
	updatepop_a 0 7
.d 1 1 b
	rtn
else.99
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "//"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.101
	push_a 6
	pushB TRUE
	updatepop_a 0 7
.d 1 1 b
	rtn
else.101
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push constant"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.102
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s104
else.102
	pushI 10
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push static"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.103
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s103
else.103
	pushI 12
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push argument"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.104
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s102
else.104
	pushI 9
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push local"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.105
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s101
else.105
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push this"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.106
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s100
else.106
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push that"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.107
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s99
else.107
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "push temp"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.108
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s98
else.108
	pushI 9
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop static"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.109
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s97
else.109
	pushI 11
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop argument"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.110
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s96
else.110
	pushI 8
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop local"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.111
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s95
else.111
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop this"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.112
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s94
else.112
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop that"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.113
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s93
else.113
	pushI 7
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "pop temp"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.114
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s92
else.114
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "add"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.115
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s91
else.115
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "sub"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.116
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s90
else.116
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "neg"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.117
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s89
else.117
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "and"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.118
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s88
else.118
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "or"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.119
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s87
else.119
	pushI 2
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "not"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.120
	push_a 6
	jsr_eval 0
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 0
	jmp s86
else.120
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "eq"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.121
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 1 i
	jmp s85
else.121
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "gt"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.122
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 1 i
	jmp s84
else.122
	pushI 1
	pushI 0
	push_a 4
.d 1 2 ii
	jsr sliceAC
.o 1 0
	buildAC "lt"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.123
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	push_a 5
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 6 1 i
	jmp s83
else.123
	push_a 6
	pushB FALSE
	updatepop_a 0 7
.d 1 1 b
	rtn
.o 6 1 i
s83
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.124
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.124
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n186
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.125
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.125
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea186
.o 1 0
n186
	push_node _cycle_in_spine 2
.o 3 0
ea186
.o 3 0
s186
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JLT\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// lt command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 1 i
s84
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.126
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.126
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n187
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.127
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.127
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea187
.o 1 0
n187
	push_node _cycle_in_spine 2
.o 3 0
ea187
.o 3 0
s187
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JGT\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// gt command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 1 i
s85
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.128
	buildAC "failed to open file"
	updatepop_a 0 7
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.128
	buildI_b 0
	build _ 1 e_StdString_ntoString;5
	push_arg 1 3 3
	push_arg 2 3 2
	push_a 2
	build _ 2 n188
	push_a 4
	pop_b 1
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.129
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.129
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea188
.o 1 0
n188
	push_node _cycle_in_spine 2
.o 3 0
ea188
.o 3 0
s188
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ")\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC ")\nD=-1\n@SP\nA=M-1\nA=A-1\nM=D\n(IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\n0;JMP\n(IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nD;JEQ\nD=0\n@SP\nA=M-1\nA=A-1\nM=D\n@IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "// eq command:\n@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s86
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.130
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.130
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//not instruction\nA=M-1\nM=!M\nD=M\n@0\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.131
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.131
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s87
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.132
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.132
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//or instruction\nA=M-1\nD=M\nA=A-1\nD=D|M\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.133
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.133
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s88
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.134
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.134
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//and instruction\nA=M-1\nD=M\nA=A-1\nD=D&M\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.135
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.135
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s89
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.136
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.136
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//neg instruction\nA=M-1\nM=-M\nD=M\n@0\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.137
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.137
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s90
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.138
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.138
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//sub instruction\nA=M-1\nD=M\nA=A-1\nD=M-D\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.139
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.139
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s91
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.140
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.140
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "//add instruction\nA=M-1\nD=M\nA=A-1\nD=M+D\nM=D\n@0\nM=M-1\n\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.141
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.141
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.o 6 0
s92
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.142
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.142
	buildAC "pop temp "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n191
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n190
	build _ 2 n189
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n192
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.143
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.143
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea192
.o 1 0
n192
	push_node _cycle_in_spine 2
.o 3 0
ea192
.o 3 0
s192
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nM=D\n@SP\nM=M-1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop temp instruction\n@SP\nA=M-1\nD=M\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea191
.o 1 0
n191
	push_node _cycle_in_spine 2
.o 3 0
ea191
.o 3 0
s191
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s79
.n 2 _ ea190
.o 1 0
n190
	push_node _cycle_in_spine 2
.o 3 0
ea190
.o 3 0
s190
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s78
.n 2 _ ea189
.o 1 0
n189
	push_node _cycle_in_spine 2
.o 3 0
ea189
.o 3 0
s189
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 6 0
s93
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.144
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.144
	buildAC "pop that "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n196
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n195
	build _ 2 n194
	build _ 2 n193
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.145
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.145
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea196
.o 1 0
n196
	push_node _cycle_in_spine 2
.o 3 0
ea196
.o 3 0
s196
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s77
.n 2 _ ea195
.o 1 0
n195
	push_node _cycle_in_spine 2
.o 3 0
ea195
.o 3 0
s195
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s76
.n 2 _ ea194
.o 1 0
n194
	push_node _cycle_in_spine 2
.o 3 0
ea194
.o 3 0
s194
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea193
.o 1 0
n193
	push_node _cycle_in_spine 2
.o 3 0
ea193
.o 3 0
s193
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THAT\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop that instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s94
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.146
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.146
	buildAC "pop this "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n200
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n199
	build _ 2 n198
	build _ 2 n197
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.147
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.147
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea200
.o 1 0
n200
	push_node _cycle_in_spine 2
.o 3 0
ea200
.o 3 0
s200
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s75
.n 2 _ ea199
.o 1 0
n199
	push_node _cycle_in_spine 2
.o 3 0
ea199
.o 3 0
s199
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s74
.n 2 _ ea198
.o 1 0
n198
	push_node _cycle_in_spine 2
.o 3 0
ea198
.o 3 0
s198
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea197
.o 1 0
n197
	push_node _cycle_in_spine 2
.o 3 0
ea197
.o 3 0
s197
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THIS\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop this instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s95
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.148
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.148
	buildAC "pop local "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n204
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n203
	build _ 2 n202
	build _ 2 n201
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.149
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.149
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea204
.o 1 0
n204
	push_node _cycle_in_spine 2
.o 3 0
ea204
.o 3 0
s204
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s73
.n 2 _ ea203
.o 1 0
n203
	push_node _cycle_in_spine 2
.o 3 0
ea203
.o 3 0
s203
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s72
.n 2 _ ea202
.o 1 0
n202
	push_node _cycle_in_spine 2
.o 3 0
ea202
.o 3 0
s202
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea201
.o 1 0
n201
	push_node _cycle_in_spine 2
.o 3 0
ea201
.o 3 0
s201
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@LCL\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop local instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s96
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.150
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.150
	buildAC "pop argument "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n208
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n207
	build _ 2 n206
	build _ 2 n205
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.151
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.151
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea208
.o 1 0
n208
	push_node _cycle_in_spine 2
.o 3 0
ea208
.o 3 0
s208
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s71
.n 2 _ ea207
.o 1 0
n207
	push_node _cycle_in_spine 2
.o 3 0
ea207
.o 3 0
s207
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s70
.n 2 _ ea206
.o 1 0
n206
	push_node _cycle_in_spine 2
.o 3 0
ea206
.o 3 0
s206
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea205
.o 1 0
n205
	push_node _cycle_in_spine 2
.o 3 0
ea205
.o 3 0
s205
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@ARG\nA=M+D\nD=A\n@13\nM=D\n@SP\nA=M-1\nD=M\n@13\nA=M\nM=D\n@SP\nM=M-1\n@13\nM=0\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop argument instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s97
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.152
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.152
	buildAC "pop static "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n212
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n211
	build _ 2 n210
	build _ 2 n209
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.153
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.153
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea212
.o 1 0
n212
	push_node _cycle_in_spine 2
.o 3 0
ea212
.o 3 0
s212
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s69
.n 2 _ ea211
.o 1 0
n211
	push_node _cycle_in_spine 2
.o 3 0
ea211
.o 3 0
s211
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s68
.n 2 _ ea210
.o 1 0
n210
	push_node _cycle_in_spine 2
.o 3 0
ea210
.o 3 0
s210
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea209
.o 1 0
n209
	push_node _cycle_in_spine 2
.o 3 0
ea209
.o 3 0
s209
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "/// TODO"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//pop static instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s98
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.154
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.154
	buildAC "push temp "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n215
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n214
	build _ 2 n213
	build e_StdList_dtoString;79 1 e_StdList_ntoString;79
	push_arg 3 3 3
	push_arg 4 3 2
	push_a 2
	build _ 2 n216
	push_a 6
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.155
	buildAC "failed to close"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.155
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea216
.o 1 0
n216
	push_node _cycle_in_spine 2
.o 3 0
ea216
.o 3 0
s216
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_array 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push temp instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 2 _ ea215
.o 1 0
n215
	push_node _cycle_in_spine 2
.o 3 0
ea215
.o 3 0
s215
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s67
.n 2 _ ea214
.o 1 0
n214
	push_node _cycle_in_spine 2
.o 3 0
ea214
.o 3 0
s214
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s66
.n 2 _ ea213
.o 1 0
n213
	push_node _cycle_in_spine 2
.o 3 0
ea213
.o 3 0
s213
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.o 6 0
s99
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.156
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.156
	buildAC "push that "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n220
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n219
	build _ 2 n218
	build _ 2 n217
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.157
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.157
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea220
.o 1 0
n220
	push_node _cycle_in_spine 2
.o 3 0
ea220
.o 3 0
s220
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s65
.n 2 _ ea219
.o 1 0
n219
	push_node _cycle_in_spine 2
.o 3 0
ea219
.o 3 0
s219
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s64
.n 2 _ ea218
.o 1 0
n218
	push_node _cycle_in_spine 2
.o 3 0
ea218
.o 3 0
s218
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea217
.o 1 0
n217
	push_node _cycle_in_spine 2
.o 3 0
ea217
.o 3 0
s217
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THAT\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push that instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s100
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.158
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.158
	buildAC "push this "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n224
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n223
	build _ 2 n222
	build _ 2 n221
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.159
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.159
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea224
.o 1 0
n224
	push_node _cycle_in_spine 2
.o 3 0
ea224
.o 3 0
s224
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s63
.n 2 _ ea223
.o 1 0
n223
	push_node _cycle_in_spine 2
.o 3 0
ea223
.o 3 0
s223
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s62
.n 2 _ ea222
.o 1 0
n222
	push_node _cycle_in_spine 2
.o 3 0
ea222
.o 3 0
s222
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea221
.o 1 0
n221
	push_node _cycle_in_spine 2
.o 3 0
ea221
.o 3 0
s221
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@THIS\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push this instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s101
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.160
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.160
	buildAC "push local "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n228
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n227
	build _ 2 n226
	build _ 2 n225
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.161
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.161
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea228
.o 1 0
n228
	push_node _cycle_in_spine 2
.o 3 0
ea228
.o 3 0
s228
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s61
.n 2 _ ea227
.o 1 0
n227
	push_node _cycle_in_spine 2
.o 3 0
ea227
.o 3 0
s227
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s60
.n 2 _ ea226
.o 1 0
n226
	push_node _cycle_in_spine 2
.o 3 0
ea226
.o 3 0
s226
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea225
.o 1 0
n225
	push_node _cycle_in_spine 2
.o 3 0
ea225
.o 3 0
s225
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@LCL\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push local instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s102
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.162
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.162
	buildAC "push argument "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n232
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n231
	build _ 2 n230
	build _ 2 n229
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.163
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.163
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea232
.o 1 0
n232
	push_node _cycle_in_spine 2
.o 3 0
ea232
.o 3 0
s232
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s59
.n 2 _ ea231
.o 1 0
n231
	push_node _cycle_in_spine 2
.o 3 0
ea231
.o 3 0
s231
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s58
.n 2 _ ea230
.o 1 0
n230
	push_node _cycle_in_spine 2
.o 3 0
ea230
.o 3 0
s230
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea229
.o 1 0
n229
	push_node _cycle_in_spine 2
.o 3 0
ea229
.o 3 0
s229
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@ARG\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push argument instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s103
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.164
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.164
	buildAC "push static "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n236
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n235
	build _ 2 n234
	build _ 2 n233
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.165
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.165
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea236
.o 1 0
n236
	push_node _cycle_in_spine 2
.o 3 0
ea236
.o 3 0
s236
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s57
.n 2 _ ea235
.o 1 0
n235
	push_node _cycle_in_spine 2
.o 3 0
ea235
.o 3 0
s235
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s56
.n 2 _ ea234
.o 1 0
n234
	push_node _cycle_in_spine 2
.o 3 0
ea234
.o 3 0
s234
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea233
.o 1 0
n233
	push_node _cycle_in_spine 2
.o 3 0
ea233
.o 3 0
s233
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "\nD=A\n@STATIC\nA=M+D\nD=M\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push static instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.o 6 0
s104
	push_a 5
	buildI 2
	push_a 3
	buildAC "out.asm"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.166
	buildAC "failed to open file"
	updatepop_a 0 7
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.166
	buildAC "push constant "
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 6
	buildh ARRAY 1
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_arg 2 3 3
	push_arg 3 3 2
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n240
	push_a 4
	build d_S.2 -1 n_S.2
	push_a 5
	build d_S.1 -1 n_S.1
	build _ 2 n239
	build _ 2 n238
	build _ 2 n237
	push_a 5
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	push_b 0
	notB
	jmp_false else.167
	buildAC "failed to close"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.167
	push_arg 0 2 2
	push_b 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 b
	rtn
.n 2 _ ea240
.o 1 0
n240
	push_node _cycle_in_spine 2
.o 3 0
ea240
.o 3 0
s240
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s55
.n 2 _ ea239
.o 1 0
n239
	push_node _cycle_in_spine 2
.o 3 0
ea239
.o 3 0
s239
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s54
.n 2 _ ea238
.o 1 0
n238
	push_node _cycle_in_spine 2
.o 3 0
ea238
.o 3 0
s238
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	buildh _Nil 0
	update_a 0 3
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_sdrop
.n 2 _ ea237
.o 1 0
n237
	push_node _cycle_in_spine 2
.o 3 0
ea237
.o 3 0
s237
	push_a 1
	jsr_eval 0
	pushF_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "D=A\n@SP\nA=M\nM=D\n@SP\nM=M+1\n\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "//push instruction\n@"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
