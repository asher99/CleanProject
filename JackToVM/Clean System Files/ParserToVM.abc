.comp 920 000111010
.start _nostart_
.depend "symTable" "20190614010302"
.depend "Tokenizer" "20190528111305"
.depend "FileManipulation" "20190524120125"
.depend "StdLibMisc" "20180913124337"
.depend "Directory" "20180913124337"
.depend "_SystemEnumStrict" "20180913124337"
.depend "_SystemStrictLists" "20180913124337"
.depend "StdStrictLists" "20180913124337"
.depend "_SystemEnum" "20180913124337"
.depend "StdEnum" "20180913124337"
.depend "StdMisc" "20180913124337"
.depend "StdFunctions" "20180913124337"
.depend "StdCharList" "20180913124337"
.depend "StdTuple" "20180913124337"
.depend "StdOrdList" "20180913124337"
.depend "StdList" "20180913124337"
.depend "StdClass" "20180913124337"
.depend "StdFile" "20180913124337"
.depend "StdString" "20180913124337"
.depend "_SystemArray" "20180913124337"
.depend "StdArray" "20180913124337"
.depend "StdChar" "20180913124337"
.depend "StdReal" "20180913124337"
.depend "StdInt" "20180913124337"
.depend "StdOverloaded" "20180913124337"
.depend "StdBool" "20180913124337"
.depend "StdEnv" "20180913124337"
.depend "ParserToVM" "20190613214340"
.module m_ParserToVM "ParserToVM" "20190614013255"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod symTable
.impdesc e_symTable_dinsertRecordMethodTable
.implab e_symTable_sinsertRecordMethodTable
.implab e_symTable_ninsertRecordMethodTable
.impdesc e_symTable_dgetMethodSymbolIndex
.implab e_symTable_ngetMethodSymbolIndex
.implab e_symTable_sgetMethodSymbolKind
.implab e_symTable_sgetMethodTableCounter
.impmod FileManipulation
.implab e_FileManipulation_slistOfLinesInFile
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod StdList
.implab e_StdList_stake
.implab e_StdList_sdrop
.implab e_StdList_slength;47
.implab e_StdList_stoString;79
.impmod StdFile
.impdesc e_StdFile_dfwrites
.implab e_StdFile_sfwrites
.implab e_StdFile_nfwrites
.impdesc e_StdFile_dFileSystem;.fclose
.implab e_StdFile_nFileSystem;.fclose e_StdFile_eaFileSystem;.fclose
.impdesc e_StdFile_dFileSystem;.fopen
.implab e_StdFile_nFileSystem;.fopen e_StdFile_eaFileSystem;.fopen
.impmod StdString
.implab e_StdString_s==;2
.impdesc e_StdString_d+++;11
.implab e_StdString_s+++;11
.implab e_StdString_n+++;11
.impmod _SystemArray
.impdesc e__SystemArray_dusize;23
.implab e__SystemArray_nusize;23
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s<;17
.impmod StdBool
.implab e_StdBool_snot
.export e_ParserToVM_sParseMultipleFiles
.descexp e_ParserToVM_dParseMultipleFiles e_ParserToVM_nParseMultipleFiles e_ParserToVM_lParseMultipleFiles 3 0 "ParseMultipleFiles"
.a 0 a1
.o 2 0
e_ParserToVM_lParseMultipleFiles
	repl_args 2 2
.o 3 0
a1
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_ParserToVM_dParseMultipleFiles
.o 1 0
e_ParserToVM_nParseMultipleFiles
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_ParserToVM_sParseMultipleFiles
	jsr_eval 4
.d 6 0
	jmp s1
.o 3 0
ea1
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s1
	eq_desc _Nil 0 4
	jmp_true case.1
	jmp case.2
case.1
	push_a 5
	buildB TRUE
	update_a 1 7
	updatepop_a 0 6
.d 2 0
	rtn
case.2
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n81
	push_a 0
	build _ 1 n82
	push_a 0
	build _ 1 n83
	push_a 11
	buildI 1
	push_a 2
	build _ 1 n84
	push_a 10
	buildh _Nil 0
	update_a 0 16
	update_a 0 8
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.3
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.3
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC ""
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 9
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.4
	buildAC "failed to close file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.4
	push_arg 0 2 2
	push_a 6
	buildAC "TxmlFiles\\"
	buildh ARRAY 1
	build _ 2 e_StdString_n+++;11
	push_a 10
	build _ 3 n79
	push_a 0
	build d_S.2 -1 n_S.2
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 0
	jsr e_FileManipulation_slistOfLinesInFile
.o 2 0
	push_a 2
	build d_S.3 -1 n_S.3
	push_a 11
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 3 n80
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	buildI 1
	push_a 7
	push_a 17
	push_a 17
	push_a 17
	push_a 17
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 8 0
	jsr s74
.o 1 1 b
	push_b 0
	notB
	jmp_false else.5
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ", execution terminated\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "Failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.5
	push_a 6
	jsr_eval 0
	push_a 1
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 13
	update_a 0 14
	update_a 0 15
	update_a 0 16
	update_a 0 12
	pop_a 1
.d 6 0
	jsr s75
.o 1 1 b
	pop_a 1
	notB
	jmp_false else.6
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "T.xml\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.6
	pop_a 6
	jmp s1.1
s1.1
	pop_a 6
	pushD m_ParserToVM
	pushD e_ParserToVM_dParseMultipleFiles
.d 0 2 ii
	jmp _match_error
.n 1 _ ea84
.o 1 0
n84
	push_node _cycle_in_spine 1
.o 2 0
ea84
.o 2 0
s84
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".vm"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea83
.o 1 0
n83
	push_node _cycle_in_spine 1
.o 2 0
ea83
.o 2 0
s83
	push_a 0
	jsr_eval 0
	push_a 1
	pushI 0
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr s38
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s37
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea82
.o 1 0
n82
	push_node _cycle_in_spine 1
.o 2 0
ea82
.o 2 0
s82
	push_a 0
	jsr_eval 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 0
	updatepop_a 0 1
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea81
.o 1 0
n81
	push_node _cycle_in_spine 2
.o 3 0
ea81
.o 3 0
s81
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s35
.n 3 _ ea80
.o 1 0
n80
	push_node _cycle_in_spine 3
.o 4 0
ea80
.o 4 0
s80
	push_a 2
	push_a 1
	jsr_eval 0
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.n 3 _ ea79
.o 1 0
n79
	push_node _cycle_in_spine 3
.o 4 0
ea79
.o 4 0
s79
	push_a 2
	buildI 0
	push_a 2
	jsr_eval 0
	push_a 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 3
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 1 1 i
s38
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s56
.o 1 1 i
s56
	eq_desc _Cons 2 0
	jmp_true case.7
	jmp case.8
case.7
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s38
case.8
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s37
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s55
.o 3 0
s55
	eq_desc _Cons 2 0
	jmp_true case.9
	jmp case.10
case.9
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n95
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s37
case.10
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea95
.o 1 0
n95
	push_node _cycle_in_spine 1
.o 2 0
ea95
.o 2 0
s95
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s35
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.11
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n94
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.11
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n94
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea94
.o 2 2 ii
s94
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s35
.export e_ParserToVM_sstartParsing
.descexp e_ParserToVM_dstartParsing e_ParserToVM_nstartParsing e_ParserToVM_lstartParsing 5 0 "startParsing"
.a 0 a2
.o 2 0
e_ParserToVM_lstartParsing
	repl_args 4 4
.o 5 0
a2
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 5 e_ParserToVM_dstartParsing
.o 1 0
e_ParserToVM_nstartParsing
	push_node _cycle_in_spine 5
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
e_ParserToVM_sstartParsing
	jsr_eval 4
.d 8 0
	jmp s2
.o 5 0
ea2
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 8 0
s2
	eq_desc _Nil 0 4
	jmp_true case.12
	jmp case.13
case.12
	push_a 7
	buildB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	rtn
case.13
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s34
.o 1 0
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "<tokens>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.14
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s2
else.14
	buildAC "<keyword> class </keyword>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.15
	push_a 8
	jsr_eval 0
	push_a 8
	jsr_eval 0
	pushI_a 9
	pop_a 1
	push_a 7
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 1 i
	jmp s4
else.15
	buildAC "This is why you fail"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
.o 2 2 ii
s34
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.16
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n93
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.16
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n93
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea93
.o 2 2 ii
s93
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s34
.o 7 1 i
s4
	eq_desc _Cons 2 4
	jmp_true case.17
	jmp s4.1
case.17
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.18
	pop_a 1
	jmp s4.1
case.18
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 8
	buildI_b 0
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 8 0
	jsr s72
.o 2 1 b
	push_b 0
	notB
	jmp_false else.19
	buildAC "failed to parse vardec"
	updatepop_a 0 9
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.19
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_b 1
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	updatepop_b 0 2
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 1 i
	jsr s73
.o 2 1 b
	pop_a 2
	notB
	jmp_false else.20
	buildAC "failed to parse subroutine"
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.20
	buildh _Nil 0
	push_a 0
	push_a 1
	push_a 2
	push_a 3
	push_a 4
	push_a 5
	pushI 0
	jmp s4.1
s4.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_4
.d 0 2 ii
	jmp _match_error
.string x_4 "parseClass"
.o 1 1 b
s53
	eqB_b TRUE 0
	jmp_true case.21
	jmp case.22
case.21
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.22
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.23
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.23
	buildAC "<keyword> while </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.24
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.24
	buildAC "<keyword> do </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.25
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.25
	buildAC "<keyword> return </keyword>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 b
s52
	eqB_b TRUE 0
	jmp_true case.26
	jmp case.27
case.26
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.27
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.28
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.28
	buildAC "<keyword> while </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.29
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.29
	buildAC "<keyword> do </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.30
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.30
	buildAC "<keyword> return </keyword>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 b
s51
	eqB_b TRUE 0
	jmp_true case.31
	jmp case.32
case.31
	jsr_eval 0
	push_arg 0 3 1
	pop_b 1
	jsr_eval 0
	pushB_a 0
	pop_a 2
.d 0 1 b
	rtn
case.32
	pop_a 1
	pop_b 1
	pushB FALSE
.d 0 1 b
	rtn
.n 4 _
.o 1 0
n16
	push_node _cycle_in_spine 4
.o 4 0
ea16
	jsr_eval 1
	repl_r_args 4 0
	eq_desc _Cons 2 4
	jmp_true case.33
	jmp s16.1
case.33
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	push_a 2
	push_a 2
	push_a 2
	fillh _Tuple 3 6
	pop_a 3
.d 1 0
	rtn
s16.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_16
.d 0 2 ii
	jmp _match_error
.string x_16 "parseExpression"
.o 7 0
s17
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n88
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.34
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.34
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.35
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.35
	push_arg 0 2 2
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.n 1 _ ea88
.o 1 0
n88
	push_node _cycle_in_spine 1
.o 2 0
ea88
.o 2 0
s88
	buildAC ".vm"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 4 _
.o 1 0
n18
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea18
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea18
	jsr_eval 3
	push_array 2
	push_array 2
	push_r_args 2 4 0
	update_a 5 8
	update_a 2 5
	update_a 4 7
	update_a 1 4
	update_a 3 6
	update_a 0 3
	pop_a 3
.o 7 0
s18
	push_a 6
	buildI 1
	push_a 3
	push_a 8
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.36
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.36
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.37
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.37
	push_arg 0 2 2
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.o 1 1 b
s50
	eqB_b TRUE 0
	jmp_true case.38
	jmp case.39
case.38
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.39
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> field </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.n 5 _
.o 1 0
n7
	push_node _cycle_in_spine 5
.d 5 0
	jsr ea7
.o 3 0
	push_a 2
	push_a 2
	push_a 2
	fillh _Tuple 3 6
	pop_a 3
.d 1 0
	rtn
.o 5 0
ea7
	jsr_eval 1
	repl_r_args 4 0
.o 8 0
s7
	eq_desc _Cons 2 4
	jmp_true case.40
	jmp s7.1
case.40
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.41
	pop_a 2
	jmp s7.1
case.41
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.42
	pop_a 4
	jmp s7.1
case.42
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.43
	pop_a 6
	jmp s7.1
case.43
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> var </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.44
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 16
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 18
	update_a 1 17
	updatepop_a 0 16
.d 3 0
	rtn
else.44
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.45
	buildAC "<symbol> ; </symbol>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	buildh _Nil 0
	jmp_false else.45
then.45
	buildI 9
	push_a 5
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	buildI 12
	push_a 4
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
.impmod StdFile
.impdesc e_StdFile_rFileSystem;
	build_r e_StdFile_rFileSystem; 4 0 10 0
	push_a 18
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 2
	jsr_eval 0
	push_a 16
	push_a 16
	push_a 15
	push_a 15
	push_a 15
	push_a 15
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 23
	update_a 6 22
	update_a 5 21
	update_a 4 20
	update_a 3 19
	update_a 2 18
	update_a 1 17
	updatepop_a 0 16
.d 8 0
	jmp s7
else.45
	buildI 9
	push_a 5
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	buildI 12
	push_a 4
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 10 0
	push_a 18
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 2
	buildB TRUE
	update_a 2 18
	update_a 1 17
	updatepop_a 0 16
.d 3 0
	rtn
s7.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_7
.d 0 2 ii
	jmp _match_error
.string x_7 "parseAllVars"
.export e_ParserToVM_sgetTokenValue
.descexp e_ParserToVM_dgetTokenValue e_ParserToVM_ngetTokenValue e_ParserToVM_lgetTokenValue 2 0 "getTokenValue"
.a 0 a3
.o 2 0
e_ParserToVM_lgetTokenValue
	repl_args 1 1
.o 2 0
a3
.d 2 0
	jsr ea3
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.n 2 e_ParserToVM_dgetTokenValue
.o 1 0
e_ParserToVM_ngetTokenValue
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea3
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 2 0
e_ParserToVM_sgetTokenValue
.o 2 0
ea3
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	push_array 0
	update_a 0 2
	pop_a 2
.o 1 1 i
s3
	push_a 0
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s30
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	push_b 1
	push_b 1
	subI
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	create
	push_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 1
	push_b 2
	addI
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 1 i
	jsr e_StdList_sdrop
.o 1 0
	push_b 1
	push_b 1
	subI
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	create
	push_a 2
	updatepop_b 0 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 1
	push_b 1
	addI
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	updatepop_b 0 1
.d 2 1 i
	jsr e_StdList_sdrop
.o 1 0
	pushI 0
.d 1 1 i
	jsr s33
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s32
.o 1 1 i
s33
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s49
.o 1 1 i
s49
	eq_desc _Cons 2 0
	jmp_true case.47
	jmp case.48
case.47
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s33
case.48
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s32
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s48
.o 3 0
s48
	eq_desc _Cons 2 0
	jmp_true case.49
	jmp case.50
case.49
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n85
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s32
case.50
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea85
.o 1 0
n85
	push_node _cycle_in_spine 1
.o 2 0
ea85
.o 2 0
s85
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s30
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.51
	push_b 0
	push_array 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n86
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.51
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n86
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea86
.o 2 2 ii
s86
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s30
.o 8 0
s64
	eq_desc _Cons 2 4
	jmp_true case.52
	jmp s64.1
case.52
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.53
	pop_a 2
	jmp s64.1
case.53
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.54
	pop_a 4
	jmp s64.1
case.54
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.55
	pop_a 6
	jmp s64.1
case.55
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> var </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.56
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 16
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 17
	updatepop_a 0 16
.d 2 1 b
	rtn
else.56
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.57
	buildAC "<symbol> ; </symbol>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	buildh _Nil 0
	jmp_false else.57
then.57
	buildI 9
	push_a 5
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	buildI 12
	push_a 4
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 10 0
	push_a 18
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 2
	jsr_eval 0
	push_a 16
	push_a 16
	push_a 15
	push_a 15
	push_a 15
	push_a 15
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 23
	update_a 6 22
	update_a 5 21
	update_a 4 20
	update_a 3 19
	update_a 2 18
	update_a 1 17
	updatepop_a 0 16
.d 8 0
	jmp s64
else.57
	buildI 9
	push_a 5
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	buildI 12
	push_a 4
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 10 0
	push_a 18
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	update_a 1 17
	updatepop_a 0 16
.d 2 1 b
	rtn
s64.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_64
.d 0 2 ii
	jmp _match_error
.string x_64 "parseAllVars"
.o 7 0
s65
	eq_desc _Cons 2 4
	jmp_true case.59
	jmp s65.1
case.59
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.60
	pop_a 2
	jmp s65.1
case.60
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.61
	pop_a 4
	jmp s65.1
case.61
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.62
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jmp s78
else.62
	buildI 12
	push_a 3
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 7 0
	push_a 14
	push_a 14
	push_a 5
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n16
	push_a 0
	build d_S.3 -1 n_S.3
	push_a 2
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	update_a 7 13
	update_a 6 12
	update_a 5 11
	update_a 4 10
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 6 0
	jsr e_symTable_sgetMethodSymbolKind
.o 3 0
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 3
	push_a 6
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build e_symTable_dgetMethodSymbolIndex 3 e_symTable_ngetMethodSymbolIndex
	push_a 1
	jsr_eval 0
	pushB_a 2
	pop_a 1
	push_a 0
	update_a 5 6
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 1 1 b
	jsr s51
.o 0 1 b
	notB
	jmp_false else.63
	buildAC "failed to get symbol record fields"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.63
	push_a 0
	build d_S.3 -1 n_S.3
	push_a 1
	build d_S.2 -1 n_S.2
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 11
	push_a 5
	push_a 3
	update_a 2 4
	update_a 1 2
	update_a 3 1
	update_a 0 3
	pop_a 1
	build _ 5 n89
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.2 -1 n_S.2
	build _ 1 n102
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 11
	updatepop_a 0 10
.d 2 1 b
	rtn
s65.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_65
.d 0 2 ii
	jmp _match_error
.string x_65 "parseLetStatement"
.n 1 _ ea102
.o 1 0
n102
	push_node _cycle_in_spine 1
.o 2 0
ea102
	jsr_eval 0
.o 2 0
s102
	eq_desc _Cons 2 0
	jmp_true case.64
	jmp s102.1
case.64
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s102.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_102
.d 0 2 ii
	jmp _match_error
.string x_102 "_match0"
.n 5 _ ea89
.o 1 0
n89
	push_node _cycle_in_spine 5
.o 6 0
ea89
.o 6 0
s89
	push_a 4
	jsr_eval 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	buildAC "pop "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s17
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s66
	eq_desc _Cons 2 4
	jmp_true case.65
	jmp s66.1
case.65
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s52
.o 0 1 b
	notB
	jmp_false else.66
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.66
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s65
.o 2 1 b
	push_b 0
	notB
	jmp_false else.67
	buildAC "error in let statement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.67
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s66
s66.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_66
.d 0 2 ii
	jmp _match_error
.string x_66 "parseStatement"
.o 8 0
s67
	eq_desc _Cons 2 4
	jmp_true case.68
	jmp s67.1
case.68
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.69
	pop_a 2
	jmp s67.1
case.69
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.70
	pop_a 4
	jmp s67.1
case.70
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 6 0
	push_a 14
	buildAC "symtables\\methodcounter.txt"
	buildh ARRAY 1
	buildAC "0"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n18
	build d_S.2 -1 n_S.2
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 6
	buildh _Cons 2
	push_a 14
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 21
	update_a 6 20
	update_a 5 19
	update_a 4 18
	update_a 3 17
	update_a 2 16
	update_a 1 15
	updatepop_a 0 14
.d 8 0
	jsr s64
.o 2 1 b
	push_b 0
	notB
	jmp_false else.71
	buildAC "failed vardec"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.71
	push_a 1
	push_a 1
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s67.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_67
.d 0 2 ii
	jmp _match_error
.string x_67 "parseVarDec"
.o 7 0
s68
	eq_desc _Cons 2 4
	jmp_true case.72
	jmp s68.1
case.72
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s53
.o 0 1 b
	notB
	jmp_false else.73
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.73
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s66
.o 2 1 b
	push_b 0
	notB
	jmp_false else.74
	buildAC "failed statments"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.74
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s66
s68.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_68
.d 0 2 ii
	jmp _match_error
.string x_68 "parseStatements"
.o 7 0
s69
	push_a 6
	buildI 1
	push_a 3
	push_a 8
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.75
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.75
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.76
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.76
	push_arg 0 2 2
	pushB TRUE
	updatepop_a 0 1
.d 1 1 b
	rtn
.o 7 1 i
s70
	eq_desc _Cons 2 4
	jmp_true case.77
	jmp s70.1
case.77
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.78
	pop_a 2
	jmp s70.1
case.78
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.79
	pop_a 4
	jmp s70.1
case.79
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ) </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.80
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 14
	updatepop_a 0 13
	updatepop_b 0 1
.d 2 1 b
	rtn
else.80
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ) </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.81
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	push_b 0
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
	updatepop_b 0 1
.d 7 1 i
	jmp s77
else.81
	buildI 9
	push_a 5
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	buildI 12
	push_a 4
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	push_a 14
	buildAC "argument"
	buildh ARRAY 1
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	update_a 9 13
	update_a 8 12
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	buildh _Nil 0
	update_a 0 17
	pop_a 1
.d 8 0
	jsr e_symTable_sinsertRecordMethodTable
.o 2 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.82
	buildAC "failed to insert argument symbol"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.82
	buildAC "<symbol> , </symbol>\n"
	push_array 3
	update_a 3 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.83
	push_a 1
	jsr_eval 0
	push_a 1
	push_b 0
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 1
.d 7 1 i
	jmp s70
else.83
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 1
.d 2 1 b
	rtn
s70.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_70
.d 0 2 ii
	jmp _match_error
.string x_70 "parseParameterList"
.o 8 1 i
s71
	eq_desc _Cons 2 4
	jmp_true case.84
	jmp s71.1
case.84
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 9
	buildI_b 0
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 8 0
	jsr s67
.o 2 1 b
	push_b 0
	notB
	jmp_false else.85
	buildAC "failed to parse vardec"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.85
	push_a 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 5 0
	jsr e_symTable_sgetMethodTableCounter
.o 3 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	push_b 0
	notB
	jmp_false else.86
	buildAC "failed to get number of locals"
	updatepop_a 0 12
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.86
	push_b 0
	notB
	jmp_false else.87
	buildAC "failed to print 'function' instruction"
	updatepop_a 0 12
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.87
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 3
	push_a 3
	push_a 13
	push_a 13
	buildh ARRAY 1
	push_a 4
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n87
	build d_S.2 -1 n_S.2
	push_a 4
	jsr_eval 0
	push_a 11
	buildh ARRAY 1
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 16 18
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jsr s68
.o 2 1 b
	push_b 0
	notB
	jmp_false else.88
	buildAC "failed to parse statements"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.88
	push_a 0
	build _ 1 n103
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 4
	updatepop_a 0 3
	updatepop_b 0 1
.d 2 1 b
	rtn
s71.1
	pop_a 8
	pop_b 1
	pushD m_ParserToVM
	pushD x_71
.d 0 2 ii
	jmp _match_error
.string x_71 "parseSubroutineBody"
.n 1 _ ea103
.o 1 0
n103
	push_node _cycle_in_spine 1
.o 2 0
ea103
	jsr_eval 0
.o 2 0
s103
	eq_desc _Cons 2 0
	jmp_true case.89
	jmp s103.1
case.89
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s103.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_103
.d 0 2 ii
	jmp _match_error
.string x_103 "_match1"
.n 5 _ ea87
.o 1 0
n87
	push_node _cycle_in_spine 5
.o 6 0
ea87
.o 6 0
s87
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_array 4
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "function "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s17
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
s72
	eq_desc _Cons 2 4
	jmp_true case.90
	jmp s72.1
case.90
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.91
	pop_a 2
	jmp s72.1
case.91
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> static </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 2
.d 1 1 b
	jsr s50
.o 0 1 b
	notB
	jmp_false else.92
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 12
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 13
	updatepop_a 0 12
.d 2 1 b
	rtn
else.92
	push_a 11
	buildI 2
	push_a 11
	build _ 1 n90
	push_a 8
	buildh _Nil 0
	update_a 0 16
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.93
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.93
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	push_a 6
	build _ 3 n91
	push_a 7
	update_a 5 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.94
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.94
	push_arg 0 2 2
	build_r e_StdFile_rFileSystem; 4 0 3 0
	push_a 10
	push_a 10
	push_a 5
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n7
	push_a 0
	build d_S.3 -1 n_S.3
	buildI 2
	push_a 10
	build _ 1 n92
	push_a 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.95
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.95
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "</classVarDec>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.96
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.96
	push_arg 0 2 2
	jsr_eval 2
	push_arg 2 3 2
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s72
s72.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_72
.d 0 2 ii
	jmp _match_error
.string x_72 "parseClassVarDec"
.n 1 _ ea92
.o 1 0
n92
	push_node _cycle_in_spine 1
.o 2 0
ea92
.o 2 0
s92
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 3 _ ea91
.o 1 0
n91
	push_node _cycle_in_spine 3
.o 4 0
ea91
.o 4 0
s91
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<classVarDec>\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea90
.o 1 0
n90
	push_node _cycle_in_spine 1
.o 2 0
ea90
.o 2 0
s90
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 1 i
s73
	eq_desc _Cons 2 4
	jmp_true case.97
	jmp s73.1
case.97
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.98
	pop_a 1
	jmp s73.1
case.98
	repl_args 2 2
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.99
	pop_a 1
	jmp s73.1
case.99
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.100
	pop_a 2
	jmp s73.1
case.100
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 9
	buildAC "symtables\\methodtable.txt"
	buildAC ""
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	buildh _Nil 0
	update_a 0 17
	pop_a 1
.d 7 0
	jsr s69
.o 1 1 b
	push_b 0
	notB
	jmp_false else.101
	buildAC "failed to intialize method symbol table"
	updatepop_a 0 11
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.101
	push_a 0
	jsr_eval 0
	buildAC "symtables\\methodcounter.txt"
	buildAC "0"
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s69
.o 1 1 b
	push_b 0
	notB
	jmp_false else.102
	buildAC "failed to intialize method counter"
	updatepop_a 0 11
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.102
	push_a 1
	jsr_eval 0
	push_a 1
	push_b 1
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	updatepop_b 0 1
	update_a 9 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 1 i
	jsr s70
.o 2 1 b
	push_b 0
	notB
	jmp_false else.103
	buildAC "failed to parse params list"
	updatepop_a 0 10
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.103
	buildI 12
	push_a 3
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	push_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	push_a 3
	push_b 1
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 7
	update_a 6 8
	update_a 5 6
	update_a 7 5
	update_a 0 7
	pop_a 1
	updatepop_b 0 1
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 8 1 i
	jsr s71
.o 2 1 b
	push_b 0
	notB
	jmp_false else.104
	buildAC "failed to parse subroutine body"
	updatepop_a 0 9
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.104
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_b 1
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 2
.d 7 1 i
	jmp s73
s73.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_73
.d 0 2 ii
	jmp _match_error
.string x_73 "parseSubroutineDec"
.o 8 0
s74
	eq_desc _Nil 0 4
	jmp_true case.105
	jmp case.106
case.105
	push_a 7
	pushB TRUE
	updatepop_a 0 8
.d 1 1 b
	rtn
case.106
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s34
.o 1 0
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "<tokens>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.107
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s74
else.107
	buildAC "<keyword> class </keyword>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.108
	push_a 8
	jsr_eval 0
	push_a 8
	jsr_eval 0
	pushI_a 9
	pop_a 1
	push_a 7
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 1 i
	jmp s76
else.108
	buildAC "This is why you fail"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
.o 6 0
s75
	eq_desc _Nil 0 4
	jmp_true case.109
	jmp case.110
case.109
	push_a 5
	pushB TRUE
	updatepop_a 0 6
.d 1 1 b
	rtn
case.110
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n98
	push_a 0
	build _ 1 n99
	push_a 0
	build _ 1 n100
	push_a 11
	buildI 1
	push_a 2
	build _ 1 n101
	push_a 10
	buildh _Nil 0
	update_a 0 16
	update_a 0 8
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.111
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.111
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC ""
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 9
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.112
	buildAC "failed to close file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.112
	push_arg 0 2 2
	push_a 6
	buildAC "TxmlFiles\\"
	buildh ARRAY 1
	build _ 2 e_StdString_n+++;11
	push_a 10
	build _ 3 n96
	push_a 0
	build d_S.2 -1 n_S.2
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 0
	jsr e_FileManipulation_slistOfLinesInFile
.o 2 0
	push_a 2
	build d_S.3 -1 n_S.3
	push_a 11
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 3 n97
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	buildI 1
	push_a 7
	push_a 17
	push_a 17
	push_a 17
	push_a 17
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 8 0
	jsr s74
.o 1 1 b
	push_b 0
	notB
	jmp_false else.113
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ", execution terminated\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "Failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.113
	push_a 6
	jsr_eval 0
	push_a 1
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 13
	update_a 0 14
	update_a 0 15
	update_a 0 16
	update_a 0 12
	pop_a 1
.d 6 0
	jsr s75
.o 1 1 b
	pop_a 1
	notB
	jmp_false else.114
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "T.xml\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.114
	pop_a 6
	jmp s75.1
s75.1
	pop_a 6
	pushD m_ParserToVM
	pushD x_75
.d 0 2 ii
	jmp _match_error
.string x_75 "ParseMultipleFiles"
.n 1 _ ea101
.o 1 0
n101
	push_node _cycle_in_spine 1
.o 2 0
ea101
.o 2 0
s101
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".vm"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea100
.o 1 0
n100
	push_node _cycle_in_spine 1
.o 2 0
ea100
.o 2 0
s100
	push_a 0
	jsr_eval 0
	push_a 1
	pushI 0
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr s38
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s37
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea99
.o 1 0
n99
	push_node _cycle_in_spine 1
.o 2 0
ea99
.o 2 0
s99
	push_a 0
	jsr_eval 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 0
	updatepop_a 0 1
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea98
.o 1 0
n98
	push_node _cycle_in_spine 2
.o 3 0
ea98
.o 3 0
s98
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s35
.n 3 _ ea97
.o 1 0
n97
	push_node _cycle_in_spine 3
.o 4 0
ea97
.o 4 0
s97
	push_a 2
	push_a 1
	jsr_eval 0
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.n 3 _ ea96
.o 1 0
n96
	push_node _cycle_in_spine 3
.o 4 0
ea96
.o 4 0
s96
	push_a 2
	buildI 0
	push_a 2
	jsr_eval 0
	push_a 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 3
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 7 1 i
s76
	eq_desc _Cons 2 4
	jmp_true case.115
	jmp s76.1
case.115
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.116
	pop_a 1
	jmp s76.1
case.116
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 8
	buildI_b 0
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 8 0
	jsr s72
.o 2 1 b
	push_b 0
	notB
	jmp_false else.117
	buildAC "failed to parse vardec"
	updatepop_a 0 9
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.117
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_b 1
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	updatepop_b 0 2
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 1 i
	jsr s73
.o 2 1 b
	pop_a 2
	notB
	jmp_false else.118
	buildAC "failed to parse subroutine"
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.118
	buildh _Nil 0
	push_a 0
	push_a 1
	push_a 2
	push_a 3
	push_a 4
	push_a 5
	pushI 0
	jmp s76.1
s76.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_76
.d 0 2 ii
	jmp _match_error
.string x_76 "parseClass"
.o 7 1 i
s77
	eq_desc _Cons 2 4
	jmp_true case.119
	jmp s77.1
case.119
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.120
	pop_a 2
	jmp s77.1
case.120
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.121
	pop_a 4
	jmp s77.1
case.121
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	buildI 9
	push_a 5
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	buildI 12
	push_a 4
	build e_ParserToVM_dgetTokenValue 2 e_ParserToVM_ngetTokenValue
	push_a 14
	buildAC "argument"
	buildh ARRAY 1
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 9 20
	update_a 8 19
	update_a 7 18
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 8 0
	jsr e_symTable_sinsertRecordMethodTable
.o 2 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.122
	buildAC "failed to insert argument symbol"
	updatepop_a 0 4
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.122
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 2
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 5
	updatepop_a 0 4
.d 2 1 b
	rtn
s77.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_77
.d 0 2 ii
	jmp _match_error
.string x_77 "finishParameterList"
.o 7 0
s78
	eq_desc _Cons 2 4
	jmp_true case.123
	jmp s78.1
case.123
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
s78.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_78
.d 0 2 ii
	jmp _match_error
.string x_78 "parseIfStatement"
.impmod _system
.implab _match_error
.implab selector_m_error
