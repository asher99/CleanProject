.comp 920 000111010
.start _nostart_
.depend "symTable" "20190618120802"
.depend "Tokenizer" "20190528111305"
.depend "FileManipulation" "20190524120125"
.depend "StdLibMisc" "20180913124337"
.depend "Directory" "20180913124337"
.depend "_SystemEnumStrict" "20180913124337"
.depend "_SystemStrictLists" "20180913124337"
.depend "StdStrictLists" "20180913124337"
.depend "_SystemEnum" "20180913124337"
.depend "StdEnum" "20180913124337"
.depend "StdMisc" "20180913124337"
.depend "StdFunctions" "20180913124337"
.depend "StdCharList" "20180913124337"
.depend "StdTuple" "20180913124337"
.depend "StdOrdList" "20180913124337"
.depend "StdList" "20180913124337"
.depend "StdClass" "20180913124337"
.depend "StdFile" "20180913124337"
.depend "StdString" "20180913124337"
.depend "_SystemArray" "20180913124337"
.depend "StdArray" "20180913124337"
.depend "StdChar" "20180913124337"
.depend "StdReal" "20180913124337"
.depend "StdInt" "20180913124337"
.depend "StdOverloaded" "20180913124337"
.depend "StdBool" "20180913124337"
.depend "StdEnv" "20180913124337"
.depend "ParserToVM" "20190614173944"
.module m_ParserToVM "ParserToVM" "20190618183548"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod symTable
.impdesc e_symTable_dinsertRecordClassTable
.implab e_symTable_ninsertRecordClassTable
.impdesc e_symTable_dinsertRecordMethodTable
.implab e_symTable_sinsertRecordMethodTable
.implab e_symTable_ninsertRecordMethodTable
.implab e_symTable_sgetMethodTableCounter
.implab e_symTable_sfetchVariableFromTables
.impmod FileManipulation
.implab e_FileManipulation_slistOfLinesInFile
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod StdList
.implab e_StdList_s!!
.implab e_StdList_stake
.implab e_StdList_sdrop
.impdesc e_StdList_dlength;47
.implab e_StdList_slength;47
.implab e_StdList_nlength;47
.implab e_StdList_stoString;79
.impmod StdFile
.impdesc e_StdFile_dfwrites
.implab e_StdFile_nfwrites
.impdesc e_StdFile_dFileSystem;.fclose
.implab e_StdFile_nFileSystem;.fclose e_StdFile_eaFileSystem;.fclose
.impdesc e_StdFile_dFileSystem;.fopen
.implab e_StdFile_nFileSystem;.fopen e_StdFile_eaFileSystem;.fopen
.impmod StdString
.implab e_StdString_s==;2
.implab e_StdString_stoString;5
.impdesc e_StdString_d+++;11
.implab e_StdString_s+++;11
.implab e_StdString_n+++;11
.impmod _SystemArray
.impdesc e__SystemArray_dusize;23
.implab e__SystemArray_nusize;23
.impmod StdChar
.implab e_StdChar_s==;18
.impmod StdInt
.impdesc e_StdInt_d+;6
.implab e_StdInt_s+;6
.implab e_StdInt_n+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s<;17
.implab e_StdInt_stoInt;20
.impmod StdBool
.implab e_StdBool_snot
.export e_ParserToVM_sParseMultipleFiles
.descexp e_ParserToVM_dParseMultipleFiles e_ParserToVM_nParseMultipleFiles e_ParserToVM_lParseMultipleFiles 3 0 "ParseMultipleFiles"
.a 0 a1
.o 2 0
e_ParserToVM_lParseMultipleFiles
	repl_args 2 2
.o 3 0
a1
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_ParserToVM_dParseMultipleFiles
.o 1 0
e_ParserToVM_nParseMultipleFiles
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_ParserToVM_sParseMultipleFiles
	jsr_eval 4
.d 6 0
	jmp s1
.o 3 0
ea1
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s1
	eq_desc _Nil 0 4
	jmp_true case.1
	jmp case.2
case.1
	push_a 5
	buildB TRUE
	update_a 1 7
	updatepop_a 0 6
.d 2 0
	rtn
case.2
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n165
	push_a 0
	build _ 1 n166
	push_a 0
	build _ 1 n167
	push_a 11
	buildI 1
	push_a 2
	build _ 1 n168
	push_a 10
	buildh _Nil 0
	update_a 0 16
	update_a 0 8
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.3
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.3
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC ""
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 9
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.4
	buildAC "failed to close file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.4
	push_arg 0 2 2
	push_a 6
	buildAC "TxmlFiles\\"
	buildh ARRAY 1
	build _ 2 e_StdString_n+++;11
	push_a 10
	build _ 3 n163
	push_a 0
	build d_S.2 -1 n_S.2
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 0
	jsr e_FileManipulation_slistOfLinesInFile
.o 2 0
	push_a 2
	build d_S.3 -1 n_S.3
	push_a 11
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 3 n164
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	buildI 1
	push_a 7
	push_a 17
	push_a 17
	push_a 17
	push_a 17
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 8 0
	jsr s144
.o 1 1 b
	push_b 0
	notB
	jmp_false else.5
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ", execution terminated\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "Failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.5
	push_a 6
	jsr_eval 0
	push_a 1
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 13
	update_a 0 14
	update_a 0 15
	update_a 0 16
	update_a 0 12
	pop_a 1
.d 6 0
	jsr s145
.o 1 1 b
	pop_a 1
	notB
	jmp_false else.6
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "T.xml\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.6
	pop_a 6
	jmp s1.1
s1.1
	pop_a 6
	pushD m_ParserToVM
	pushD e_ParserToVM_dParseMultipleFiles
.d 0 2 ii
	jmp _match_error
.n 1 _ ea168
.o 1 0
n168
	push_node _cycle_in_spine 1
.o 2 0
ea168
.o 2 0
s168
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".vm"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea167
.o 1 0
n167
	push_node _cycle_in_spine 1
.o 2 0
ea167
.o 2 0
s167
	push_a 0
	jsr_eval 0
	push_a 1
	pushI 0
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr s92
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s91
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea166
.o 1 0
n166
	push_node _cycle_in_spine 1
.o 2 0
ea166
.o 2 0
s166
	push_a 0
	jsr_eval 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 0
	updatepop_a 0 1
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea165
.o 1 0
n165
	push_node _cycle_in_spine 2
.o 3 0
ea165
.o 3 0
s165
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s89
.n 3 _ ea164
.o 1 0
n164
	push_node _cycle_in_spine 3
.o 4 0
ea164
.o 4 0
s164
	push_a 2
	push_a 1
	jsr_eval 0
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.n 3 _ ea163
.o 1 0
n163
	push_node _cycle_in_spine 3
.o 4 0
ea163
.o 4 0
s163
	push_a 2
	buildI 0
	push_a 2
	jsr_eval 0
	push_a 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 3
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 1 1 i
s92
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s122
.o 1 1 i
s122
	eq_desc _Cons 2 0
	jmp_true case.7
	jmp case.8
case.7
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s92
case.8
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s91
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s121
.o 3 0
s121
	eq_desc _Cons 2 0
	jmp_true case.9
	jmp case.10
case.9
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n221
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s91
case.10
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea221
.o 1 0
n221
	push_node _cycle_in_spine 1
.o 2 0
ea221
.o 2 0
s221
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s89
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.11
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n220
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.11
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n220
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea220
.o 2 2 ii
s220
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s89
.export e_ParserToVM_sstartParsing
.descexp e_ParserToVM_dstartParsing e_ParserToVM_nstartParsing e_ParserToVM_lstartParsing 5 0 "startParsing"
.a 0 a2
.o 2 0
e_ParserToVM_lstartParsing
	repl_args 4 4
.o 5 0
a2
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 5 e_ParserToVM_dstartParsing
.o 1 0
e_ParserToVM_nstartParsing
	push_node _cycle_in_spine 5
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
e_ParserToVM_sstartParsing
	jsr_eval 4
.d 8 0
	jmp s2
.o 5 0
ea2
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 8 0
s2
	eq_desc _Nil 0 4
	jmp_true case.12
	jmp case.13
case.12
	push_a 7
	buildB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	rtn
case.13
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s88
.o 1 0
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "<tokens>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.14
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s2
else.14
	buildAC "<keyword> class </keyword>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.15
	push_a 8
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 8 0
	jmp s4
else.15
	buildAC "This is why you fail"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
.o 2 2 ii
s88
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.16
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n219
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.16
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n219
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea219
.o 2 2 ii
s219
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s88
.o 8 0
s4
	eq_desc _Cons 2 4
	jmp_true case.17
	jmp s4.1
case.17
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.18
	pop_a 1
	jmp s4.1
case.18
	repl_args 2 2
	pop_a 1
	push_a 8
	buildAC "symtables\\classtable.txt"
	buildAC ""
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s141
.o 1 1 b
	push_b 0
	notB
	jmp_false else.19
	buildAC "failed to intialize class symbol table"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.19
	push_a 0
	jsr_eval 0
	buildAC "symtables\\classstaticcounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s141
.o 1 1 b
	push_b 0
	notB
	jmp_false else.20
	buildAC "failed to intialize class counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.20
	push_a 0
	jsr_eval 0
	buildAC "symtables\\classfieldcounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s141
.o 1 1 b
	push_b 0
	notB
	jmp_false else.21
	buildAC "failed to intialize class counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.21
	push_a 1
	jsr_eval 0
	push_a 1
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s142
.o 2 1 b
	push_b 0
	notB
	jmp_false else.22
	buildAC "failed to parse vardec"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.22
	push_a 1
	jsr_eval 0
	push_a 9
	jsr_eval 0
	pushI_a 10
	pop_a 1
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	updatepop_b 0 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 1 i
	jsr s143
.o 2 1 b
	pop_a 2
	notB
	jmp_false else.23
	buildAC "failed to parse subroutine"
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.23
	buildh _Nil 0
	push_a 0
	push_a 1
	push_a 2
	push_a 3
	push_a 4
	push_a 5
	push_a 6
	jmp s4.1
s4.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_4
.d 0 2 ii
	jmp _match_error
.string x_4 "parseClass"
.o 1 1 b
s119
	eqB_b TRUE 0
	jmp_true case.24
	jmp case.25
case.24
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.25
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.26
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.26
	buildAC "<keyword> while </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.27
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.27
	buildAC "<keyword> do </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.28
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.28
	buildAC "<keyword> return </keyword>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 b
s118
	eqB_b TRUE 0
	jmp_true case.29
	jmp case.30
case.29
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.30
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.31
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.31
	buildAC "<keyword> while </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.32
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.32
	buildAC "<keyword> do </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.33
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.33
	buildAC "<keyword> return </keyword>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 7 0
s24
	eq_desc _Cons 2 4
	jmp_true case.34
	jmp s24.1
case.34
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.35
	pop_a 2
	jmp s24.1
case.35
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.36
	pop_a 3
	jmp s24.1
case.36
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.37
	pop_a 4
	jmp s24.1
case.37
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 12
	push_a 12
	buildI 0
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 11 12
	update_a 9 11
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	buildh _Nil 0
	update_a 0 17
	pop_a 1
.d 8 0
	jsr s130
.o 3 1 b
	push_b 0
	notB
	jmp_false else.38
	buildAC "failed"
	updatepop_a 0 12
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.38
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n205
	build e_StdList_dlength;47 1 e_StdList_nlength;47
	push_a 2
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 3
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n210
	push_a 3
	build _ 2 n209
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n208
	push_a 4
	build _ 2 n207
.impmod StdFile
.impdesc e_StdFile_rFileSystem;
	build_r e_StdFile_rFileSystem; 4 0 12 0
	push_a 10
	push_a 19
	push_a 10
	push_a 14
	push_a 6
	update_a 4 7
	update_a 1 4
	update_a 5 1
	update_a 2 5
	update_a 6 2
	update_a 3 6
	update_a 0 3
	pop_a 1
	build _ 7 n206
	build d_S.2 -1 n_S.2
	push_a 7
	buildB TRUE
	update_a 2 19
	update_a 1 18
	updatepop_a 0 17
	pop_b 1
.d 3 0
	rtn
s24.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_24
.d 0 2 ii
	jmp _match_error
.string x_24 "doExternalFunction"
.n 2 _ ea210
.o 1 0
n210
	push_node _cycle_in_spine 2
.o 3 0
ea210
.o 3 0
s210
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s84
.n 2 _ ea209
.o 1 0
n209
	push_node _cycle_in_spine 2
.o 3 0
ea209
.o 3 0
s209
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea208
.o 1 0
n208
	push_node _cycle_in_spine 2
.o 3 0
ea208
.o 3 0
s208
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s82
.n 2 _ ea207
.o 1 0
n207
	push_node _cycle_in_spine 2
.o 3 0
ea207
.o 3 0
s207
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 7 _ ea206
.o 1 0
n206
	push_node _cycle_in_spine 7
.o 8 0
ea206
.o 8 0
s206
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 8
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_a 5
	jsr_eval 0
	pushI 0
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 1 1 i
	jsr s87
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 3 0
	jsr s85
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 2 _ ea205
.o 1 0
n205
	push_node _cycle_in_spine 2
.o 3 0
ea205
.o 3 0
s205
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s81
.o 7 0
s23
	eq_desc _Cons 2 4
	jmp_true case.39
	jmp s23.1
case.39
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.40
	pop_a 2
	jmp s23.1
case.40
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.41
	pop_a 4
	jmp s23.1
case.41
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.42
	pop_a 6
	jmp s23.1
case.42
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 15
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 21
	pop_a 1
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 4 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.43
	push_a 5
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 9
	buildh _Cons 2
	push_a 11
	buildh _Cons 2
	push_a 4
	push_a 19
	push_a 18
	push_a 18
	push_a 18
	push_a 18
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 25
	update_a 5 24
	update_a 4 23
	update_a 3 22
	update_a 2 21
	update_a 1 20
	updatepop_a 0 19
.d 7 0
	jmp s24
else.43
	build_r e_StdFile_rFileSystem; 4 0 12 0
	push_a 4
	push_a 19
	buildAC "push pointer 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n38
	build d_S.2 -1 n_S.2
	push_a 6
	jsr_eval 0
	push_a 19
	buildI 1
	push_a 19
	push_a 19
	push_a 19
	push_a 19
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 14 17
	update_a 7 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 8 0
	jsr s130
.o 3 1 b
	push_b 0
	notB
	jmp_false else.44
	buildAC "failed"
	updatepop_a 0 13
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.44
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n199
	build e_StdList_dlength;47 1 e_StdList_nlength;47
	push_a 2
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 3
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n204
	push_a 3
	build _ 2 n203
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n202
	push_a 4
	build _ 2 n201
	build_r e_StdFile_rFileSystem; 4 0 13 0
	push_a 10
	push_a 20
	push_a 10
	push_a 14
	push_a 6
	update_a 4 7
	update_a 1 4
	update_a 5 1
	update_a 2 5
	update_a 6 2
	update_a 3 6
	update_a 0 3
	pop_a 1
	build _ 7 n200
	build d_S.2 -1 n_S.2
	push_a 7
	buildB TRUE
	update_a 2 20
	update_a 1 19
	updatepop_a 0 18
	pop_b 1
.d 3 0
	rtn
s23.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_23
.d 0 2 ii
	jmp _match_error
.string x_23 "doExternalSubroutine"
.n 2 _ ea204
.o 1 0
n204
	push_node _cycle_in_spine 2
.o 3 0
ea204
.o 3 0
s204
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s79
.n 2 _ ea203
.o 1 0
n203
	push_node _cycle_in_spine 2
.o 3 0
ea203
.o 3 0
s203
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea202
.o 1 0
n202
	push_node _cycle_in_spine 2
.o 3 0
ea202
.o 3 0
s202
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s77
.n 2 _ ea201
.o 1 0
n201
	push_node _cycle_in_spine 2
.o 3 0
ea201
.o 3 0
s201
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 7 _ ea200
.o 1 0
n200
	push_node _cycle_in_spine 7
.o 8 0
ea200
.o 8 0
s200
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 8
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_a 5
	jsr_eval 0
	pushI 0
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 1 1 i
	jsr s86
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 3 0
	jsr s80
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 2 _ ea199
.o 1 0
n199
	push_node _cycle_in_spine 2
.o 3 0
ea199
.o 3 0
s199
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s76
.o 7 0
s22
	eq_desc _Cons 2 4
	jmp_true case.45
	jmp s22.1
case.45
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.46
	pop_a 2
	jmp s22.1
case.46
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> . </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.47
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s23
else.47
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 11
	push_a 11
	buildAC "push pointer 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n38
	build d_S.2 -1 n_S.2
	push_a 2
	jsr_eval 0
	push_a 11
	buildI 1
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 10 11
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 8 0
	jsr s130
.o 3 1 b
	push_b 0
	notB
	jmp_false else.48
	buildAC "failed"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.48
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 3
	push_a 2
	push_a 6
	push_a 13
	push_a 4
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n198
	build d_S.2 -1 n_S.2
	push_a 2
	buildB TRUE
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
	pop_b 1
.d 3 0
	rtn
s22.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_22
.d 0 2 ii
	jmp _match_error
.string x_22 "parseSubroutineCall"
.n 5 _ ea198
.o 1 0
n198
	push_node _cycle_in_spine 5
.o 6 0
ea198
.o 6 0
s198
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_array 4
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s34
	eq_desc _Cons 2 4
	jmp_true case.49
	jmp s34.1
case.49
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.50
	pop_a 2
	jmp s34.1
case.50
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ( </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.51
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s22
else.51
	buildAC "<symbol> . </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.52
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s22
else.52
	push_a 9
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 12
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s35
s34.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_34
.d 0 2 ii
	jmp _match_error
.string x_34 "var_or_subroutine"
.o 7 0
s37
	eq_desc _Cons 2 4
	jmp_true case.53
	jmp s37.1
case.53
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n28
	push_a 0
	build d_S.3 -1 n_S.3
	push_a 1
	build d_S.2 -1 n_S.2
	build _ 1 n228
	build d_S.2 -1 n_S.2
	buildB TRUE
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
s37.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_37
.d 0 2 ii
	jmp _match_error
.string x_37 "parseTermExpression"
.n 1 _ ea228
.o 1 0
n228
	push_node _cycle_in_spine 1
.o 2 0
ea228
	jsr_eval 0
.o 2 0
s228
	eq_desc _Cons 2 0
	jmp_true case.54
	jmp s228.1
case.54
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s228.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_228
.d 0 2 ii
	jmp _match_error
.string x_228 "_match0"
.o 7 0
s36
	eq_desc _Cons 2 4
	jmp_true case.55
	jmp s36.1
case.55
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 4
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n30
	push_a 0
	build d_S.3 -1 n_S.3
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 10
	push_a 4
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n211
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.2 -1 n_S.2
	buildB TRUE
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 3 0
	rtn
s36.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_36
.d 0 2 ii
	jmp _match_error
.string x_36 "parseUnaryOp"
.n 4 _ ea211
.o 1 0
n211
	push_node _cycle_in_spine 4
.o 5 0
ea211
.o 5 0
s211
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s43
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 4 _
.o 1 0
n30
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea30
.o 3 0
	push_a 2
	push_a 2
	push_a 2
	fillh _Tuple 3 6
	pop_a 3
.d 1 0
	rtn
.o 4 0
ea30
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 7 0
s30
	eq_desc _Cons 2 4
	jmp_true case.56
	jmp s30.1
case.56
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pushI 17
	push_a 0
.d 1 1 i
	jsr s40
.o 1 0
	buildAC "<integerConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.57
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s33
else.57
	pushI 16
	push_a 0
.d 1 1 i
	jsr s40
.o 1 0
	buildAC "<stringConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.58
	push_a 8
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s31
else.58
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.59
	buildAC "<symbol> ~ </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.59
then.59
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s36
else.59
	buildAC "<symbol> ( </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.61
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s37
else.61
	pushI 12
	push_a 0
.d 1 1 i
	jsr s40
.o 1 0
	buildAC "<identifier>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.62
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s34
else.62
	push_a 1
	jsr_eval 0
	pushI 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	pushI 0
	push_a 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "ABORT\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
s30.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_30
.d 0 2 ii
	jmp _match_error
.string x_30 "parseTerm"
.n 4 _
.o 1 0
n28
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea28
.o 3 0
	push_a 2
	push_a 2
	push_a 2
	fillh _Tuple 3 6
	pop_a 3
.d 1 0
	rtn
.o 4 0
ea28
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 7 0
s28
	eq_desc _Cons 2 4
	jmp_true case.63
	jmp s28.1
case.63
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.64
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.64
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s131
.o 2 1 b
	push_b 0
	notB
	jmp_false else.65
	buildAC "failed to generate code for term"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.65
	push_a 0
	build _ 1 n229
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	buildh _Cons 2
	push_a 3
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jsr s129
.o 2 1 b
	push_b 0
	notB
	jmp_false else.66
	buildAC "failed expression"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.66
	push_a 1
	push_a 1
	buildB TRUE
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 3 0
	rtn
s28.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_28
.d 0 2 ii
	jmp _match_error
.string x_28 "parseExpression"
.n 1 _ ea229
.o 1 0
n229
	push_node _cycle_in_spine 1
.o 2 0
ea229
	jsr_eval 0
.o 2 0
s229
	eq_desc _Cons 2 0
	jmp_true case.67
	jmp s229.1
case.67
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s229.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_229
.d 0 2 ii
	jmp _match_error
.string x_229 "_match1"
.o 1 1 b
s117
	eqB_b TRUE 0
	jmp_true case.68
	jmp case.69
case.68
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.69
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.70
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.70
	buildAC "<symbol> * </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.71
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.71
	buildAC "<symbol> / </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.72
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.72
	buildAC "<symbol> = </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.73
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.73
	buildAC "<symbol> &amp; </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.74
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.74
	buildAC "<symbol> | </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.75
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.75
	buildAC "<symbol> &lt; </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.76
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.76
	buildAC "<symbol> &gt; </symbol>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 i
s86
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s116
.o 1 1 i
s116
	eq_desc _Cons 2 0
	jmp_true case.77
	jmp case.78
case.77
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s86
case.78
	pop_a 1
.d 0 1 i
	rtn
.o 1 1 i
s87
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s115
.o 1 1 i
s115
	eq_desc _Cons 2 0
	jmp_true case.79
	jmp case.80
case.79
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s87
case.80
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s80
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s114
.o 3 0
s114
	eq_desc _Cons 2 0
	jmp_true case.81
	jmp case.82
case.81
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n184
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s80
case.82
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea184
.o 1 0
n184
	push_node _cycle_in_spine 1
.o 2 0
ea184
.o 2 0
s184
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s77
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.83
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n185
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.83
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n185
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea185
.o 2 2 ii
s185
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s77
.o 2 2 ii
s79
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.84
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n186
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.84
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n186
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea186
.o 2 2 ii
s186
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s79
.o 2 2 ii
s76
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.85
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n183
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.85
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n183
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea183
.o 2 2 ii
s183
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s76
.o 3 0
s85
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s112
.o 3 0
s112
	eq_desc _Cons 2 0
	jmp_true case.86
	jmp case.87
case.86
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n194
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s85
case.87
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea194
.o 1 0
n194
	push_node _cycle_in_spine 1
.o 2 0
ea194
.o 2 0
s194
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s82
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.88
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n195
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.88
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n195
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea195
.o 2 2 ii
s195
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s82
.o 2 2 ii
s84
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.89
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n196
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.89
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n196
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea196
.o 2 2 ii
s196
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s84
.o 2 2 ii
s81
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.90
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n193
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.90
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n193
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea193
.o 2 2 ii
s193
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s81
.o 1 0
s42
	buildAC "<symbol> + </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.91
	pop_a 1
	buildAC "add"
.d 1 0
	rtn
else.91
	buildAC "<symbol> - </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.92
	pop_a 1
	buildAC "sub"
.d 1 0
	rtn
else.92
	buildAC "<symbol> * </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.93
	pop_a 1
	buildAC "call Math.multiply 2"
.d 1 0
	rtn
else.93
	buildAC "<symbol> / </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.94
	pop_a 1
	buildAC "call Math.divide 2"
.d 1 0
	rtn
else.94
	buildAC "<symbol> = </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.95
	pop_a 1
	buildAC "eq"
.d 1 0
	rtn
else.95
	buildAC "<symbol> &amp; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.96
	pop_a 1
	buildAC "and"
.d 1 0
	rtn
else.96
	buildAC "<symbol> | </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.97
	pop_a 1
	buildAC "or"
.d 1 0
	rtn
else.97
	buildAC "<symbol> &lt; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.98
	pop_a 1
	buildAC "lt"
.d 1 0
	rtn
else.98
	buildAC "<symbol> &gt; </symbol>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.99
	buildAC "gt"
.d 1 0
	rtn
else.99
	buildh _Nil 0
	jmp s42.1
s42.1
	pop_a 1
	pushD m_ParserToVM
	pushD x_42
.d 0 2 ii
	jmp _match_error
.string x_42 "opName"
.o 7 0
s35
	eq_desc _Cons 2 4
	jmp_true case.100
	jmp s35.1
case.100
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.101
	pop_a 2
	jmp s35.1
case.101
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 11
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 4 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.102
	buildAC "failed to get symbol record fields"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.102
	push_a 3
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 12 19
	update_a 11 18
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jsr s134
.o 1 1 b
	push_b 0
	notB
	jmp_false else.103
	buildAC "failed to write vm code to file"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.103
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 1
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	pop_b 1
.d 3 0
	rtn
s35.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_35
.d 0 2 ii
	jmp _match_error
.string x_35 "parseVarName"
.o 1 0
s43
	buildAC "<symbol> ~ </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.104
	pop_a 1
	buildAC "not\n"
.d 1 0
	rtn
else.104
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.105
	buildAC "neg\n"
.d 1 0
	rtn
else.105
	buildh _Nil 0
	jmp s43.1
s43.1
	pop_a 1
	pushD m_ParserToVM
	pushD x_43
.d 0 2 ii
	jmp _match_error
.string x_43 "unaryOpName"
.o 7 0
s31
	eq_desc _Cons 2 4
	jmp_true case.106
	jmp s31.1
case.106
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
.d 1 0
	jsr s3
.o 1 0
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s75
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s127
.o 2 0
	pop_a 1
	push_a 8
	buildAC "call String.new 1\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
.d 7 0
	jsr s127
.o 2 0
	pop_a 1
	push_a 8
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 8 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s128
.o 1 1 b
	push_b 0
	notB
	jmp_false else.107
	buildAC "failed to append chars to string"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.107
	push_a 0
	push_a 2
	buildB TRUE
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 3 0
	rtn
s31.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_31
.d 0 2 ii
	jmp _match_error
.string x_31 "parseStringConstant"
.o 2 2 ii
s75
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.108
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n213
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.108
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n213
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea213
.o 2 2 ii
s213
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s75
.o 7 0
s33
	eq_desc _Cons 2 4
	jmp_true case.109
	jmp s33.1
case.109
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n214
	build d_S.2 -1 n_S.2
	push_a 2
	buildB TRUE
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
s33.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_33
.d 0 2 ii
	jmp _match_error
.string x_33 "parseIntegerConstant"
.n 4 _ ea214
.o 1 0
n214
	push_node _cycle_in_spine 4
.o 5 0
ea214
.o 5 0
s214
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 1 1 i
s40
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n216
	create
	push_a 1
	push_b 0
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	create
	push_a 2
	push_b 0
	updatepop_b 0 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 0
.d 1 1 i
	jsr s74
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s73
.n 2 _ ea216
.o 1 0
n216
	push_node _cycle_in_spine 2
.o 3 0
ea216
.o 3 0
s216
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s71
.o 1 1 i
s74
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s106
.o 1 1 i
s106
	eq_desc _Cons 2 0
	jmp_true case.110
	jmp case.111
case.110
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s74
case.111
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s73
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s105
.o 3 0
s105
	eq_desc _Cons 2 0
	jmp_true case.112
	jmp case.113
case.112
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n218
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s73
case.113
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea218
.o 1 0
n218
	push_node _cycle_in_spine 1
.o 2 0
ea218
.o 2 0
s218
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s71
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.114
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n217
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.114
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n217
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea217
.o 2 2 ii
s217
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s71
.n 4 _
.o 1 0
n13
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea13
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea13
	jsr_eval 1
	push_array 1
	push_r_args 1 4 0
	update_a 4 6
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 7 0
s13
	buildAC "<keyword> method </keyword>\n"
	push_a 5
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.115
	push_a 6
	buildB TRUE
	update_a 1 8
	updatepop_a 0 7
.d 2 0
	rtn
else.115
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "push argument 0\npop pointer 0\n"
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s134
.o 1 1 b
	push_b 0
	notB
	jmp_false else.116
	buildAC "failed to print method prefix"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.116
	push_a 0
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 4 _
.o 1 0
n38
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea38
	jsr_eval 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	push_array 2
	push_array 2
	push_r_args 2 4 0
	update_a 5 8
	update_a 2 5
	update_a 4 7
	update_a 1 4
	update_a 3 6
	update_a 0 3
	pop_a 3
.o 7 0
s38
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n173
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.117
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.117
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.118
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.118
	push_arg 0 2 2
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.n 1 _ ea173
.o 1 0
n173
	push_node _cycle_in_spine 1
.o 2 0
ea173
.o 2 0
s173
	buildAC ".vm"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 1 b
s101
	eqB_b TRUE 0
	jmp_true case.119
	jmp case.120
case.119
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.120
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 b
s100
	eqB_b TRUE 0
	jmp_true case.121
	jmp case.122
case.121
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.122
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> field </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.export e_ParserToVM_sgetTokenValue
.descexp e_ParserToVM_dgetTokenValue e_ParserToVM_ngetTokenValue e_ParserToVM_lgetTokenValue 1 0 "getTokenValue"
.o 2 0
e_ParserToVM_lgetTokenValue
	pop_a 1
.d 1 0
	jsr ea3
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.n 1 e_ParserToVM_dgetTokenValue
.o 1 0
e_ParserToVM_ngetTokenValue
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea3
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 0
e_ParserToVM_sgetTokenValue
.o 1 0
ea3
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
.o 1 0
s3
	push_a 0
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s66
.o 1 0
	pushI 0
.d 1 1 i
	jsr s41
.o 0 1 i
	push_a 0
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s67
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	push_b 1
	push_b 1
	subI
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	create
	push_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 1
	push_b 2
	addI
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 1 i
	jsr e_StdList_sdrop
.o 1 0
	push_b 1
	push_b 1
	subI
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	create
	push_a 2
	updatepop_b 0 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 1
	push_b 1
	addI
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	updatepop_b 0 1
.d 2 1 i
	jsr e_StdList_sdrop
.o 1 0
	pushI 0
.d 1 1 i
	jsr s70
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s69
.o 1 1 i
s70
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s99
.o 1 1 i
s99
	eq_desc _Cons 2 0
	jmp_true case.123
	jmp case.124
case.123
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s70
case.124
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s69
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s98
.o 3 0
s98
	eq_desc _Cons 2 0
	jmp_true case.125
	jmp case.126
case.125
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n169
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s69
case.126
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea169
.o 1 0
n169
	push_node _cycle_in_spine 1
.o 2 0
ea169
.o 2 0
s169
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s67
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.127
	push_b 0
	push_array 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n170
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.127
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n170
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea170
.o 2 2 ii
s170
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s67
.o 2 2 ii
s66
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.128
	push_b 0
	push_array 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n171
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.128
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n171
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea171
.o 2 2 ii
s171
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s66
.o 1 1 i
s41
	eq_desc _Cons 2 0
	jmp_true case.129
	jmp s41.1
case.129
	repl_args 2 2
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	pushC '>'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqC
	jmp_false else.130
	pushI 1
	push_b 1
	update_b 1 2
	updatepop_b 0 1
	pop_a 2
	addI
.d 0 1 i
	rtn
else.130
	pushI 1
	push_b 1
	addI
	push_a 1
	jsr_eval 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 i
	jmp s41
s41.1
	pop_a 1
	pop_b 1
	pushD m_ParserToVM
	pushD x_41
.d 0 2 ii
	jmp _match_error
.string x_41 "tagLength"
.n 4 _
.o 1 0
n39
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea39
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea39
	jsr_eval 3
	push_array 2
	push_array 2
	push_r_args 2 4 0
	update_a 5 8
	update_a 2 5
	update_a 4 7
	update_a 1 4
	update_a 3 6
	update_a 0 3
	pop_a 3
.o 7 0
s39
	push_a 6
	buildI 1
	push_a 3
	push_a 8
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.131
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.131
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.132
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.132
	push_arg 0 2 2
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.o 8 0
s125
	eq_desc _Cons 2 4
	jmp_true case.133
	jmp s125.1
case.133
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.134
	pop_a 2
	jmp s125.1
case.134
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.135
	push_a 1
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 12
	push_a 12
	push_a 12
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordClassTable 5 e_symTable_ninsertRecordClassTable
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	update_a 1 12
	updatepop_a 0 11
.d 2 1 b
	rtn
else.135
	push_a 1
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 12
	push_a 12
	push_a 12
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordClassTable 5 e_symTable_ninsertRecordClassTable
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 18
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 8 0
	jmp s125
s125.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_125
.d 0 2 ii
	jmp _match_error
.string x_125 "parseAllClassVars"
.o 7 0
s126
	eq_desc _Cons 2 4
	jmp_true case.136
	jmp s126.1
case.136
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.137
	pop_a 2
	jmp s126.1
case.137
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.138
	pop_a 4
	jmp s126.1
case.138
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.139
	pop_a 6
	jmp s126.1
case.139
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> var </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.140
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 15
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 16
	updatepop_a 0 15
.d 2 1 b
	rtn
else.140
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.141
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 9 0
	push_a 16
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	jsr_eval 0
	push_a 15
	push_a 14
	push_a 14
	push_a 14
	push_a 14
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 7 21
	update_a 6 20
	update_a 5 19
	update_a 4 18
	update_a 3 17
	update_a 2 16
	update_a 1 15
	updatepop_a 0 14
.d 8 0
	jmp s156
else.141
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 9 0
	push_a 16
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 20
	update_a 5 19
	update_a 4 18
	update_a 3 17
	update_a 2 16
	update_a 1 15
	updatepop_a 0 14
.d 7 0
	jmp s126
s126.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_126
.d 0 2 ii
	jmp _match_error
.string x_126 "parseAllVars"
.o 7 0
s127
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n212
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.142
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 1
.d 2 0
	rtn
else.142
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.143
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 1
.d 2 0
	rtn
else.143
	push_arg 0 2 2
	jsr_eval 0
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.n 1 _ ea212
.o 1 0
n212
	push_node _cycle_in_spine 1
.o 2 0
ea212
.o 2 0
s212
	buildAC ".vm"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s128
	eq_desc _Cons 2 4
	jmp_true case.144
	jmp s128.1
case.144
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.145
	jmp case.146
case.145
	push_args 1 2 2
	jsr_eval 0
	eqC_a ' ' 0
	jmp_true case.147
	pop_a 2
	jmp case.146
case.147
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.148
	pop_a 2
	jmp case.146
case.148
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	CtoI
	pop_a 2
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\ncall String.appendChar 2\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
.d 7 0
	jsr s134
.o 1 1 b
	push_b 0
	notB
	jmp_false else.149
	buildAC "failed to append char to string"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.149
	push_a 0
	pushB TRUE
	updatepop_a 0 10
	updatepop_b 0 1
.d 1 1 b
	rtn
case.146
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	CtoI
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\ncall String.appendChar 2\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s134
.o 1 1 b
	push_b 0
	notB
	jmp_false else.150
	buildAC "failed to append char to string"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.150
	push_a 0
	jsr_eval 0
	push_a 8
	push_a 3
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s128
s128.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_128
.d 0 2 ii
	jmp _match_error
.string x_128 "parseAppendChar"
.o 7 0
s129
	eq_desc _Cons 2 4
	jmp_true case.151
	jmp s129.1
case.151
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> + </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s117
.o 0 1 b
	notB
	jmp_false else.152
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.152
	push_a 1
	jsr_eval 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s131
.o 2 1 b
	push_b 0
	notB
	jmp_false else.153
	buildAC "failed expression"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.153
	build_r e_StdFile_rFileSystem; 4 0 3 0
	push_a 2
	push_a 10
	push_a 5
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n175
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	pop_b 1
.d 7 0
	jmp s129
s129.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_129
.d 0 2 ii
	jmp _match_error
.string x_129 "parseOpTerm"
.n 4 _ ea175
.o 1 0
n175
	push_node _cycle_in_spine 4
.o 5 0
ea175
.o 5 0
s175
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s42
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
s130
	eq_desc _Cons 2 4
	jmp_true case.154
	jmp case.155
case.154
	push_args 4 2 2
	jsr_eval 0
	push_array 0
	eqAC_a "<symbol> ) </symbol>\n"
	jmp_true case.156
	pop_a 2
	jmp case.155
case.156
	push_a 9
	push_a 2
	push_a 9
	pushB TRUE
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 3 1 b
	rtn
case.155
	push_a 7
	push_a 7
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	buildh _Nil 0
	update_a 0 12
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s133
.o 2 1 b
	push_b 0
	notB
	jmp_false else.157
	buildAC "failed to parse expression in push argument"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 4 4
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 3 1 b
	rtn
else.157
	push_a 0
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	pop_b 1
	buildh _Nil 0
	update_a 0 5
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.158
	buildI 1
	push_a 10
	build _ 2 e_StdInt_n+;6
	push_a 2
	jsr_eval 0
	push_a 5
	push_a 13
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	update_a 7 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 8 0
	jmp s130
else.158
	buildI 1
	push_a 10
	build _ 2 e_StdInt_n+;6
	push_a 2
	push_a 2
	buildh ARRAY 1
	buildh _Cons 2
	push_a 5
	push_a 13
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	update_a 7 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 8 0
	jmp s130
.o 7 0
s131
	eq_desc _Cons 2 4
	jmp_true case.159
	jmp s131.1
case.159
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pushI 17
	push_a 0
.d 1 1 i
	jsr s40
.o 1 0
	buildAC "<integerConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.160
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s155
else.160
	pushI 16
	push_a 0
.d 1 1 i
	jsr s40
.o 1 0
	buildAC "<stringConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.161
	push_a 8
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s154
else.161
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.162
	buildAC "<symbol> ~ </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.162
then.162
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s153
else.162
	buildAC "<symbol> ( </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.164
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s152
else.164
	pushI 12
	push_a 0
.d 1 1 i
	jsr s40
.o 1 0
	buildAC "<identifier>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.165
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s151
else.165
	push_a 1
	jsr_eval 0
	pushI 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	pushI 0
	push_a 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "ABORT\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
s131.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_131
.d 0 2 ii
	jmp _match_error
.string x_131 "parseTerm"
.o 7 0
s132
	eq_desc _Cons 2 4
	jmp_true case.166
	jmp s132.1
case.166
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.167
	pop_a 2
	jmp s132.1
case.167
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> . </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.168
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s150
else.168
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 11
	push_a 11
	buildAC "push pointer 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n38
	build d_S.2 -1 n_S.2
	push_a 2
	jsr_eval 0
	push_a 11
	buildI 1
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 10 11
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 8 0
	jsr s130
.o 3 1 b
	push_b 0
	notB
	jmp_false else.169
	buildAC "failed"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.169
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 3
	push_a 2
	push_a 6
	push_a 13
	push_a 4
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n176
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	update_a 1 12
	updatepop_a 0 11
	updatepop_b 0 1
.d 2 1 b
	rtn
s132.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_132
.d 0 2 ii
	jmp _match_error
.string x_132 "parseSubroutineCall"
.n 5 _ ea176
.o 1 0
n176
	push_node _cycle_in_spine 5
.o 6 0
ea176
.o 6 0
s176
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_array 4
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s133
	eq_desc _Cons 2 4
	jmp_true case.170
	jmp s133.1
case.170
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.171
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.171
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s131
.o 2 1 b
	push_b 0
	notB
	jmp_false else.172
	buildAC "failed to generate code for term"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.172
	push_a 0
	build _ 1 n230
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	buildh _Cons 2
	push_a 3
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jsr s129
.o 2 1 b
	push_b 0
	notB
	jmp_false else.173
	buildAC "failed expression"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.173
	push_a 1
	push_a 1
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s133.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_133
.d 0 2 ii
	jmp _match_error
.string x_133 "parseExpression"
.n 1 _ ea230
.o 1 0
n230
	push_node _cycle_in_spine 1
.o 2 0
ea230
	jsr_eval 0
.o 2 0
s230
	eq_desc _Cons 2 0
	jmp_true case.174
	jmp s230.1
case.174
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s230.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_230
.d 0 2 ii
	jmp _match_error
.string x_230 "_match2"
.o 7 0
s134
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n174
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.175
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.175
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.176
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.176
	push_arg 0 2 2
	pushB TRUE
	updatepop_a 0 1
.d 1 1 b
	rtn
.n 1 _ ea174
.o 1 0
n174
	push_node _cycle_in_spine 1
.o 2 0
ea174
.o 2 0
s174
	buildAC ".vm"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s135
	eq_desc _Cons 2 4
	jmp_true case.177
	jmp s135.1
case.177
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.178
	pop_a 2
	jmp s135.1
case.178
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.179
	pop_a 4
	jmp s135.1
case.179
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.180
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jmp s149
else.180
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> [ </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.181
	push_a 11
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 14
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jmp s148
else.181
	push_a 1
	jsr_eval 0
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 9 12
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s133
.o 2 1 b
	push_b 0
	notB
	jmp_false else.182
	buildAC "failed to gen code for expression"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.182
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 4 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.183
	buildAC "failed to get symbol record fields"
	updatepop_a 0 12
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.183
	push_a 3
	jsr_eval 0
	push_a 11
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 15
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "pop "
.d 2 0
	jsr catAC
.o 1 0
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	update_a 11 18
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jsr s134
.o 1 1 b
	push_b 0
	notB
	jmp_false else.184
	buildAC "failed to write vm code to file"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.184
	push_a 1
	build _ 1 n231
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s135.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_135
.d 0 2 ii
	jmp _match_error
.string x_135 "parseLetStatement"
.n 1 _ ea231
.o 1 0
n231
	push_node _cycle_in_spine 1
.o 2 0
ea231
	jsr_eval 0
.o 2 0
s231
	eq_desc _Cons 2 0
	jmp_true case.185
	jmp s231.1
case.185
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s231.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_231
.d 0 2 ii
	jmp _match_error
.string x_231 "_match3"
.o 7 0
s136
	eq_desc _Cons 2 4
	jmp_true case.186
	jmp s136.1
case.186
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s118
.o 0 1 b
	notB
	jmp_false else.187
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.187
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s135
.o 2 1 b
	push_b 0
	notB
	jmp_false else.188
	buildAC "error in let statement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.188
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s136
s136.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_136
.d 0 2 ii
	jmp _match_error
.string x_136 "parseStatement"
.o 7 0
s137
	eq_desc _Cons 2 4
	jmp_true case.189
	jmp s137.1
case.189
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.190
	pop_a 2
	jmp s137.1
case.190
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.191
	pop_a 4
	jmp s137.1
case.191
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 6 0
	push_a 13
	buildAC "symtables\\methodcounter.txt"
	buildh ARRAY 1
	buildAC "0"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n39
	build d_S.2 -1 n_S.2
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 6
	buildh _Cons 2
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jsr s126
.o 2 1 b
	push_b 0
	notB
	jmp_false else.192
	buildAC "failed vardec"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.192
	push_a 1
	push_a 1
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s137.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_137
.d 0 2 ii
	jmp _match_error
.string x_137 "parseVarDec"
.o 7 0
s138
	eq_desc _Cons 2 4
	jmp_true case.193
	jmp s138.1
case.193
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s119
.o 0 1 b
	notB
	jmp_false else.194
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.194
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s136
.o 2 1 b
	push_b 0
	notB
	jmp_false else.195
	buildAC "failed statments"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.195
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s136
s138.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_138
.d 0 2 ii
	jmp _match_error
.string x_138 "parseStatements"
.o 7 1 i
s139
	eq_desc _Cons 2 4
	jmp_true case.196
	jmp s139.1
case.196
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.197
	pop_a 2
	jmp s139.1
case.197
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.198
	pop_a 4
	jmp s139.1
case.198
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ) </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.199
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 14
	updatepop_a 0 13
	updatepop_b 0 1
.d 2 1 b
	rtn
else.199
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ) </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.200
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	push_b 0
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
	updatepop_b 0 1
.d 7 1 i
	jmp s147
else.200
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 14
	buildAC "argument"
	buildh ARRAY 1
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	update_a 9 13
	update_a 8 12
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	buildh _Nil 0
	update_a 0 17
	pop_a 1
.d 8 0
	jsr e_symTable_sinsertRecordMethodTable
.o 2 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.201
	buildAC "failed to insert argument symbol"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.201
	buildAC "<symbol> , </symbol>\n"
	push_array 3
	update_a 3 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.202
	push_a 1
	jsr_eval 0
	push_a 1
	push_b 0
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 1
.d 7 1 i
	jmp s139
else.202
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 1
.d 2 1 b
	rtn
s139.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_139
.d 0 2 ii
	jmp _match_error
.string x_139 "parseParameterList"
.o 9 0
s140
	eq_desc _Cons 2 4
	jmp_true case.203
	jmp s140.1
case.203
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 10
	push_a 8
	buildh ARRAY 1
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s137
.o 2 1 b
	push_b 0
	notB
	jmp_false else.204
	buildAC "failed to parse vardec"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.204
	push_a 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 5 0
	jsr e_symTable_sgetMethodTableCounter
.o 3 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	push_b 0
	notB
	jmp_false else.205
	buildAC "failed to get number of locals"
	updatepop_a 0 13
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.205
	push_b 0
	notB
	jmp_false else.206
	buildAC "failed to print 'function' instruction"
	updatepop_a 0 13
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.206
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 3
	push_a 3
	push_a 13
	push_a 13
	buildh ARRAY 1
	push_a 4
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n172
	build d_S.2 -1 n_S.2
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 11
	buildh ARRAY 1
	push_a 14
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n13
	build d_S.2 -1 n_S.2
	push_a 4
	jsr_eval 0
	push_a 11
	buildh ARRAY 1
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 16 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 7 0
	jsr s138
.o 2 1 b
	push_b 0
	notB
	jmp_false else.207
	buildAC "failed to parse statements"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.207
	push_a 0
	build _ 1 n232
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 4
	updatepop_a 0 3
	updatepop_b 0 1
.d 2 1 b
	rtn
s140.1
	pop_a 9
	pushD m_ParserToVM
	pushD x_140
.d 0 2 ii
	jmp _match_error
.string x_140 "parseSubroutineBody"
.n 1 _ ea232
.o 1 0
n232
	push_node _cycle_in_spine 1
.o 2 0
ea232
	jsr_eval 0
.o 2 0
s232
	eq_desc _Cons 2 0
	jmp_true case.208
	jmp s232.1
case.208
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s232.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_232
.d 0 2 ii
	jmp _match_error
.string x_232 "_match4"
.n 5 _ ea172
.o 1 0
n172
	push_node _cycle_in_spine 5
.o 6 0
ea172
.o 6 0
s172
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_array 4
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "function "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s141
	push_a 6
	buildI 1
	push_a 3
	push_a 8
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.209
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.209
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.210
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.210
	push_arg 0 2 2
	pushB TRUE
	updatepop_a 0 1
.d 1 1 b
	rtn
.o 8 0
s142
	eq_desc _Cons 2 4
	jmp_true case.211
	jmp s142.1
case.211
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.212
	pop_a 2
	jmp s142.1
case.212
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.213
	pop_a 4
	jmp s142.1
case.213
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.214
	pop_a 6
	jmp s142.1
case.214
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> static </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 6
.d 1 1 b
	jsr s100
.o 0 1 b
	notB
	jmp_false else.215
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 16
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 17
	updatepop_a 0 16
.d 2 1 b
	rtn
else.215
	push_a 6
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 5
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 18
	push_a 15
	push_a 15
	push_a 15
	push_a 15
	push_a 7
	update_a 5 8
	update_a 6 5
	update_a 7 6
	update_a 0 7
	pop_a 1
	update_a 7 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 8 0
	jsr s125
.o 2 1 b
	push_b 0
	notB
	jmp_false else.216
	buildAC "failed in parseClassVarDec"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.216
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	pop_b 1
.d 8 0
	jmp s142
s142.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_142
.d 0 2 ii
	jmp _match_error
.string x_142 "parseClassVarDec"
.o 7 1 i
s143
	eq_desc _Cons 2 4
	jmp_true case.217
	jmp s143.1
case.217
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.218
	pop_a 2
	jmp s143.1
case.218
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.219
	pop_a 3
	jmp s143.1
case.219
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.220
	pop_a 4
	jmp s143.1
case.220
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 11
	buildAC "symtables\\methodtable.txt"
	buildAC ""
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	buildh _Nil 0
	update_a 0 19
	pop_a 1
.d 7 0
	jsr s141
.o 1 1 b
	push_b 0
	notB
	jmp_false else.221
	buildAC "failed to intialize method symbol table"
	updatepop_a 0 13
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.221
	push_a 0
	jsr_eval 0
	buildAC "symtables\\methodcounter.txt"
	buildAC "0"
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s141
.o 1 1 b
	push_b 0
	notB
	jmp_false else.222
	buildAC "failed to intialize method counter"
	updatepop_a 0 13
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.222
	push_a 1
	jsr_eval 0
	push_a 1
	push_b 1
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	updatepop_b 0 1
	update_a 9 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 1 i
	jsr s139
.o 2 1 b
	push_b 0
	notB
	jmp_false else.223
	buildAC "failed to parse params list"
	updatepop_a 0 12
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.223
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	push_a 3
	push_a 6
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 8
	update_a 7 9
	update_a 0 7
	update_a 8 0
	update_a 6 8
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 8 13
	update_a 7 12
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 9 0
	jsr s140
.o 2 1 b
	push_b 0
	notB
	jmp_false else.224
	buildAC "failed to parse subroutine body"
	updatepop_a 0 9
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.224
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_b 1
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 2
.d 7 1 i
	jmp s143
s143.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_143
.d 0 2 ii
	jmp _match_error
.string x_143 "parseSubroutineDec"
.o 8 0
s144
	eq_desc _Nil 0 4
	jmp_true case.225
	jmp case.226
case.225
	push_a 7
	pushB TRUE
	updatepop_a 0 8
.d 1 1 b
	rtn
case.226
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s88
.o 1 0
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "<tokens>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.227
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s144
else.227
	buildAC "<keyword> class </keyword>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.228
	push_a 8
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 8 0
	jmp s146
else.228
	buildAC "This is why you fail"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
.o 6 0
s145
	eq_desc _Nil 0 4
	jmp_true case.229
	jmp case.230
case.229
	push_a 5
	pushB TRUE
	updatepop_a 0 6
.d 1 1 b
	rtn
case.230
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n224
	push_a 0
	build _ 1 n225
	push_a 0
	build _ 1 n226
	push_a 11
	buildI 1
	push_a 2
	build _ 1 n227
	push_a 10
	buildh _Nil 0
	update_a 0 16
	update_a 0 8
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.231
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.231
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC ""
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 9
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.232
	buildAC "failed to close file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.232
	push_arg 0 2 2
	push_a 6
	buildAC "TxmlFiles\\"
	buildh ARRAY 1
	build _ 2 e_StdString_n+++;11
	push_a 10
	build _ 3 n222
	push_a 0
	build d_S.2 -1 n_S.2
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 0
	jsr e_FileManipulation_slistOfLinesInFile
.o 2 0
	push_a 2
	build d_S.3 -1 n_S.3
	push_a 11
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 3 n223
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	buildI 1
	push_a 7
	push_a 17
	push_a 17
	push_a 17
	push_a 17
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 8 0
	jsr s144
.o 1 1 b
	push_b 0
	notB
	jmp_false else.233
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ", execution terminated\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "Failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.233
	push_a 6
	jsr_eval 0
	push_a 1
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 13
	update_a 0 14
	update_a 0 15
	update_a 0 16
	update_a 0 12
	pop_a 1
.d 6 0
	jsr s145
.o 1 1 b
	pop_a 1
	notB
	jmp_false else.234
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "T.xml\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.234
	pop_a 6
	jmp s145.1
s145.1
	pop_a 6
	pushD m_ParserToVM
	pushD x_145
.d 0 2 ii
	jmp _match_error
.string x_145 "ParseMultipleFiles"
.n 1 _ ea227
.o 1 0
n227
	push_node _cycle_in_spine 1
.o 2 0
ea227
.o 2 0
s227
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".vm"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea226
.o 1 0
n226
	push_node _cycle_in_spine 1
.o 2 0
ea226
.o 2 0
s226
	push_a 0
	jsr_eval 0
	push_a 1
	pushI 0
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr s92
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s91
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea225
.o 1 0
n225
	push_node _cycle_in_spine 1
.o 2 0
ea225
.o 2 0
s225
	push_a 0
	jsr_eval 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 0
	updatepop_a 0 1
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea224
.o 1 0
n224
	push_node _cycle_in_spine 2
.o 3 0
ea224
.o 3 0
s224
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s89
.n 3 _ ea223
.o 1 0
n223
	push_node _cycle_in_spine 3
.o 4 0
ea223
.o 4 0
s223
	push_a 2
	push_a 1
	jsr_eval 0
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.n 3 _ ea222
.o 1 0
n222
	push_node _cycle_in_spine 3
.o 4 0
ea222
.o 4 0
s222
	push_a 2
	buildI 0
	push_a 2
	jsr_eval 0
	push_a 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 3
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 8 0
s146
	eq_desc _Cons 2 4
	jmp_true case.235
	jmp s146.1
case.235
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.236
	pop_a 1
	jmp s146.1
case.236
	repl_args 2 2
	pop_a 1
	push_a 8
	buildAC "symtables\\classtable.txt"
	buildAC ""
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s141
.o 1 1 b
	push_b 0
	notB
	jmp_false else.237
	buildAC "failed to intialize class symbol table"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.237
	push_a 0
	jsr_eval 0
	buildAC "symtables\\classstaticcounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s141
.o 1 1 b
	push_b 0
	notB
	jmp_false else.238
	buildAC "failed to intialize class counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.238
	push_a 0
	jsr_eval 0
	buildAC "symtables\\classfieldcounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s141
.o 1 1 b
	push_b 0
	notB
	jmp_false else.239
	buildAC "failed to intialize class counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.239
	push_a 1
	jsr_eval 0
	push_a 1
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s142
.o 2 1 b
	push_b 0
	notB
	jmp_false else.240
	buildAC "failed to parse vardec"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.240
	push_a 1
	jsr_eval 0
	push_a 9
	jsr_eval 0
	pushI_a 10
	pop_a 1
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	updatepop_b 0 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 1 i
	jsr s143
.o 2 1 b
	pop_a 2
	notB
	jmp_false else.241
	buildAC "failed to parse subroutine"
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.241
	buildh _Nil 0
	push_a 0
	push_a 1
	push_a 2
	push_a 3
	push_a 4
	push_a 5
	push_a 6
	jmp s146.1
s146.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_146
.d 0 2 ii
	jmp _match_error
.string x_146 "parseClass"
.o 7 1 i
s147
	eq_desc _Cons 2 4
	jmp_true case.242
	jmp s147.1
case.242
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.243
	pop_a 2
	jmp s147.1
case.243
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.244
	pop_a 4
	jmp s147.1
case.244
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 14
	buildAC "argument"
	buildh ARRAY 1
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 9 20
	update_a 8 19
	update_a 7 18
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 8 0
	jsr e_symTable_sinsertRecordMethodTable
.o 2 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.245
	buildAC "failed to insert argument symbol"
	updatepop_a 0 4
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.245
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 2
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 5
	updatepop_a 0 4
.d 2 1 b
	rtn
s147.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_147
.d 0 2 ii
	jmp _match_error
.string x_147 "finishParameterList"
.o 7 0
s148
	eq_desc _Cons 2 4
	jmp_true case.246
	jmp s148.1
case.246
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.247
	pop_a 2
	jmp s148.1
case.247
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 10
	push_a 10
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 8 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s133
.o 2 1 b
	push_b 0
	notB
	jmp_false else.248
	buildAC "abort in parseArrayLetStatement exp1"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.248
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 4 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.249
	buildAC "failed to get symbol record fields"
	updatepop_a 0 12
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.249
	push_a 3
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\nadd\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_a 12
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s134
.o 1 1 b
	push_b 0
	notB
	jmp_false else.250
	buildAC "abort in parseArrayLetStatement varName"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.250
	push_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	push_a 1
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s133
.o 2 1 b
	push_b 0
	notB
	jmp_false else.251
	buildAC "abort in parseArrayLetStatement exp2"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.251
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 2
	push_a 9
	buildh ARRAY 1
	buildAC "pop temp 0\npop pointer 1\npush temp 0\npop that 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n38
	build d_S.2 -1 n_S.2
	push_a 1
	build _ 1 n233
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 1
.d 2 1 b
	rtn
s148.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_148
.d 0 2 ii
	jmp _match_error
.string x_148 "parseArrayLetStatement"
.n 1 _ ea233
.o 1 0
n233
	push_node _cycle_in_spine 1
.o 2 0
ea233
	jsr_eval 0
.o 2 0
s233
	eq_desc _Cons 2 0
	jmp_true case.252
	jmp s233.1
case.252
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s233.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_233
.d 0 2 ii
	jmp _match_error
.string x_233 "_match5"
.o 7 0
s149
	eq_desc _Cons 2 4
	jmp_true case.253
	jmp s149.1
case.253
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.254
	pop_a 2
	jmp s149.1
case.254
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.255
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s159
else.255
	pop_a 4
	jmp s149.1
s149.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_149
.d 0 2 ii
	jmp _match_error
.string x_149 "parseIfStatement"
.o 7 0
s150
	eq_desc _Cons 2 4
	jmp_true case.256
	jmp s150.1
case.256
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.257
	pop_a 2
	jmp s150.1
case.257
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.258
	pop_a 4
	jmp s150.1
case.258
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.259
	pop_a 6
	jmp s150.1
case.259
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 15
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 21
	pop_a 1
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 4 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.260
	push_a 5
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 9
	buildh _Cons 2
	push_a 11
	buildh _Cons 2
	push_a 4
	push_a 19
	push_a 18
	push_a 18
	push_a 18
	push_a 18
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 25
	update_a 5 24
	update_a 4 23
	update_a 3 22
	update_a 2 21
	update_a 1 20
	updatepop_a 0 19
.d 7 0
	jmp s158
else.260
	build_r e_StdFile_rFileSystem; 4 0 12 0
	push_a 4
	push_a 19
	buildAC "push pointer 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n38
	build d_S.2 -1 n_S.2
	push_a 6
	jsr_eval 0
	push_a 19
	buildI 1
	push_a 19
	push_a 19
	push_a 19
	push_a 19
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 14 17
	update_a 7 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 8 0
	jsr s130
.o 3 1 b
	push_b 0
	notB
	jmp_false else.261
	buildAC "failed"
	updatepop_a 0 13
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.261
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n177
	build e_StdList_dlength;47 1 e_StdList_nlength;47
	push_a 2
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 3
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n182
	push_a 3
	build _ 2 n181
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n180
	push_a 4
	build _ 2 n179
	build_r e_StdFile_rFileSystem; 4 0 13 0
	push_a 10
	push_a 20
	push_a 10
	push_a 14
	push_a 6
	update_a 4 7
	update_a 1 4
	update_a 5 1
	update_a 2 5
	update_a 6 2
	update_a 3 6
	update_a 0 3
	pop_a 1
	build _ 7 n178
	build d_S.2 -1 n_S.2
	push_a 7
	pushB TRUE
	update_a 1 19
	updatepop_a 0 18
	updatepop_b 0 1
.d 2 1 b
	rtn
s150.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_150
.d 0 2 ii
	jmp _match_error
.string x_150 "doExternalSubroutine"
.n 2 _ ea182
.o 1 0
n182
	push_node _cycle_in_spine 2
.o 3 0
ea182
.o 3 0
s182
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s79
.n 2 _ ea181
.o 1 0
n181
	push_node _cycle_in_spine 2
.o 3 0
ea181
.o 3 0
s181
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea180
.o 1 0
n180
	push_node _cycle_in_spine 2
.o 3 0
ea180
.o 3 0
s180
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s77
.n 2 _ ea179
.o 1 0
n179
	push_node _cycle_in_spine 2
.o 3 0
ea179
.o 3 0
s179
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 7 _ ea178
.o 1 0
n178
	push_node _cycle_in_spine 7
.o 8 0
ea178
.o 8 0
s178
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 8
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_a 5
	jsr_eval 0
	pushI 0
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 1 1 i
	jsr s86
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 3 0
	jsr s80
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 2 _ ea177
.o 1 0
n177
	push_node _cycle_in_spine 2
.o 3 0
ea177
.o 3 0
s177
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s76
.o 7 0
s151
	eq_desc _Cons 2 4
	jmp_true case.262
	jmp s151.1
case.262
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.263
	pop_a 2
	jmp s151.1
case.263
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ( </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.264
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s132
else.264
	buildAC "<symbol> . </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.265
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s132
else.265
	push_a 9
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 12
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s157
s151.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_151
.d 0 2 ii
	jmp _match_error
.string x_151 "var_or_subroutine"
.o 7 0
s152
	eq_desc _Cons 2 4
	jmp_true case.266
	jmp s152.1
case.266
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n28
	push_a 0
	build d_S.3 -1 n_S.3
	push_a 1
	build d_S.2 -1 n_S.2
	build _ 1 n234
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
s152.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_152
.d 0 2 ii
	jmp _match_error
.string x_152 "parseTermExpression"
.n 1 _ ea234
.o 1 0
n234
	push_node _cycle_in_spine 1
.o 2 0
ea234
	jsr_eval 0
.o 2 0
s234
	eq_desc _Cons 2 0
	jmp_true case.267
	jmp s234.1
case.267
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s234.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_234
.d 0 2 ii
	jmp _match_error
.string x_234 "_match6"
.o 7 0
s153
	eq_desc _Cons 2 4
	jmp_true case.268
	jmp s153.1
case.268
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 4
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n30
	push_a 0
	build d_S.3 -1 n_S.3
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 10
	push_a 4
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n197
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 11
	updatepop_a 0 10
.d 2 1 b
	rtn
s153.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_153
.d 0 2 ii
	jmp _match_error
.string x_153 "parseUnaryOp"
.n 4 _ ea197
.o 1 0
n197
	push_node _cycle_in_spine 4
.o 5 0
ea197
.o 5 0
s197
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s43
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s154
	eq_desc _Cons 2 4
	jmp_true case.269
	jmp s154.1
case.269
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
.d 1 0
	jsr s3
.o 1 0
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s75
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s127
.o 2 0
	pop_a 1
	push_a 8
	buildAC "call String.new 1\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
.d 7 0
	jsr s127
.o 2 0
	pop_a 1
	push_a 8
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 8 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s128
.o 1 1 b
	push_b 0
	notB
	jmp_false else.270
	buildAC "failed to append chars to string"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.270
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s154.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_154
.d 0 2 ii
	jmp _match_error
.string x_154 "parseStringConstant"
.o 7 0
s155
	eq_desc _Cons 2 4
	jmp_true case.271
	jmp s155.1
case.271
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n215
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
s155.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_155
.d 0 2 ii
	jmp _match_error
.string x_155 "parseIntegerConstant"
.n 4 _ ea215
.o 1 0
n215
	push_node _cycle_in_spine 4
.o 5 0
ea215
.o 5 0
s215
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
s156
	eq_desc _Cons 2 4
	jmp_true case.272
	jmp s156.1
case.272
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.273
	pop_a 2
	jmp s156.1
case.273
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s101
.o 0 1 b
	notB
	jmp_false else.274
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 12
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 13
	updatepop_a 0 12
.d 2 1 b
	rtn
else.274
	buildAC "<symbol> , </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.275
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 13
	buildAC "local"
	buildh ARRAY 1
	push_a 13
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 2
	jsr_eval 0
	push_a 12
	push_a 12
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 8 0
	jmp s156
else.275
	buildAC "<symbol> ; </symbol>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.276
	push_a 1
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 12
	buildAC "local"
	buildh ARRAY 1
	push_a 12
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 11
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s126
else.276
	pop_a 3
	jmp s156.1
s156.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_156
.d 0 2 ii
	jmp _match_error
.string x_156 "parseMultipleVarsInLine"
.o 7 0
s157
	eq_desc _Cons 2 4
	jmp_true case.277
	jmp s157.1
case.277
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.278
	pop_a 2
	jmp s157.1
case.278
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 11
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 4 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.279
	buildAC "failed to get symbol record fields"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.279
	push_a 3
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 12 19
	update_a 11 18
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jsr s134
.o 1 1 b
	push_b 0
	notB
	jmp_false else.280
	buildAC "failed to write vm code to file"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.280
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 4
	updatepop_a 0 3
	updatepop_b 0 1
.d 2 1 b
	rtn
s157.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_157
.d 0 2 ii
	jmp _match_error
.string x_157 "parseVarName"
.o 7 0
s158
	eq_desc _Cons 2 4
	jmp_true case.281
	jmp s158.1
case.281
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.282
	pop_a 2
	jmp s158.1
case.282
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.283
	pop_a 3
	jmp s158.1
case.283
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.284
	pop_a 4
	jmp s158.1
case.284
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 12
	push_a 12
	buildI 0
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 11 12
	update_a 9 11
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	buildh _Nil 0
	update_a 0 17
	pop_a 1
.d 8 0
	jsr s130
.o 3 1 b
	push_b 0
	notB
	jmp_false else.285
	buildAC "failed"
	updatepop_a 0 12
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.285
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n187
	build e_StdList_dlength;47 1 e_StdList_nlength;47
	push_a 2
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 3
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n192
	push_a 3
	build _ 2 n191
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n190
	push_a 4
	build _ 2 n189
	build_r e_StdFile_rFileSystem; 4 0 12 0
	push_a 10
	push_a 19
	push_a 10
	push_a 14
	push_a 6
	update_a 4 7
	update_a 1 4
	update_a 5 1
	update_a 2 5
	update_a 6 2
	update_a 3 6
	update_a 0 3
	pop_a 1
	build _ 7 n188
	build d_S.2 -1 n_S.2
	push_a 7
	pushB TRUE
	update_a 1 18
	updatepop_a 0 17
	updatepop_b 0 1
.d 2 1 b
	rtn
s158.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_158
.d 0 2 ii
	jmp _match_error
.string x_158 "doExternalFunction"
.n 2 _ ea192
.o 1 0
n192
	push_node _cycle_in_spine 2
.o 3 0
ea192
.o 3 0
s192
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s84
.n 2 _ ea191
.o 1 0
n191
	push_node _cycle_in_spine 2
.o 3 0
ea191
.o 3 0
s191
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea190
.o 1 0
n190
	push_node _cycle_in_spine 2
.o 3 0
ea190
.o 3 0
s190
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s82
.n 2 _ ea189
.o 1 0
n189
	push_node _cycle_in_spine 2
.o 3 0
ea189
.o 3 0
s189
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 7 _ ea188
.o 1 0
n188
	push_node _cycle_in_spine 7
.o 8 0
ea188
.o 8 0
s188
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 8
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_a 5
	jsr_eval 0
	pushI 0
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 1 1 i
	jsr s87
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 3 0
	jsr s85
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s38
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 2 _ ea187
.o 1 0
n187
	push_node _cycle_in_spine 2
.o 3 0
ea187
.o 3 0
s187
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s81
.o 7 0
s159
	eq_desc _Cons 2 4
	jmp_true case.286
	jmp s159.1
case.286
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.287
	pop_a 2
	jmp s159.1
case.287
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> while </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.288
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s160
else.288
	pop_a 4
	jmp s159.1
s159.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_159
.d 0 2 ii
	jmp _match_error
.string x_159 "parseWhileStatement"
.o 7 0
s160
	eq_desc _Cons 2 4
	jmp_true case.289
	jmp s160.1
case.289
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.290
	pop_a 2
	jmp s160.1
case.290
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.291
	pop_a 4
	jmp s160.1
case.291
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> do </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.292
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jmp s161
else.292
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 12
	update_a 5 11
	update_a 4 10
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s132
.o 2 1 b
	push_b 0
	notB
	jmp_false else.293
	buildAC "abort in parseDoStatement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.293
	push_a 1
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "pop temp 0\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 7 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s134
.o 1 1 b
	push_b 0
	notB
	jmp_false else.294
	buildAC "abort in parseDoStatement"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.294
	push_a 1
	build _ 1 n235
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s160.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_160
.d 0 2 ii
	jmp _match_error
.string x_160 "parseDoStatement"
.n 1 _ ea235
.o 1 0
n235
	push_node _cycle_in_spine 1
.o 2 0
ea235
	jsr_eval 0
.o 2 0
s235
	eq_desc _Cons 2 0
	jmp_true case.295
	jmp s235.1
case.295
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s235.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_235
.d 0 2 ii
	jmp _match_error
.string x_235 "_match7"
.o 7 0
s161
	eq_desc _Cons 2 4
	jmp_true case.296
	jmp s161.1
case.296
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.297
	pop_a 2
	jmp s161.1
case.297
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.298
	push_a 10
	jsr_eval 0
	push_a 10
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s162
else.298
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s133
.o 2 1 b
	push_b 0
	notB
	jmp_false else.299
	buildAC "failed returnStatement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.299
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 2
	push_a 9
	buildAC "return\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n38
	build d_S.2 -1 n_S.2
	push_a 1
	build _ 1 n236
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 1
.d 2 1 b
	rtn
s161.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_161
.d 0 2 ii
	jmp _match_error
.string x_161 "parseReturnStatement"
.n 1 _ ea236
.o 1 0
n236
	push_node _cycle_in_spine 1
.o 2 0
ea236
	jsr_eval 0
.o 2 0
s236
	eq_desc _Cons 2 0
	jmp_true case.300
	jmp s236.1
case.300
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s236.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_236
.d 0 2 ii
	jmp _match_error
.string x_236 "_match8"
.o 7 0
s162
	eq_desc _Cons 2 4
	jmp_true case.301
	jmp s162.1
case.301
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.302
	pop_a 1
	jmp s162.1
case.302
	repl_args 2 2
	pop_a 1
	push_a 7
	push_a 7
	buildAC "push constant 0\nreturn\n"
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	update_a 7 14
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s134
.o 1 1 b
	push_b 0
	notB
	jmp_false else.303
	buildAC "failed return void"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.303
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s162.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_162
.d 0 2 ii
	jmp _match_error
.string x_162 "retrunVoid"
.impmod _system
.implab _match_error
.implab selector_m_error
