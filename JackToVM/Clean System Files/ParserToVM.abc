.comp 920 000111010
.start _nostart_
.depend "symTable" "20190621162451"
.depend "Tokenizer" "20190528111305"
.depend "FileManipulation" "20190524120125"
.depend "StdLibMisc" "20180913124337"
.depend "Directory" "20180913124337"
.depend "_SystemEnumStrict" "20180913124337"
.depend "_SystemStrictLists" "20180913124337"
.depend "StdStrictLists" "20180913124337"
.depend "_SystemEnum" "20180913124337"
.depend "StdEnum" "20180913124337"
.depend "StdMisc" "20180913124337"
.depend "StdFunctions" "20180913124337"
.depend "StdCharList" "20180913124337"
.depend "StdTuple" "20180913124337"
.depend "StdOrdList" "20180913124337"
.depend "StdList" "20180913124337"
.depend "StdClass" "20180913124337"
.depend "StdFile" "20180913124337"
.depend "StdString" "20180913124337"
.depend "_SystemArray" "20180913124337"
.depend "StdArray" "20180913124337"
.depend "StdChar" "20180913124337"
.depend "StdReal" "20180913124337"
.depend "StdInt" "20180913124337"
.depend "StdOverloaded" "20180913124337"
.depend "StdBool" "20180913124337"
.depend "StdEnv" "20180913124337"
.depend "ParserToVM" "20190614173944"
.module m_ParserToVM "ParserToVM" "20190621173321"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod symTable
.impdesc e_symTable_dinsertRecordClassTable
.implab e_symTable_ninsertRecordClassTable
.impdesc e_symTable_dinsertRecordMethodTable
.implab e_symTable_sinsertRecordMethodTable
.implab e_symTable_ninsertRecordMethodTable
.implab e_symTable_sgetMethodTableCounter
.implab e_symTable_sgetClassFieldTableCounter
.implab e_symTable_sfetchVariableFromTables
.impmod FileManipulation
.implab e_FileManipulation_slistOfLinesInFile
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod StdList
.implab e_StdList_s!!
.implab e_StdList_stake
.implab e_StdList_sdrop
.impdesc e_StdList_dlength;47
.implab e_StdList_slength;47
.implab e_StdList_nlength;47
.implab e_StdList_stoString;79
.impmod StdFile
.implab e_StdFile_sfreadline
.impdesc e_StdFile_dfwrites
.implab e_StdFile_nfwrites
.impdesc e_StdFile_dFileSystem;.fclose
.implab e_StdFile_nFileSystem;.fclose e_StdFile_eaFileSystem;.fclose
.impdesc e_StdFile_dFileSystem;.fopen
.implab e_StdFile_nFileSystem;.fopen e_StdFile_eaFileSystem;.fopen
.impmod StdString
.implab e_StdString_s==;2
.implab e_StdString_stoString;5
.impdesc e_StdString_d+++;11
.implab e_StdString_s+++;11
.implab e_StdString_n+++;11
.impmod _SystemArray
.impdesc e__SystemArray_dusize;23
.implab e__SystemArray_nusize;23
.impmod StdChar
.implab e_StdChar_s==;18
.impmod StdInt
.impdesc e_StdInt_d+;6
.implab e_StdInt_s+;6
.implab e_StdInt_n+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s<;17
.implab e_StdInt_stoInt;20
.implab e_StdInt_stoInt;23
.impmod StdBool
.implab e_StdBool_snot
.export e_ParserToVM_sParseMultipleFiles
.descexp e_ParserToVM_dParseMultipleFiles e_ParserToVM_nParseMultipleFiles e_ParserToVM_lParseMultipleFiles 3 0 "ParseMultipleFiles"
.a 0 a1
.o 2 0
e_ParserToVM_lParseMultipleFiles
	repl_args 2 2
.o 3 0
a1
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_ParserToVM_dParseMultipleFiles
.o 1 0
e_ParserToVM_nParseMultipleFiles
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_ParserToVM_sParseMultipleFiles
	jsr_eval 4
.d 6 0
	jmp s1
.o 3 0
ea1
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s1
	eq_desc _Nil 0 4
	jmp_true case.1
	jmp case.2
case.1
	push_a 5
	buildB TRUE
	update_a 1 7
	updatepop_a 0 6
.d 2 0
	rtn
case.2
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n185
	push_a 0
	build _ 1 n186
	push_a 0
	build _ 1 n187
	push_a 11
	buildI 1
	push_a 2
	build _ 1 n188
	push_a 10
	buildh _Nil 0
	update_a 0 16
	update_a 0 8
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.3
	buildAC "failed to open vm file to writing in the first time"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.3
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC ""
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 9
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.4
	buildAC "failed to close file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.4
	push_arg 0 2 2
	push_a 6
	buildAC "TxmlFiles\\"
	buildh ARRAY 1
	build _ 2 e_StdString_n+++;11
	push_a 10
	build _ 3 n183
	push_a 0
	build d_S.2 -1 n_S.2
	update_a 1 2
	updatepop_a 0 1
.d 1 0
	jsr e_FileManipulation_slistOfLinesInFile
.o 2 0
	push_a 2
	build d_S.3 -1 n_S.3
	push_a 10
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 3 n184
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	buildI 1
	push_a 6
	push_a 16
	push_a 16
	push_a 16
	push_a 16
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 8 0
	jsr s156
.o 1 1 b
	push_b 0
	notB
	jmp_false else.5
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ", execution terminated\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "Failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.5
	push_a 6
	jsr_eval 0
	push_a 1
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 6 0
	jsr s157
.o 1 1 b
	push_b 0
	notB
	jmp_false else.6
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "T.xml\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.6
	push_a 0
	push_a 7
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
	pop_b 1
.d 6 0
	jmp s1
.n 1 _ ea188
.o 1 0
n188
	push_node _cycle_in_spine 1
.o 2 0
ea188
.o 2 0
s188
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".vm"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea187
.o 1 0
n187
	push_node _cycle_in_spine 1
.o 2 0
ea187
.o 2 0
s187
	push_a 0
	jsr_eval 0
	push_a 1
	pushI 0
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr s103
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s102
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea186
.o 1 0
n186
	push_node _cycle_in_spine 1
.o 2 0
ea186
.o 2 0
s186
	push_a 0
	jsr_eval 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 0
	updatepop_a 0 1
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea185
.o 1 0
n185
	push_node _cycle_in_spine 2
.o 3 0
ea185
.o 3 0
s185
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s100
.n 3 _ ea184
.o 1 0
n184
	push_node _cycle_in_spine 3
.o 4 0
ea184
.o 4 0
s184
	push_a 2
	push_a 1
	jsr_eval 0
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.n 3 _ ea183
.o 1 0
n183
	push_node _cycle_in_spine 3
.o 4 0
ea183
.o 4 0
s183
	push_a 2
	buildI 0
	push_a 2
	jsr_eval 0
	push_a 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 3
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 1 1 i
s103
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s132
.o 1 1 i
s132
	eq_desc _Cons 2 0
	jmp_true case.7
	jmp case.8
case.7
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s103
case.8
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s102
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s131
.o 3 0
s131
	eq_desc _Cons 2 0
	jmp_true case.9
	jmp case.10
case.9
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n237
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s102
case.10
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea237
.o 1 0
n237
	push_node _cycle_in_spine 1
.o 2 0
ea237
.o 2 0
s237
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s100
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.11
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n236
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.11
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n236
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea236
.o 2 2 ii
s236
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s100
.export e_ParserToVM_sstartParsing
.descexp e_ParserToVM_dstartParsing e_ParserToVM_nstartParsing e_ParserToVM_lstartParsing 5 0 "startParsing"
.a 0 a2
.o 2 0
e_ParserToVM_lstartParsing
	repl_args 4 4
.o 5 0
a2
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 5 e_ParserToVM_dstartParsing
.o 1 0
e_ParserToVM_nstartParsing
	push_node _cycle_in_spine 5
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
e_ParserToVM_sstartParsing
	jsr_eval 4
.d 8 0
	jmp s2
.o 5 0
ea2
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 8 0
s2
	eq_desc _Nil 0 4
	jmp_true case.12
	jmp case.13
case.12
	push_a 7
	buildB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	rtn
case.13
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s99
.o 1 0
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "<tokens>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.14
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s2
else.14
	buildAC "<keyword> class </keyword>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.15
	push_a 8
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 8 0
	jmp s4
else.15
	buildAC "This is why you fail"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
.o 2 2 ii
s99
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.16
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n235
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.16
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n235
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea235
.o 2 2 ii
s235
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s99
.o 8 0
s4
	eq_desc _Cons 2 4
	jmp_true case.17
	jmp s4.1
case.17
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.18
	pop_a 1
	jmp s4.1
case.18
	repl_args 2 2
	pop_a 1
	push_a 8
	buildAC "symtables\\classtable.txt"
	buildAC ""
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.19
	buildAC "failed to intialize class symbol table"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.19
	push_a 0
	jsr_eval 0
	buildAC "symtables\\classstaticcounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.20
	buildAC "failed to intialize class counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.20
	push_a 0
	jsr_eval 0
	buildAC "symtables\\classfieldcounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.21
	buildAC "failed to intialize class counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.21
	push_a 0
	jsr_eval 0
	buildAC "counters\\ifcounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.22
	buildAC "failed to intialize if counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.22
	push_a 0
	jsr_eval 0
	buildAC "counters\\whilecounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.23
	buildAC "failed to intialize while counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.23
	push_a 1
	jsr_eval 0
	push_a 1
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s154
.o 2 1 b
	push_b 0
	notB
	jmp_false else.24
	buildAC "failed to parse vardec"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.24
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jsr s155
.o 2 1 b
	push_b 0
	notB
	jmp_false else.25
	buildAC "failed to parse subroutine"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.25
	push_a 1
	buildB TRUE
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 2 0
	rtn
s4.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_4
.d 0 2 ii
	jmp _match_error
.string x_4 "parseClass"
.o 1 1 b
s129
	eqB_b TRUE 0
	jmp_true case.26
	jmp case.27
case.26
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.27
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.28
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.28
	buildAC "<keyword> while </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.29
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.29
	buildAC "<keyword> do </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.30
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.30
	buildAC "<keyword> return </keyword>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 b
s128
	eqB_b TRUE 0
	jmp_true case.31
	jmp case.32
case.31
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.32
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.33
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.33
	buildAC "<keyword> while </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.34
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.34
	buildAC "<keyword> do </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.35
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.35
	buildAC "<keyword> return </keyword>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 0
s50
	eq_desc _Cons 2 0
	jmp_true case.36
	jmp s50.1
case.36
	repl_args 2 2
	jsr_eval 0
	push_array 0
	eqAC_a "<symbol> } </symbol>\n"
	jmp_true case.37
	jmp case.38
case.37
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.39
	jmp case.38
case.39
	push_args 1 2 2
	update_a 0 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> else </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.40
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.40
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
case.38
	push_a 1
	jsr_eval 0
	updatepop_a 0 2
.d 1 0
	jmp s50
s50.1
	pop_a 1
	pushD m_ParserToVM
	pushD x_50
.d 0 2 ii
	jmp _match_error
.string x_50 "isElseStatement"
.o 9 0
s26
	eq_desc _Cons 2 4
	jmp_true case.41
	jmp s26.1
case.41
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.42
	pop_a 1
	jmp s26.1
case.42
	repl_args 2 2
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.43
	pop_a 1
	jmp s26.1
case.43
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.44
	pop_a 2
	jmp s26.1
case.44
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
.impmod StdFile
.impdesc e_StdFile_rFileSystem;
	build_r e_StdFile_rFileSystem; 4 0 3 0
	push_a 12
	push_a 12
	push_a 12
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n216
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 12
	buildI 1
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 9 10
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 16
	update_a 0 18
	pop_a 1
.d 8 0
	jsr s140
.o 3 1 b
	push_b 0
	notB
	jmp_false else.45
	buildAC "failed"
	updatepop_a 0 13
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.45
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 3
	push_a 13
	push_a 3
	push_a 7
	push_a 14
	push_a 5
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 6 n215
	build d_S.2 -1 n_S.2
	push_a 2
	buildB TRUE
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
	pop_b 1
.d 3 0
	rtn
s26.1
	pop_a 9
	pushD m_ParserToVM
	pushD x_26
.d 0 2 ii
	jmp _match_error
.string x_26 "doClassObjectMethod"
.n 4 _ ea216
.o 1 0
n216
	push_node _cycle_in_spine 4
.o 5 0
ea216
.o 5 0
s216
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push this "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 6 _ ea215
.o 1 0
n215
	push_node _cycle_in_spine 6
.o 7 0
ea215
.o 7 0
s215
	push_a 5
	jsr_eval 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 12
	update_a 5 11
	update_a 4 10
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s27
	eq_desc _Cons 2 4
	jmp_true case.46
	jmp s27.1
case.46
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.47
	pop_a 2
	jmp s27.1
case.47
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.48
	pop_a 3
	jmp s27.1
case.48
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.49
	pop_a 4
	jmp s27.1
case.49
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 12
	push_a 12
	buildI 0
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 11 12
	update_a 9 11
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	buildh _Nil 0
	update_a 0 17
	pop_a 1
.d 8 0
	jsr s140
.o 3 1 b
	push_b 0
	notB
	jmp_false else.50
	buildAC "failed"
	updatepop_a 0 12
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.50
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n217
	build e_StdList_dlength;47 1 e_StdList_nlength;47
	push_a 2
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 3
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n222
	push_a 3
	build _ 2 n221
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n220
	push_a 4
	build _ 2 n219
	build_r e_StdFile_rFileSystem; 4 0 12 0
	push_a 10
	push_a 19
	push_a 10
	push_a 14
	push_a 6
	update_a 4 7
	update_a 1 4
	update_a 5 1
	update_a 2 5
	update_a 6 2
	update_a 3 6
	update_a 0 3
	pop_a 1
	build _ 7 n218
	build d_S.2 -1 n_S.2
	push_a 7
	buildB TRUE
	update_a 2 19
	update_a 1 18
	updatepop_a 0 17
	pop_b 1
.d 3 0
	rtn
s27.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_27
.d 0 2 ii
	jmp _match_error
.string x_27 "doExternalFunction"
.n 2 _ ea222
.o 1 0
n222
	push_node _cycle_in_spine 2
.o 3 0
ea222
.o 3 0
s222
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s96
.n 2 _ ea221
.o 1 0
n221
	push_node _cycle_in_spine 2
.o 3 0
ea221
.o 3 0
s221
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea220
.o 1 0
n220
	push_node _cycle_in_spine 2
.o 3 0
ea220
.o 3 0
s220
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s94
.n 2 _ ea219
.o 1 0
n219
	push_node _cycle_in_spine 2
.o 3 0
ea219
.o 3 0
s219
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 7 _ ea218
.o 1 0
n218
	push_node _cycle_in_spine 7
.o 8 0
ea218
.o 8 0
s218
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 8
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_a 5
	jsr_eval 0
	pushI 0
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 1 1 i
	jsr s98
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 3 0
	jsr s97
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 2 _ ea217
.o 1 0
n217
	push_node _cycle_in_spine 2
.o 3 0
ea217
.o 3 0
s217
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s93
.o 7 0
s25
	eq_desc _Cons 2 4
	jmp_true case.51
	jmp s25.1
case.51
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.52
	pop_a 2
	jmp s25.1
case.52
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.53
	pop_a 4
	jmp s25.1
case.53
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.54
	pop_a 6
	jmp s25.1
case.54
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 15
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 21
	pop_a 1
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 5 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.55
	push_a 6
	push_a 6
	buildh _Cons 2
	push_a 8
	buildh _Cons 2
	push_a 10
	buildh _Cons 2
	push_a 12
	buildh _Cons 2
	push_a 5
	push_a 20
	push_a 19
	push_a 19
	push_a 19
	push_a 19
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 26
	update_a 5 25
	update_a 4 24
	update_a 3 23
	update_a 2 22
	update_a 1 21
	updatepop_a 0 20
.d 7 0
	jmp s27
else.55
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "this"
	push_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.56
	push_a 6
	push_a 6
	buildh _Cons 2
	push_a 8
	buildh _Cons 2
	push_a 10
	buildh _Cons 2
	push_a 12
	buildh _Cons 2
	push_a 5
	push_a 20
	push_a 4
	push_a 6
	push_a 21
	push_a 21
	push_a 21
	push_a 21
	push_a 8
	update_a 8 9
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 8 28
	update_a 7 27
	update_a 6 26
	update_a 5 25
	update_a 4 24
	update_a 3 23
	update_a 2 22
	update_a 1 21
	updatepop_a 0 20
.d 9 0
	jmp s26
else.56
	build_r e_StdFile_rFileSystem; 4 0 13 0
	push_a 5
	push_a 20
	push_a 4
	push_a 4
	buildh ARRAY 1
	push_a 4
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n213
	build d_S.2 -1 n_S.2
	push_a 7
	jsr_eval 0
	push_a 20
	buildI 1
	push_a 20
	push_a 20
	push_a 20
	push_a 20
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 10 14
	update_a 7 13
	update_a 6 12
	update_a 5 11
	update_a 4 10
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
.d 8 0
	jsr s140
.o 3 1 b
	push_b 0
	notB
	jmp_false else.57
	buildAC "failed"
	updatepop_a 0 17
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.57
	build_r e_StdFile_rFileSystem; 4 0 10 0
	push_a 3
	push_a 17
	push_a 3
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 6 n214
	build d_S.2 -1 n_S.2
	push_a 2
	buildB TRUE
	update_a 2 19
	update_a 1 18
	updatepop_a 0 17
	pop_b 1
.d 3 0
	rtn
s25.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_25
.d 0 2 ii
	jmp _match_error
.string x_25 "doExternalSubroutine"
.n 6 _ ea214
.o 1 0
n214
	push_node _cycle_in_spine 6
.o 7 0
ea214
.o 7 0
s214
	push_a 5
	jsr_eval 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 12
	update_a 5 11
	update_a 4 10
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 5 _ ea213
.o 1 0
n213
	push_node _cycle_in_spine 5
.o 6 0
ea213
	jsr_eval 1
	push_array 1
	update_a 0 2
	pop_a 1
.o 6 0
s213
	push_a 4
	jsr_eval 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 4
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s24
	eq_desc _Cons 2 4
	jmp_true case.58
	jmp s24.1
case.58
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.59
	pop_a 2
	jmp s24.1
case.59
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> . </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.60
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s25
else.60
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 11
	push_a 11
	buildAC "push pointer 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 2
	jsr_eval 0
	push_a 11
	buildI 1
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 10 11
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 8 0
	jsr s140
.o 3 1 b
	push_b 0
	notB
	jmp_false else.61
	buildAC "failed"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.61
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 3
	push_a 2
	push_a 6
	push_a 13
	push_a 4
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n212
	build d_S.2 -1 n_S.2
	push_a 2
	buildB TRUE
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
	pop_b 1
.d 3 0
	rtn
s24.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_24
.d 0 2 ii
	jmp _match_error
.string x_24 "parseSubroutineCall"
.n 5 _ ea212
.o 1 0
n212
	push_node _cycle_in_spine 5
.o 6 0
ea212
.o 6 0
s212
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_array 4
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s42
	eq_desc _Cons 2 4
	jmp_true case.62
	jmp s42.1
case.62
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.63
	pop_a 2
	jmp s42.1
case.63
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ( </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.64
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s24
else.64
	buildAC "<symbol> . </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.65
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s24
else.65
	push_a 9
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 12
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s43
s42.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_42
.d 0 2 ii
	jmp _match_error
.string x_42 "var_or_subroutine"
.o 7 0
s45
	eq_desc _Cons 2 4
	jmp_true case.66
	jmp s45.1
case.66
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n31
	push_a 0
	build d_S.3 -1 n_S.3
	push_a 1
	build d_S.2 -1 n_S.2
	build _ 1 n244
	build d_S.2 -1 n_S.2
	buildB TRUE
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
s45.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_45
.d 0 2 ii
	jmp _match_error
.string x_45 "parseTermExpression"
.n 1 _ ea244
.o 1 0
n244
	push_node _cycle_in_spine 1
.o 2 0
ea244
	jsr_eval 0
.o 2 0
s244
	eq_desc _Cons 2 0
	jmp_true case.67
	jmp s244.1
case.67
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s244.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_244
.d 0 2 ii
	jmp _match_error
.string x_244 "_match0"
.o 7 0
s44
	eq_desc _Cons 2 4
	jmp_true case.68
	jmp s44.1
case.68
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 4
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n33
	push_a 0
	build d_S.3 -1 n_S.3
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 10
	push_a 4
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n223
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.2 -1 n_S.2
	buildB TRUE
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 3 0
	rtn
s44.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_44
.d 0 2 ii
	jmp _match_error
.string x_44 "parseUnaryOp"
.n 4 _ ea223
.o 1 0
n223
	push_node _cycle_in_spine 4
.o 5 0
ea223
.o 5 0
s223
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s55
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s46
	eq_desc _Cons 2 4
	jmp_true case.69
	jmp s46.1
case.69
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.70
	pop_a 2
	jmp s46.1
case.70
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 10
	push_a 10
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 8 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s147
.o 2 1 b
	push_b 0
	notB
	jmp_false else.71
	buildAC "failed in parseArrayTerm 2"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.71
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 5 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.72
	buildAC "failed to get symbol record fields"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.72
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\nadd\npop pointer 1\npush that 0\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 12 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.73
	buildAC "failed in parseArrayTerm 3"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.73
	push_a 1
	build _ 1 n245
	build d_S.2 -1 n_S.2
	push_a 1
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 3 0
	rtn
s46.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_46
.d 0 2 ii
	jmp _match_error
.string x_46 "parseArrayTerm"
.n 1 _ ea245
.o 1 0
n245
	push_node _cycle_in_spine 1
.o 2 0
ea245
	jsr_eval 0
.o 2 0
s245
	eq_desc _Cons 2 0
	jmp_true case.74
	jmp s245.1
case.74
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s245.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_245
.d 0 2 ii
	jmp _match_error
.string x_245 "_match1"
.n 4 _
.o 1 0
n33
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea33
.o 3 0
	push_a 2
	push_a 2
	push_a 2
	fillh _Tuple 3 6
	pop_a 3
.d 1 0
	rtn
.o 4 0
ea33
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 7 0
s33
	eq_desc _Cons 2 4
	jmp_true case.75
	jmp s33.1
case.75
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pushI 17
	push_a 0
.d 1 1 i
	jsr s52
.o 1 0
	buildAC "<integerConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.76
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s41
else.76
	pushI 16
	push_a 0
.d 1 1 i
	jsr s52
.o 1 0
	buildAC "<stringConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.77
	push_a 8
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s39
else.77
	pushI 9
	push_a 0
.d 1 1 i
	jsr s52
.o 1 0
	buildAC "<keyword>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.78
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s34
else.78
	push_a 1
	jsr_eval 0
	pushI 0
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> [ </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.79
	push_a 7
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 10
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s46
else.79
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.80
	buildAC "<symbol> ~ </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.80
then.80
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s44
else.80
	buildAC "<symbol> ( </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.82
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s45
else.82
	pushI 12
	push_a 0
.d 1 1 i
	jsr s52
.o 1 0
	buildAC "<identifier>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.83
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s42
else.83
	pushI 1
	push_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	pushI 0
	push_a 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "ABORT\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
s33.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_33
.d 0 2 ii
	jmp _match_error
.string x_33 "parseTerm"
.n 4 _
.o 1 0
n31
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea31
.o 3 0
	push_a 2
	push_a 2
	push_a 2
	fillh _Tuple 3 6
	pop_a 3
.d 1 0
	rtn
.o 4 0
ea31
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 7 0
s31
	eq_desc _Cons 2 4
	jmp_true case.84
	jmp s31.1
case.84
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.85
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.85
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s141
.o 2 1 b
	push_b 0
	notB
	jmp_false else.86
	buildAC "failed to generate code for term"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.86
	push_a 0
	build _ 1 n246
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	buildh _Cons 2
	push_a 3
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jsr s139
.o 2 1 b
	push_b 0
	notB
	jmp_false else.87
	buildAC "failed expression"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.87
	push_a 1
	push_a 1
	buildB TRUE
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 3 0
	rtn
s31.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_31
.d 0 2 ii
	jmp _match_error
.string x_31 "parseExpression"
.n 1 _ ea246
.o 1 0
n246
	push_node _cycle_in_spine 1
.o 2 0
ea246
	jsr_eval 0
.o 2 0
s246
	eq_desc _Cons 2 0
	jmp_true case.88
	jmp s246.1
case.88
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s246.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_246
.d 0 2 ii
	jmp _match_error
.string x_246 "_match2"
.o 1 1 b
s127
	eqB_b TRUE 0
	jmp_true case.89
	jmp case.90
case.89
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.90
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.91
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.91
	buildAC "<symbol> * </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.92
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.92
	buildAC "<symbol> / </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.93
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.93
	buildAC "<symbol> = </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.94
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.94
	buildAC "<symbol> &amp; </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.95
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.95
	buildAC "<symbol> | </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.96
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.96
	buildAC "<symbol> &lt; </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.97
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.97
	buildAC "<symbol> &gt; </symbol>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 i
s98
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s126
.o 1 1 i
s126
	eq_desc _Cons 2 0
	jmp_true case.98
	jmp case.99
case.98
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s98
case.99
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s97
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s125
.o 3 0
s125
	eq_desc _Cons 2 0
	jmp_true case.100
	jmp case.101
case.100
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n208
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s97
case.101
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea208
.o 1 0
n208
	push_node _cycle_in_spine 1
.o 2 0
ea208
.o 2 0
s208
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s94
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.102
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n209
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.102
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n209
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea209
.o 2 2 ii
s209
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s94
.o 2 2 ii
s96
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.103
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n210
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.103
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n210
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea210
.o 2 2 ii
s210
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s96
.o 2 2 ii
s93
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.104
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n207
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.104
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n207
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea207
.o 2 2 ii
s207
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s93
.o 1 0
s54
	buildAC "<symbol> + </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.105
	pop_a 1
	buildAC "add"
.d 1 0
	rtn
else.105
	buildAC "<symbol> - </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.106
	pop_a 1
	buildAC "sub"
.d 1 0
	rtn
else.106
	buildAC "<symbol> * </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.107
	pop_a 1
	buildAC "call Math.multiply 2"
.d 1 0
	rtn
else.107
	buildAC "<symbol> / </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.108
	pop_a 1
	buildAC "call Math.divide 2"
.d 1 0
	rtn
else.108
	buildAC "<symbol> = </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.109
	pop_a 1
	buildAC "eq"
.d 1 0
	rtn
else.109
	buildAC "<symbol> &amp; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.110
	pop_a 1
	buildAC "and"
.d 1 0
	rtn
else.110
	buildAC "<symbol> | </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.111
	pop_a 1
	buildAC "or"
.d 1 0
	rtn
else.111
	buildAC "<symbol> &lt; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.112
	pop_a 1
	buildAC "lt"
.d 1 0
	rtn
else.112
	buildAC "<symbol> &gt; </symbol>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.113
	buildAC "gt"
.d 1 0
	rtn
else.113
	buildh _Nil 0
	jmp s54.1
s54.1
	pop_a 1
	pushD m_ParserToVM
	pushD x_54
.d 0 2 ii
	jmp _match_error
.string x_54 "opName"
.o 7 0
s43
	eq_desc _Cons 2 4
	jmp_true case.114
	jmp s43.1
case.114
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.115
	pop_a 2
	jmp s43.1
case.115
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 11
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 5 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.116
	buildAC "failed to get symbol record fields"
	updatepop_a 0 14
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.116
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 13 20
	update_a 12 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.117
	buildAC "failed to write vm code to file"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.117
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 1
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	pop_b 1
.d 3 0
	rtn
s43.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_43
.d 0 2 ii
	jmp _match_error
.string x_43 "parseVarName"
.o 1 0
s55
	buildAC "<symbol> ~ </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.118
	pop_a 1
	buildAC "not\n"
.d 1 0
	rtn
else.118
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.119
	buildAC "neg\n"
.d 1 0
	rtn
else.119
	buildh _Nil 0
	jmp s55.1
s55.1
	pop_a 1
	pushD m_ParserToVM
	pushD x_55
.d 0 2 ii
	jmp _match_error
.string x_55 "unaryOpName"
.o 7 0
s34
	eq_desc _Cons 2 4
	jmp_true case.120
	jmp s34.1
case.120
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> null </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.121
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s35
else.121
	buildAC "<keyword> false </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.122
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s36
else.122
	buildAC "<keyword> true </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.123
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s37
else.123
	buildAC "<keyword> this </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.124
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s38
else.124
	pop_a 2
	jmp s34.1
s34.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_34
.d 0 2 ii
	jmp _match_error
.string x_34 "parseKeywordTerm"
.o 7 0
s38
	eq_desc _Cons 2 4
	jmp_true case.125
	jmp s38.1
case.125
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	buildAC "push pointer 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 1
	buildB TRUE
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 3 0
	rtn
s38.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_38
.d 0 2 ii
	jmp _match_error
.string x_38 "parseThis"
.o 7 0
s37
	eq_desc _Cons 2 4
	jmp_true case.126
	jmp s37.1
case.126
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	buildAC "push constant 0\nnot\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 1
	buildB TRUE
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 3 0
	rtn
s37.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_37
.d 0 2 ii
	jmp _match_error
.string x_37 "parseTrue"
.o 7 0
s36
	eq_desc _Cons 2 4
	jmp_true case.127
	jmp s36.1
case.127
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	buildAC "push constant 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 1
	buildB TRUE
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 3 0
	rtn
s36.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_36
.d 0 2 ii
	jmp _match_error
.string x_36 "parseFalse"
.o 7 0
s35
	eq_desc _Cons 2 4
	jmp_true case.128
	jmp s35.1
case.128
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	buildAC "push constant 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 1
	buildB TRUE
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 3 0
	rtn
s35.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_35
.d 0 2 ii
	jmp _match_error
.string x_35 "parseNull"
.o 7 0
s39
	eq_desc _Cons 2 4
	jmp_true case.129
	jmp s39.1
case.129
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
.d 1 0
	jsr s3
.o 1 0
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s92
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s137
.o 2 0
	pop_a 1
	push_a 8
	buildAC "call String.new 1\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
.d 7 0
	jsr s137
.o 2 0
	pop_a 1
	push_a 8
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 8 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s138
.o 1 1 b
	push_b 0
	notB
	jmp_false else.130
	buildAC "failed to append chars to string"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.130
	push_a 0
	push_a 2
	buildB TRUE
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 3 0
	rtn
s39.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_39
.d 0 2 ii
	jmp _match_error
.string x_39 "parseStringConstant"
.o 2 2 ii
s92
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.131
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n225
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.131
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n225
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea225
.o 2 2 ii
s225
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s92
.o 7 0
s41
	eq_desc _Cons 2 4
	jmp_true case.132
	jmp s41.1
case.132
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n226
	build d_S.2 -1 n_S.2
	push_a 2
	buildB TRUE
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
s41.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_41
.d 0 2 ii
	jmp _match_error
.string x_41 "parseIntegerConstant"
.n 4 _ ea226
.o 1 0
n226
	push_node _cycle_in_spine 4
.o 5 0
ea226
.o 5 0
s226
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 1 1 i
s52
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n228
	create
	push_a 1
	push_b 0
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	create
	push_a 2
	push_b 0
	updatepop_b 0 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 0
.d 1 1 i
	jsr s91
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s90
.n 2 _ ea228
.o 1 0
n228
	push_node _cycle_in_spine 2
.o 3 0
ea228
.o 3 0
s228
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s88
.o 1 1 i
s91
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s117
.o 1 1 i
s117
	eq_desc _Cons 2 0
	jmp_true case.133
	jmp case.134
case.133
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s91
case.134
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s90
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s116
.o 3 0
s116
	eq_desc _Cons 2 0
	jmp_true case.135
	jmp case.136
case.135
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n230
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s90
case.136
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea230
.o 1 0
n230
	push_node _cycle_in_spine 1
.o 2 0
ea230
.o 2 0
s230
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s88
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.137
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n229
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.137
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n229
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea229
.o 2 2 ii
s229
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s88
.n 4 _
.o 1 0
n14
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea14
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea14
	jsr_eval 1
	push_array 1
	push_r_args 1 4 0
	update_a 4 6
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 7 0
s14
	buildAC "<keyword> constructor </keyword>\n"
	push_a 5
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.138
	push_a 6
	buildB TRUE
	update_a 1 8
	updatepop_a 0 7
.d 2 0
	rtn
else.138
	push_a 6
	push_a 4
	push_a 4
	push_a 4
	push_a 4
	buildh _Nil 0
	update_a 0 12
	pop_a 1
.d 5 0
	jsr e_symTable_sgetClassFieldTableCounter
.o 3 0
	push_a 2
	jsr_eval 0
	push_a 9
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\ncall Memory.alloc 1\npop pointer 0\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 13
	update_a 0 7
	update_a 0 5
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.139
	buildAC "failed to print constructor prefix"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.139
	push_a 0
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 4 _
.o 1 0
n13
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea13
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea13
	jsr_eval 1
	push_array 1
	push_r_args 1 4 0
	update_a 4 6
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 7 0
s13
	buildAC "<keyword> method </keyword>\n"
	push_a 5
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.140
	push_a 6
	buildB TRUE
	update_a 1 8
	updatepop_a 0 7
.d 2 0
	rtn
else.140
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "push argument 0\npop pointer 0\n"
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.141
	buildAC "failed to print method prefix"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.141
	push_a 0
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 4 _
.o 1 0
n47
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea47
	jsr_eval 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	push_array 2
	push_array 2
	push_r_args 2 4 0
	update_a 5 8
	update_a 2 5
	update_a 4 7
	update_a 1 4
	update_a 3 6
	update_a 0 3
	pop_a 3
.o 7 0
s47
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n193
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.142
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.142
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.143
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.143
	push_arg 0 2 2
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.n 1 _ ea193
.o 1 0
n193
	push_node _cycle_in_spine 1
.o 2 0
ea193
.o 2 0
s193
	buildAC ".vm"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 1 b
s112
	eqB_b TRUE 0
	jmp_true case.144
	jmp case.145
case.144
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.145
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 b
s111
	eqB_b TRUE 0
	jmp_true case.146
	jmp case.147
case.146
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.147
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> field </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.export e_ParserToVM_sgetTokenValue
.descexp e_ParserToVM_dgetTokenValue e_ParserToVM_ngetTokenValue e_ParserToVM_lgetTokenValue 1 0 "getTokenValue"
.o 2 0
e_ParserToVM_lgetTokenValue
	pop_a 1
.d 1 0
	jsr ea3
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.n 1 e_ParserToVM_dgetTokenValue
.o 1 0
e_ParserToVM_ngetTokenValue
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea3
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 0
e_ParserToVM_sgetTokenValue
.o 1 0
ea3
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
.o 1 0
s3
	push_a 0
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s83
.o 1 0
	pushI 0
.d 1 1 i
	jsr s53
.o 0 1 i
	push_a 0
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s84
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	push_b 1
	push_b 1
	subI
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	create
	push_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 1
	push_b 2
	addI
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 1 i
	jsr e_StdList_sdrop
.o 1 0
	push_b 1
	push_b 1
	subI
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	create
	push_a 2
	updatepop_b 0 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 1
	push_b 1
	addI
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	updatepop_b 0 1
.d 2 1 i
	jsr e_StdList_sdrop
.o 1 0
	pushI 0
.d 1 1 i
	jsr s87
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s86
.o 1 1 i
s87
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s110
.o 1 1 i
s110
	eq_desc _Cons 2 0
	jmp_true case.148
	jmp case.149
case.148
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s87
case.149
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s86
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s109
.o 3 0
s109
	eq_desc _Cons 2 0
	jmp_true case.150
	jmp case.151
case.150
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n189
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s86
case.151
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea189
.o 1 0
n189
	push_node _cycle_in_spine 1
.o 2 0
ea189
.o 2 0
s189
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s84
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.152
	push_b 0
	push_array 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n190
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.152
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n190
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea190
.o 2 2 ii
s190
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s84
.o 2 2 ii
s83
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.153
	push_b 0
	push_array 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n191
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.153
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n191
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea191
.o 2 2 ii
s191
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s83
.o 1 1 i
s53
	eq_desc _Cons 2 0
	jmp_true case.154
	jmp s53.1
case.154
	repl_args 2 2
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	pushC '>'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqC
	jmp_false else.155
	pushI 1
	push_b 1
	update_b 1 2
	updatepop_b 0 1
	pop_a 2
	addI
.d 0 1 i
	rtn
else.155
	pushI 1
	push_b 1
	addI
	push_a 1
	jsr_eval 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 i
	jmp s53
s53.1
	pop_a 1
	pop_b 1
	pushD m_ParserToVM
	pushD x_53
.d 0 2 ii
	jmp _match_error
.string x_53 "tagLength"
.n 4 _
.o 1 0
n48
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea48
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea48
	jsr_eval 3
	push_array 2
	push_array 2
	push_r_args 2 4 0
	update_a 5 8
	update_a 2 5
	update_a 4 7
	update_a 1 4
	update_a 3 6
	update_a 0 3
	pop_a 3
.o 7 0
s48
	push_a 6
	buildI 1
	push_a 3
	push_a 8
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.156
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.156
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.157
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.157
	push_arg 0 2 2
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.o 8 0
s135
	eq_desc _Cons 2 4
	jmp_true case.158
	jmp s135.1
case.158
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.159
	pop_a 2
	jmp s135.1
case.159
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.160
	push_a 1
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 12
	push_a 12
	push_a 12
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordClassTable 5 e_symTable_ninsertRecordClassTable
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	update_a 1 12
	updatepop_a 0 11
.d 2 1 b
	rtn
else.160
	push_a 1
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 12
	push_a 12
	push_a 12
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordClassTable 5 e_symTable_ninsertRecordClassTable
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 18
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 8 0
	jmp s135
s135.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_135
.d 0 2 ii
	jmp _match_error
.string x_135 "parseAllClassVars"
.o 7 0
s136
	eq_desc _Cons 2 4
	jmp_true case.161
	jmp s136.1
case.161
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.162
	pop_a 2
	jmp s136.1
case.162
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.163
	pop_a 4
	jmp s136.1
case.163
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.164
	pop_a 6
	jmp s136.1
case.164
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> var </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.165
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 15
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 16
	updatepop_a 0 15
.d 2 1 b
	rtn
else.165
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.166
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 9 0
	push_a 16
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	jsr_eval 0
	push_a 15
	push_a 14
	push_a 14
	push_a 14
	push_a 14
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 7 21
	update_a 6 20
	update_a 5 19
	update_a 4 18
	update_a 3 17
	update_a 2 16
	update_a 1 15
	updatepop_a 0 14
.d 8 0
	jmp s170
else.166
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 9 0
	push_a 16
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 20
	update_a 5 19
	update_a 4 18
	update_a 3 17
	update_a 2 16
	update_a 1 15
	updatepop_a 0 14
.d 7 0
	jmp s136
s136.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_136
.d 0 2 ii
	jmp _match_error
.string x_136 "parseAllVars"
.o 7 0
s137
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n224
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.167
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 1
.d 2 0
	rtn
else.167
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.168
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 1
.d 2 0
	rtn
else.168
	push_arg 0 2 2
	jsr_eval 0
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.n 1 _ ea224
.o 1 0
n224
	push_node _cycle_in_spine 1
.o 2 0
ea224
.o 2 0
s224
	buildAC ".vm"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s138
	eq_desc _Cons 2 4
	jmp_true case.169
	jmp s138.1
case.169
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.170
	jmp case.171
case.170
	push_args 1 2 2
	jsr_eval 0
	eqC_a ' ' 0
	jmp_true case.172
	pop_a 2
	jmp case.171
case.172
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.173
	pop_a 2
	jmp case.171
case.173
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	CtoI
	pop_a 2
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\ncall String.appendChar 2\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.174
	buildAC "failed to append char to string"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.174
	push_a 0
	pushB TRUE
	updatepop_a 0 10
	updatepop_b 0 1
.d 1 1 b
	rtn
case.171
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	CtoI
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\ncall String.appendChar 2\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.175
	buildAC "failed to append char to string"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.175
	push_a 0
	jsr_eval 0
	push_a 8
	push_a 3
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s138
s138.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_138
.d 0 2 ii
	jmp _match_error
.string x_138 "parseAppendChar"
.o 7 0
s139
	eq_desc _Cons 2 4
	jmp_true case.176
	jmp s139.1
case.176
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> + </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s127
.o 0 1 b
	notB
	jmp_false else.177
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.177
	push_a 1
	jsr_eval 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s141
.o 2 1 b
	push_b 0
	notB
	jmp_false else.178
	buildAC "failed expression"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.178
	build_r e_StdFile_rFileSystem; 4 0 3 0
	push_a 2
	push_a 10
	push_a 5
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n195
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	pop_b 1
.d 7 0
	jmp s139
s139.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_139
.d 0 2 ii
	jmp _match_error
.string x_139 "parseOpTerm"
.n 4 _ ea195
.o 1 0
n195
	push_node _cycle_in_spine 4
.o 5 0
ea195
.o 5 0
s195
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s54
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
s140
	eq_desc _Cons 2 4
	jmp_true case.179
	jmp case.180
case.179
	push_args 4 2 2
	jsr_eval 0
	push_array 0
	eqAC_a "<symbol> ) </symbol>\n"
	jmp_true case.181
	pop_a 2
	jmp case.180
case.181
	push_a 9
	push_a 2
	push_a 9
	pushB TRUE
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 3 1 b
	rtn
case.180
	push_a 7
	push_a 7
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	buildh _Nil 0
	update_a 0 12
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s147
.o 2 1 b
	push_b 0
	notB
	jmp_false else.182
	buildAC "failed to parse expression in push argument"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 4 4
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 3 1 b
	rtn
else.182
	push_a 0
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	pop_b 1
	buildh _Nil 0
	update_a 0 5
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.183
	buildI 1
	push_a 10
	build _ 2 e_StdInt_n+;6
	push_a 2
	jsr_eval 0
	push_a 5
	push_a 13
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	update_a 7 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 8 0
	jmp s140
else.183
	buildI 1
	push_a 10
	build _ 2 e_StdInt_n+;6
	push_a 2
	push_a 2
	buildh ARRAY 1
	buildh _Cons 2
	push_a 5
	push_a 13
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	update_a 7 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 8 0
	jmp s140
.o 7 0
s141
	eq_desc _Cons 2 4
	jmp_true case.184
	jmp s141.1
case.184
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pushI 17
	push_a 0
.d 1 1 i
	jsr s52
.o 1 0
	buildAC "<integerConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.185
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s169
else.185
	pushI 16
	push_a 0
.d 1 1 i
	jsr s52
.o 1 0
	buildAC "<stringConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.186
	push_a 8
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s168
else.186
	pushI 9
	push_a 0
.d 1 1 i
	jsr s52
.o 1 0
	buildAC "<keyword>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.187
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s167
else.187
	push_a 1
	jsr_eval 0
	pushI 0
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> [ </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.188
	push_a 7
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 10
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s166
else.188
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.189
	buildAC "<symbol> ~ </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.189
then.189
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s165
else.189
	buildAC "<symbol> ( </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.191
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s164
else.191
	pushI 12
	push_a 0
.d 1 1 i
	jsr s52
.o 1 0
	buildAC "<identifier>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.192
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s163
else.192
	pushI 1
	push_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	pushI 0
	push_a 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	jsr catAC
.o 1 0
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "ABORT\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
s141.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_141
.d 0 2 ii
	jmp _match_error
.string x_141 "parseTerm"
.o 7 0
s142
	eq_desc _Cons 2 4
	jmp_true case.193
	jmp s142.1
case.193
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.194
	pop_a 2
	jmp s142.1
case.194
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> . </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.195
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s162
else.195
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 11
	push_a 11
	buildAC "push pointer 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 2
	jsr_eval 0
	push_a 11
	buildI 1
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 10 11
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 8 0
	jsr s140
.o 3 1 b
	push_b 0
	notB
	jmp_false else.196
	buildAC "failed"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.196
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 3
	push_a 2
	push_a 6
	push_a 13
	push_a 4
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n196
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	update_a 1 12
	updatepop_a 0 11
	updatepop_b 0 1
.d 2 1 b
	rtn
s142.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_142
.d 0 2 ii
	jmp _match_error
.string x_142 "parseSubroutineCall"
.n 5 _ ea196
.o 1 0
n196
	push_node _cycle_in_spine 5
.o 6 0
ea196
.o 6 0
s196
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_array 4
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s143
	eq_desc _Cons 2 4
	jmp_true case.197
	jmp s143.1
case.197
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s129
.o 0 1 b
	notB
	jmp_false else.198
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.198
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s144
.o 2 1 b
	push_b 0
	notB
	jmp_false else.199
	buildAC "error in let statement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.199
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s143
s143.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_143
.d 0 2 ii
	jmp _match_error
.string x_143 "parseStatement"
.o 7 0
s144
	eq_desc _Cons 2 4
	jmp_true case.200
	jmp s144.1
case.200
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.201
	pop_a 2
	jmp s144.1
case.201
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.202
	pop_a 4
	jmp s144.1
case.202
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.203
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jmp s161
else.203
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> [ </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.204
	push_a 11
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 14
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jmp s160
else.204
	push_a 1
	jsr_eval 0
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 9 12
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s147
.o 2 1 b
	push_b 0
	notB
	jmp_false else.205
	buildAC "failed to gen code for expression"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.205
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 5 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.206
	buildAC "failed to get symbol record fields"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.206
	push_a 4
	jsr_eval 0
	push_a 12
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 16
	update_a 0 9
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "pop "
.d 2 0
	jsr catAC
.o 1 0
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	update_a 12 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.207
	buildAC "failed to write vm code to file"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.207
	push_a 1
	build _ 1 n247
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s144.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_144
.d 0 2 ii
	jmp _match_error
.string x_144 "parseLetStatement"
.n 1 _ ea247
.o 1 0
n247
	push_node _cycle_in_spine 1
.o 2 0
ea247
	jsr_eval 0
.o 2 0
s247
	eq_desc _Cons 2 0
	jmp_true case.208
	jmp s247.1
case.208
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s247.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_247
.d 0 2 ii
	jmp _match_error
.string x_247 "_match3"
.o 5 0
s145
	push_a 4
	buildI 0
	push_a 3
	buildAC "counters\\ifcounter.txt"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 9
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.209
	buildAC ""
	updatepop_a 0 6
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
	pushI_a 1
	update_a 0 1
	pop_a 1
.d 2 1 i
	rtn
else.209
	push_arg 0 3 2
	jsr_eval 0
	pushF_a 0
	pop_a 1
.d 0 2 f
	jsr readLineF
.o 1 2 f
	push_a 0
	updatepop_a 0 1
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	push_arg 0 3 3
	push_a 2
	buildF_b 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	pushI 1
	push_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "counters\\ifcounter.txt"
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.210
	buildAC "failed to increase if counter"
	updatepop_a 0 1
	pop_b 4
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
	pushI_a 1
	update_a 0 1
	pop_a 1
.d 2 1 i
	rtn
else.210
	push_a 0
	jsr_eval 0
	push_b 1
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
	updatepop_b 0 4
.d 2 1 i
	rtn
.o 5 0
s146
	push_a 4
	buildI 0
	push_a 3
	buildAC "counters\\whilecounter.txt"
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 9
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.211
	buildAC ""
	updatepop_a 0 6
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
	pushI_a 1
	update_a 0 1
	pop_a 1
.d 2 1 i
	rtn
else.211
	push_arg 0 3 2
	jsr_eval 0
	pushF_a 0
	pop_a 1
.d 0 2 f
	jsr readLineF
.o 1 2 f
	push_a 0
	updatepop_a 0 1
.d 1 0
	jsr e_StdInt_stoInt;23
.o 0 1 i
	push_arg 0 3 3
	push_a 2
	buildF_b 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	pushI 1
	push_b 1
	addI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "counters\\whilecounter.txt"
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.212
	buildAC "failed to increase if counter"
	updatepop_a 0 1
	pop_b 4
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
	pushI_a 1
	update_a 0 1
	pop_a 1
.d 2 1 i
	rtn
else.212
	push_a 0
	jsr_eval 0
	push_b 1
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
	updatepop_b 0 4
.d 2 1 i
	rtn
.o 7 0
s147
	eq_desc _Cons 2 4
	jmp_true case.213
	jmp s147.1
case.213
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.214
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.214
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s141
.o 2 1 b
	push_b 0
	notB
	jmp_false else.215
	buildAC "failed to generate code for term"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.215
	push_a 0
	build _ 1 n248
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	buildh _Cons 2
	push_a 3
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jsr s139
.o 2 1 b
	push_b 0
	notB
	jmp_false else.216
	buildAC "failed expression"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.216
	push_a 1
	push_a 1
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s147.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_147
.d 0 2 ii
	jmp _match_error
.string x_147 "parseExpression"
.n 1 _ ea248
.o 1 0
n248
	push_node _cycle_in_spine 1
.o 2 0
ea248
	jsr_eval 0
.o 2 0
s248
	eq_desc _Cons 2 0
	jmp_true case.217
	jmp s248.1
case.217
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s248.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_248
.d 0 2 ii
	jmp _match_error
.string x_248 "_match4"
.o 7 0
s148
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n194
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.218
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.218
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.219
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.219
	push_arg 0 2 2
	pushB TRUE
	updatepop_a 0 1
.d 1 1 b
	rtn
.n 1 _ ea194
.o 1 0
n194
	push_node _cycle_in_spine 1
.o 2 0
ea194
.o 2 0
s194
	buildAC ".vm"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s149
	eq_desc _Cons 2 4
	jmp_true case.220
	jmp s149.1
case.220
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.221
	pop_a 2
	jmp s149.1
case.221
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.222
	pop_a 4
	jmp s149.1
case.222
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 6 0
	push_a 13
	buildAC "symtables\\methodcounter.txt"
	buildh ARRAY 1
	buildAC "0"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n48
	build d_S.2 -1 n_S.2
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 6
	buildh _Cons 2
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jsr s136
.o 2 1 b
	push_b 0
	notB
	jmp_false else.223
	buildAC "failed vardec"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.223
	push_a 1
	push_a 1
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s149.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_149
.d 0 2 ii
	jmp _match_error
.string x_149 "parseVarDec"
.o 7 0
s150
	eq_desc _Cons 2 4
	jmp_true case.224
	jmp s150.1
case.224
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s128
.o 0 1 b
	notB
	jmp_false else.225
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.225
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s143
.o 2 1 b
	push_b 0
	notB
	jmp_false else.226
	buildAC "failed statments"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.226
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s143
s150.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_150
.d 0 2 ii
	jmp _match_error
.string x_150 "parseStatements"
.o 8 0
s151
	eq_desc _Cons 2 4
	jmp_true case.227
	jmp s151.1
case.227
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.228
	pop_a 2
	jmp s151.1
case.228
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.229
	pop_a 4
	jmp s151.1
case.229
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ) </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.230
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 14
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 15
	updatepop_a 0 14
.d 2 1 b
	rtn
else.230
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ) </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.231
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 14
	push_a 14
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 21
	update_a 6 20
	update_a 5 19
	update_a 4 18
	update_a 3 17
	update_a 2 16
	update_a 1 15
	updatepop_a 0 14
.d 8 0
	jmp s159
else.231
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 15
	buildAC "argument"
	buildh ARRAY 1
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	update_a 9 13
	update_a 8 12
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	buildh _Nil 0
	update_a 0 18
	pop_a 1
.d 8 0
	jsr e_symTable_sinsertRecordMethodTable
.o 2 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.232
	buildAC "failed to insert argument symbol"
	updatepop_a 0 12
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.232
	buildAC "<symbol> , </symbol>\n"
	push_array 3
	update_a 3 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.233
	push_a 1
	jsr_eval 0
	push_a 1
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s151
else.233
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 11
	updatepop_a 0 10
.d 2 1 b
	rtn
s151.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_151
.d 0 2 ii
	jmp _match_error
.string x_151 "parseParameterList"
.o 9 0
s152
	eq_desc _Cons 2 4
	jmp_true case.234
	jmp s152.1
case.234
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 10
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s149
.o 2 1 b
	push_b 0
	notB
	jmp_false else.235
	buildAC "failed to parse vardec"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.235
	push_a 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 5 0
	jsr e_symTable_sgetMethodTableCounter
.o 3 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	push_b 0
	notB
	jmp_false else.236
	buildAC "failed to get number of locals"
	updatepop_a 0 13
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.236
	push_b 0
	notB
	jmp_false else.237
	buildAC "failed to print 'function' instruction"
	updatepop_a 0 13
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.237
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 3
	push_a 3
	push_a 13
	push_a 13
	push_a 4
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n192
	build d_S.2 -1 n_S.2
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 11
	push_a 14
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n13
	build d_S.2 -1 n_S.2
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 11
	push_a 14
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n14
	build d_S.2 -1 n_S.2
	push_a 4
	jsr_eval 0
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 16 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 7 0
	jsr s150
.o 2 1 b
	push_b 0
	notB
	jmp_false else.238
	buildAC "failed to parse statements"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.238
	push_a 0
	build _ 1 n249
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 4
	updatepop_a 0 3
	updatepop_b 0 1
.d 2 1 b
	rtn
s152.1
	pop_a 9
	pushD m_ParserToVM
	pushD x_152
.d 0 2 ii
	jmp _match_error
.string x_152 "parseSubroutineBody"
.n 1 _ ea249
.o 1 0
n249
	push_node _cycle_in_spine 1
.o 2 0
ea249
	jsr_eval 0
.o 2 0
s249
	eq_desc _Cons 2 0
	jmp_true case.239
	jmp s249.1
case.239
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s249.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_249
.d 0 2 ii
	jmp _match_error
.string x_249 "_match5"
.n 5 _ ea192
.o 1 0
n192
	push_node _cycle_in_spine 5
.o 6 0
ea192
.o 6 0
s192
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_array 4
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "function "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s153
	push_a 6
	buildI 1
	push_a 3
	push_a 8
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.240
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.240
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.241
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.241
	push_arg 0 2 2
	pushB TRUE
	updatepop_a 0 1
.d 1 1 b
	rtn
.o 8 0
s154
	eq_desc _Cons 2 4
	jmp_true case.242
	jmp s154.1
case.242
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.243
	pop_a 2
	jmp s154.1
case.243
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.244
	pop_a 4
	jmp s154.1
case.244
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.245
	pop_a 6
	jmp s154.1
case.245
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> static </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 6
.d 1 1 b
	jsr s111
.o 0 1 b
	notB
	jmp_false else.246
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 16
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 17
	updatepop_a 0 16
.d 2 1 b
	rtn
else.246
	push_a 6
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 5
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 18
	push_a 15
	push_a 15
	push_a 15
	push_a 15
	push_a 7
	update_a 5 8
	update_a 6 5
	update_a 7 6
	update_a 0 7
	pop_a 1
	update_a 7 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 8 0
	jsr s135
.o 2 1 b
	push_b 0
	notB
	jmp_false else.247
	buildAC "failed in parseClassVarDec"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.247
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	pop_b 1
.d 8 0
	jmp s154
s154.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_154
.d 0 2 ii
	jmp _match_error
.string x_154 "parseClassVarDec"
.o 8 0
s155
	eq_desc _Cons 2 4
	jmp_true case.248
	jmp s155.1
case.248
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 0
	push_array 0
	eqAC_a "<symbol> } </symbol>\n"
	jmp_true case.249
	jmp case.250
case.249
	buildh _Nil 0
	push_a 10
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 11
	updatepop_a 0 10
.d 2 1 b
	rtn
case.250
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.251
	pop_a 2
	jmp s155.1
case.251
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.252
	pop_a 3
	jmp s155.1
case.252
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.253
	pop_a 4
	jmp s155.1
case.253
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 12
	jsr_eval 0
	buildAC "symtables\\methodtable.txt"
	buildAC ""
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	buildh _Nil 0
	update_a 0 20
	pop_a 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.254
	buildAC "failed to intialize method symbol table"
	updatepop_a 0 14
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.254
	push_a 0
	jsr_eval 0
	buildAC "symtables\\methodcounter.txt"
	buildAC "0"
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.255
	buildAC "failed to intialize method counter"
	updatepop_a 0 14
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.255
	push_a 1
	jsr_eval 0
	push_a 1
	push_a 14
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 10 11
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 8 0
	jsr s151
.o 2 1 b
	push_b 0
	notB
	jmp_false else.256
	buildAC "failed to parse params list"
	updatepop_a 0 13
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.256
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	push_a 3
	push_a 6
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 8
	update_a 7 9
	update_a 0 7
	update_a 8 0
	update_a 6 8
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 8 13
	update_a 7 12
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 9 0
	jsr s152
.o 2 1 b
	push_b 0
	notB
	jmp_false else.257
	buildAC "failed to parse subroutine body"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.257
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	pop_b 1
.d 8 0
	jmp s155
s155.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_155
.d 0 2 ii
	jmp _match_error
.string x_155 "parseSubroutineDec"
.o 8 0
s156
	eq_desc _Nil 0 4
	jmp_true case.258
	jmp case.259
case.258
	push_a 7
	pushB TRUE
	updatepop_a 0 8
.d 1 1 b
	rtn
case.259
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s99
.o 1 0
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "<tokens>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.260
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s156
else.260
	buildAC "<keyword> class </keyword>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.261
	push_a 8
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 8 0
	jmp s158
else.261
	buildAC "This is why you fail"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
.o 6 0
s157
	eq_desc _Nil 0 4
	jmp_true case.262
	jmp case.263
case.262
	push_a 5
	pushB TRUE
	updatepop_a 0 6
.d 1 1 b
	rtn
case.263
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n240
	push_a 0
	build _ 1 n241
	push_a 0
	build _ 1 n242
	push_a 11
	buildI 1
	push_a 2
	build _ 1 n243
	push_a 10
	buildh _Nil 0
	update_a 0 16
	update_a 0 8
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.264
	buildAC "failed to open vm file to writing in the first time"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.264
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC ""
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 9
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.265
	buildAC "failed to close file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.265
	push_arg 0 2 2
	push_a 6
	buildAC "TxmlFiles\\"
	buildh ARRAY 1
	build _ 2 e_StdString_n+++;11
	push_a 10
	build _ 3 n238
	push_a 0
	build d_S.2 -1 n_S.2
	update_a 1 2
	updatepop_a 0 1
.d 1 0
	jsr e_FileManipulation_slistOfLinesInFile
.o 2 0
	push_a 2
	build d_S.3 -1 n_S.3
	push_a 10
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 3 n239
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	buildI 1
	push_a 6
	push_a 16
	push_a 16
	push_a 16
	push_a 16
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 8 0
	jsr s156
.o 1 1 b
	push_b 0
	notB
	jmp_false else.266
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ", execution terminated\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "Failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.266
	push_a 6
	jsr_eval 0
	push_a 1
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 6 0
	jsr s157
.o 1 1 b
	push_b 0
	notB
	jmp_false else.267
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "T.xml\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.267
	push_a 0
	push_a 7
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
	pop_b 1
.d 6 0
	jmp s157
.n 1 _ ea243
.o 1 0
n243
	push_node _cycle_in_spine 1
.o 2 0
ea243
.o 2 0
s243
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".vm"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea242
.o 1 0
n242
	push_node _cycle_in_spine 1
.o 2 0
ea242
.o 2 0
s242
	push_a 0
	jsr_eval 0
	push_a 1
	pushI 0
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr s103
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s102
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea241
.o 1 0
n241
	push_node _cycle_in_spine 1
.o 2 0
ea241
.o 2 0
s241
	push_a 0
	jsr_eval 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 0
	updatepop_a 0 1
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea240
.o 1 0
n240
	push_node _cycle_in_spine 2
.o 3 0
ea240
.o 3 0
s240
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s100
.n 3 _ ea239
.o 1 0
n239
	push_node _cycle_in_spine 3
.o 4 0
ea239
.o 4 0
s239
	push_a 2
	push_a 1
	jsr_eval 0
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.n 3 _ ea238
.o 1 0
n238
	push_node _cycle_in_spine 3
.o 4 0
ea238
.o 4 0
s238
	push_a 2
	buildI 0
	push_a 2
	jsr_eval 0
	push_a 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 3
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 8 0
s158
	eq_desc _Cons 2 4
	jmp_true case.268
	jmp s158.1
case.268
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.269
	pop_a 1
	jmp s158.1
case.269
	repl_args 2 2
	pop_a 1
	push_a 8
	buildAC "symtables\\classtable.txt"
	buildAC ""
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.270
	buildAC "failed to intialize class symbol table"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.270
	push_a 0
	jsr_eval 0
	buildAC "symtables\\classstaticcounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.271
	buildAC "failed to intialize class counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.271
	push_a 0
	jsr_eval 0
	buildAC "symtables\\classfieldcounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.272
	buildAC "failed to intialize class counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.272
	push_a 0
	jsr_eval 0
	buildAC "counters\\ifcounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.273
	buildAC "failed to intialize if counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.273
	push_a 0
	jsr_eval 0
	buildAC "counters\\whilecounter.txt"
	buildAC "0"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s153
.o 1 1 b
	push_b 0
	notB
	jmp_false else.274
	buildAC "failed to intialize while counter"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.274
	push_a 1
	jsr_eval 0
	push_a 1
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 8 0
	jsr s154
.o 2 1 b
	push_b 0
	notB
	jmp_false else.275
	buildAC "failed to parse vardec"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.275
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jsr s155
.o 2 1 b
	push_b 0
	notB
	jmp_false else.276
	buildAC "failed to parse subroutine"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.276
	push_a 1
	pushB TRUE
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 b
	rtn
s158.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_158
.d 0 2 ii
	jmp _match_error
.string x_158 "parseClass"
.o 8 0
s159
	eq_desc _Cons 2 4
	jmp_true case.277
	jmp s159.1
case.277
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.278
	pop_a 2
	jmp s159.1
case.278
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.279
	pop_a 4
	jmp s159.1
case.279
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 15
	buildAC "argument"
	buildh ARRAY 1
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	update_a 9 21
	update_a 8 20
	update_a 7 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 8 0
	jsr e_symTable_sinsertRecordMethodTable
.o 2 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.280
	buildAC "failed to insert argument symbol"
	updatepop_a 0 4
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.280
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 2
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 5
	updatepop_a 0 4
.d 2 1 b
	rtn
s159.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_159
.d 0 2 ii
	jmp _match_error
.string x_159 "finishParameterList"
.o 7 0
s160
	eq_desc _Cons 2 4
	jmp_true case.281
	jmp s160.1
case.281
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.282
	pop_a 2
	jmp s160.1
case.282
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 10
	push_a 10
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 8 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s147
.o 2 1 b
	push_b 0
	notB
	jmp_false else.283
	buildAC "abort in parseArrayLetStatement exp1"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.283
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 5 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.284
	buildAC "failed to get symbol record fields"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.284
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\nadd\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.285
	buildAC "abort in parseArrayLetStatement varName"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.285
	push_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	push_a 1
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s147
.o 2 1 b
	push_b 0
	notB
	jmp_false else.286
	buildAC "abort in parseArrayLetStatement exp2"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.286
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 2
	push_a 9
	buildh ARRAY 1
	buildAC "pop temp 0\npop pointer 1\npush temp 0\npop that 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 1
	build _ 1 n250
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 1
.d 2 1 b
	rtn
s160.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_160
.d 0 2 ii
	jmp _match_error
.string x_160 "parseArrayLetStatement"
.n 1 _ ea250
.o 1 0
n250
	push_node _cycle_in_spine 1
.o 2 0
ea250
	jsr_eval 0
.o 2 0
s250
	eq_desc _Cons 2 0
	jmp_true case.287
	jmp s250.1
case.287
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s250.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_250
.d 0 2 ii
	jmp _match_error
.string x_250 "_match6"
.o 7 0
s161
	eq_desc _Cons 2 4
	jmp_true case.288
	jmp s161.1
case.288
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.289
	pop_a 2
	jmp s161.1
case.289
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.290
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s179
else.290
	push_a 1
	jsr_eval 0
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s147
.o 2 1 b
	push_b 0
	notB
	jmp_false else.291
	buildAC "failed in parseIfStatement 1"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.291
	push_a 1
	jsr_eval 0
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 5 0
	jsr s145
.o 2 1 i
	push_b 0
	updatepop_b 0 1
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 2
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\ngoto IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_a 2
.d 2 0
	jsr catAC
.o 1 0
	buildAC "if-goto IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_a 3
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.292
	buildAC "failed in parseIfStatement 2"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.292
	push_a 2
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	push_a 0
	pop_b 1
	buildh _Nil 0
	update_a 0 5
	pop_a 1
.d 1 0
	jsr s50
.o 0 1 b
	jmp_false else.293
	push_a 1
	jsr_eval 0
	push_array 10
	push_a 4
	push_a 3
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	update_a 7 18
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 8 0
	jmp s178
else.293
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 2
	push_a 11
	push_a 5
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n231
	build d_S.2 -1 n_S.2
	push_a 10
	push_a 2
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	update_a 9 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 0
	jsr s150
.o 2 1 b
	push_b 0
	notB
	jmp_false else.294
	buildAC "failed in parseIfStatement 3"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.294
	push_a 1
	jsr_eval 0
	buildAC "\n"
	push_a 4
	pop_b 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 5
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "label IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_array 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.295
	buildAC "failed in parseIfStatement 2"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.295
	push_a 1
	build _ 1 n251
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s161.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_161
.d 0 2 ii
	jmp _match_error
.string x_161 "parseIfStatement"
.n 1 _ ea251
.o 1 0
n251
	push_node _cycle_in_spine 1
.o 2 0
ea251
	jsr_eval 0
.o 2 0
s251
	eq_desc _Cons 2 0
	jmp_true case.296
	jmp s251.1
case.296
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s251.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_251
.d 0 2 ii
	jmp _match_error
.string x_251 "_match7"
.n 4 _ ea231
.o 1 0
n231
	push_node _cycle_in_spine 4
.o 5 0
ea231
.o 5 0
s231
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "label IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s162
	eq_desc _Cons 2 4
	jmp_true case.297
	jmp s162.1
case.297
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.298
	pop_a 2
	jmp s162.1
case.298
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.299
	pop_a 4
	jmp s162.1
case.299
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.300
	pop_a 6
	jmp s162.1
case.300
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 15
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 21
	pop_a 1
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 5 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.301
	push_a 6
	push_a 6
	buildh _Cons 2
	push_a 8
	buildh _Cons 2
	push_a 10
	buildh _Cons 2
	push_a 12
	buildh _Cons 2
	push_a 5
	push_a 20
	push_a 19
	push_a 19
	push_a 19
	push_a 19
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 26
	update_a 5 25
	update_a 4 24
	update_a 3 23
	update_a 2 22
	update_a 1 21
	updatepop_a 0 20
.d 7 0
	jmp s177
else.301
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "this"
	push_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.302
	push_a 6
	push_a 6
	buildh _Cons 2
	push_a 8
	buildh _Cons 2
	push_a 10
	buildh _Cons 2
	push_a 12
	buildh _Cons 2
	push_a 5
	push_a 20
	push_a 4
	push_a 6
	push_a 21
	push_a 21
	push_a 21
	push_a 21
	push_a 8
	update_a 8 9
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 8 28
	update_a 7 27
	update_a 6 26
	update_a 5 25
	update_a 4 24
	update_a 3 23
	update_a 2 22
	update_a 1 21
	updatepop_a 0 20
.d 9 0
	jmp s176
else.302
	build_r e_StdFile_rFileSystem; 4 0 13 0
	push_a 5
	push_a 20
	push_a 4
	push_a 4
	buildh ARRAY 1
	push_a 4
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n197
	build d_S.2 -1 n_S.2
	push_a 7
	jsr_eval 0
	push_a 20
	buildI 1
	push_a 20
	push_a 20
	push_a 20
	push_a 20
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 10 14
	update_a 7 13
	update_a 6 12
	update_a 5 11
	update_a 4 10
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
.d 8 0
	jsr s140
.o 3 1 b
	push_b 0
	notB
	jmp_false else.303
	buildAC "failed"
	updatepop_a 0 17
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.303
	build_r e_StdFile_rFileSystem; 4 0 10 0
	push_a 3
	push_a 17
	push_a 3
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 6 n198
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	update_a 1 18
	updatepop_a 0 17
	updatepop_b 0 1
.d 2 1 b
	rtn
s162.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_162
.d 0 2 ii
	jmp _match_error
.string x_162 "doExternalSubroutine"
.n 6 _ ea198
.o 1 0
n198
	push_node _cycle_in_spine 6
.o 7 0
ea198
.o 7 0
s198
	push_a 5
	jsr_eval 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 12
	update_a 5 11
	update_a 4 10
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 5 _ ea197
.o 1 0
n197
	push_node _cycle_in_spine 5
.o 6 0
ea197
	jsr_eval 1
	push_array 1
	update_a 0 2
	pop_a 1
.o 6 0
s197
	push_a 4
	jsr_eval 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 4
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s163
	eq_desc _Cons 2 4
	jmp_true case.304
	jmp s163.1
case.304
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.305
	pop_a 2
	jmp s163.1
case.305
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ( </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.306
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s142
else.306
	buildAC "<symbol> . </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.307
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s142
else.307
	push_a 9
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 12
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s175
s163.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_163
.d 0 2 ii
	jmp _match_error
.string x_163 "var_or_subroutine"
.o 7 0
s164
	eq_desc _Cons 2 4
	jmp_true case.308
	jmp s164.1
case.308
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n31
	push_a 0
	build d_S.3 -1 n_S.3
	push_a 1
	build d_S.2 -1 n_S.2
	build _ 1 n252
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
s164.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_164
.d 0 2 ii
	jmp _match_error
.string x_164 "parseTermExpression"
.n 1 _ ea252
.o 1 0
n252
	push_node _cycle_in_spine 1
.o 2 0
ea252
	jsr_eval 0
.o 2 0
s252
	eq_desc _Cons 2 0
	jmp_true case.309
	jmp s252.1
case.309
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s252.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_252
.d 0 2 ii
	jmp _match_error
.string x_252 "_match8"
.o 7 0
s165
	eq_desc _Cons 2 4
	jmp_true case.310
	jmp s165.1
case.310
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 4
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n33
	push_a 0
	build d_S.3 -1 n_S.3
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 10
	push_a 4
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n211
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 11
	updatepop_a 0 10
.d 2 1 b
	rtn
s165.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_165
.d 0 2 ii
	jmp _match_error
.string x_165 "parseUnaryOp"
.n 4 _ ea211
.o 1 0
n211
	push_node _cycle_in_spine 4
.o 5 0
ea211
.o 5 0
s211
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s55
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s166
	eq_desc _Cons 2 4
	jmp_true case.311
	jmp s166.1
case.311
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.312
	pop_a 2
	jmp s166.1
case.312
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 10
	push_a 10
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 8 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s147
.o 2 1 b
	push_b 0
	notB
	jmp_false else.313
	buildAC "failed in parseArrayTerm 2"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.313
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 5 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.314
	buildAC "failed to get symbol record fields"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.314
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\nadd\npop pointer 1\npush that 0\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 12 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.315
	buildAC "failed in parseArrayTerm 3"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.315
	push_a 1
	build _ 1 n253
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s166.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_166
.d 0 2 ii
	jmp _match_error
.string x_166 "parseArrayTerm"
.n 1 _ ea253
.o 1 0
n253
	push_node _cycle_in_spine 1
.o 2 0
ea253
	jsr_eval 0
.o 2 0
s253
	eq_desc _Cons 2 0
	jmp_true case.316
	jmp s253.1
case.316
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s253.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_253
.d 0 2 ii
	jmp _match_error
.string x_253 "_match9"
.o 7 0
s167
	eq_desc _Cons 2 4
	jmp_true case.317
	jmp s167.1
case.317
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> null </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.318
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s174
else.318
	buildAC "<keyword> false </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.319
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s173
else.319
	buildAC "<keyword> true </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.320
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s172
else.320
	buildAC "<keyword> this </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.321
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s171
else.321
	pop_a 2
	jmp s167.1
s167.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_167
.d 0 2 ii
	jmp _match_error
.string x_167 "parseKeywordTerm"
.o 7 0
s168
	eq_desc _Cons 2 4
	jmp_true case.322
	jmp s168.1
case.322
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
.d 1 0
	jsr s3
.o 1 0
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s92
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s137
.o 2 0
	pop_a 1
	push_a 8
	buildAC "call String.new 1\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
.d 7 0
	jsr s137
.o 2 0
	pop_a 1
	push_a 8
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 8 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s138
.o 1 1 b
	push_b 0
	notB
	jmp_false else.323
	buildAC "failed to append chars to string"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.323
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s168.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_168
.d 0 2 ii
	jmp _match_error
.string x_168 "parseStringConstant"
.o 7 0
s169
	eq_desc _Cons 2 4
	jmp_true case.324
	jmp s169.1
case.324
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n227
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
s169.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_169
.d 0 2 ii
	jmp _match_error
.string x_169 "parseIntegerConstant"
.n 4 _ ea227
.o 1 0
n227
	push_node _cycle_in_spine 4
.o 5 0
ea227
.o 5 0
s227
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
s170
	eq_desc _Cons 2 4
	jmp_true case.325
	jmp s170.1
case.325
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.326
	pop_a 2
	jmp s170.1
case.326
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s112
.o 0 1 b
	notB
	jmp_false else.327
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 12
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 13
	updatepop_a 0 12
.d 2 1 b
	rtn
else.327
	buildAC "<symbol> , </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.328
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 13
	buildAC "local"
	buildh ARRAY 1
	push_a 13
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 2
	jsr_eval 0
	push_a 12
	push_a 12
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 8 0
	jmp s170
else.328
	buildAC "<symbol> ; </symbol>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.329
	push_a 1
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 12
	buildAC "local"
	buildh ARRAY 1
	push_a 12
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 11
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s136
else.329
	pop_a 3
	jmp s170.1
s170.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_170
.d 0 2 ii
	jmp _match_error
.string x_170 "parseMultipleVarsInLine"
.o 7 0
s171
	eq_desc _Cons 2 4
	jmp_true case.330
	jmp s171.1
case.330
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	buildAC "push pointer 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 1 b
	rtn
s171.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_171
.d 0 2 ii
	jmp _match_error
.string x_171 "parseThis"
.o 7 0
s172
	eq_desc _Cons 2 4
	jmp_true case.331
	jmp s172.1
case.331
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	buildAC "push constant 0\nnot\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 1 b
	rtn
s172.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_172
.d 0 2 ii
	jmp _match_error
.string x_172 "parseTrue"
.o 7 0
s173
	eq_desc _Cons 2 4
	jmp_true case.332
	jmp s173.1
case.332
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	buildAC "push constant 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 1 b
	rtn
s173.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_173
.d 0 2 ii
	jmp _match_error
.string x_173 "parseFalse"
.o 7 0
s174
	eq_desc _Cons 2 4
	jmp_true case.333
	jmp s174.1
case.333
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	buildAC "push constant 0\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 1 b
	rtn
s174.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_174
.d 0 2 ii
	jmp _match_error
.string x_174 "parseNull"
.o 7 0
s175
	eq_desc _Cons 2 4
	jmp_true case.334
	jmp s175.1
case.334
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.335
	pop_a 2
	jmp s175.1
case.335
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 11
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 6 0
	jsr e_symTable_sfetchVariableFromTables
.o 5 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.336
	buildAC "failed to get symbol record fields"
	updatepop_a 0 14
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.336
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 13 20
	update_a 12 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.337
	buildAC "failed to write vm code to file"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.337
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 4
	updatepop_a 0 3
	updatepop_b 0 1
.d 2 1 b
	rtn
s175.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_175
.d 0 2 ii
	jmp _match_error
.string x_175 "parseVarName"
.o 9 0
s176
	eq_desc _Cons 2 4
	jmp_true case.338
	jmp s176.1
case.338
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.339
	pop_a 1
	jmp s176.1
case.339
	repl_args 2 2
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.340
	pop_a 1
	jmp s176.1
case.340
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.341
	pop_a 2
	jmp s176.1
case.341
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 3 0
	push_a 12
	push_a 12
	push_a 12
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n200
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 12
	buildI 1
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 9 10
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 16
	update_a 0 18
	pop_a 1
.d 8 0
	jsr s140
.o 3 1 b
	push_b 0
	notB
	jmp_false else.342
	buildAC "failed"
	updatepop_a 0 13
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.342
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 3
	push_a 13
	push_a 3
	push_a 7
	push_a 14
	push_a 5
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 6 n199
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	update_a 1 14
	updatepop_a 0 13
	updatepop_b 0 1
.d 2 1 b
	rtn
s176.1
	pop_a 9
	pushD m_ParserToVM
	pushD x_176
.d 0 2 ii
	jmp _match_error
.string x_176 "doClassObjectMethod"
.n 4 _ ea200
.o 1 0
n200
	push_node _cycle_in_spine 4
.o 5 0
ea200
.o 5 0
s200
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push this "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 6 _ ea199
.o 1 0
n199
	push_node _cycle_in_spine 6
.o 7 0
ea199
.o 7 0
s199
	push_a 5
	jsr_eval 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 12
	update_a 5 11
	update_a 4 10
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s177
	eq_desc _Cons 2 4
	jmp_true case.343
	jmp s177.1
case.343
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.344
	pop_a 2
	jmp s177.1
case.344
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.345
	pop_a 3
	jmp s177.1
case.345
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.346
	pop_a 4
	jmp s177.1
case.346
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 12
	push_a 12
	buildI 0
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 11 12
	update_a 9 11
	update_a 7 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	buildh _Nil 0
	update_a 0 17
	pop_a 1
.d 8 0
	jsr s140
.o 3 1 b
	push_b 0
	notB
	jmp_false else.347
	buildAC "failed"
	updatepop_a 0 12
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.347
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n201
	build e_StdList_dlength;47 1 e_StdList_nlength;47
	push_a 2
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 3
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n206
	push_a 3
	build _ 2 n205
	push_a 2
	build d_S.2 -1 n_S.2
	push_a 3
	build d_S.1 -1 n_S.1
	build _ 2 n204
	push_a 4
	build _ 2 n203
	build_r e_StdFile_rFileSystem; 4 0 12 0
	push_a 10
	push_a 19
	push_a 10
	push_a 14
	push_a 6
	update_a 4 7
	update_a 1 4
	update_a 5 1
	update_a 2 5
	update_a 6 2
	update_a 3 6
	update_a 0 3
	pop_a 1
	build _ 7 n202
	build d_S.2 -1 n_S.2
	push_a 7
	pushB TRUE
	update_a 1 18
	updatepop_a 0 17
	updatepop_b 0 1
.d 2 1 b
	rtn
s177.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_177
.d 0 2 ii
	jmp _match_error
.string x_177 "doExternalFunction"
.n 2 _ ea206
.o 1 0
n206
	push_node _cycle_in_spine 2
.o 3 0
ea206
.o 3 0
s206
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s96
.n 2 _ ea205
.o 1 0
n205
	push_node _cycle_in_spine 2
.o 3 0
ea205
.o 3 0
s205
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea204
.o 1 0
n204
	push_node _cycle_in_spine 2
.o 3 0
ea204
.o 3 0
s204
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s94
.n 2 _ ea203
.o 1 0
n203
	push_node _cycle_in_spine 2
.o 3 0
ea203
.o 3 0
s203
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	updatepop_a 0 2
.d 2 1 i
	jmp e_StdList_stake
.n 7 _ ea202
.o 1 0
n202
	push_node _cycle_in_spine 7
.o 8 0
ea202
.o 8 0
s202
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 6
	jsr_eval 0
	pushI_a 7
	pop_a 1
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 8
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_a 5
	jsr_eval 0
	pushI 0
	buildh _Nil 0
	update_a 0 7
	update_a 0 8
	pop_a 1
.d 1 1 i
	jsr s98
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 3 0
	jsr s97
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "call "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 2 _ ea201
.o 1 0
n201
	push_node _cycle_in_spine 2
.o 3 0
ea201
.o 3 0
s201
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s93
.o 8 0
s178
	eq_desc _Cons 2 4
	jmp_true case.348
	jmp s178.1
case.348
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	buildAC "\n"
	push_a 8
.d 2 0
	jsr catAC
.o 1 0
	buildAC "label IF_TRUE"
.d 2 0
	jsr catAC
.o 1 0
	push_a 10
	push_a 10
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 17
	pop_a 1
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.349
	buildAC "failed in parseIfStatement 1"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.349
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 1
	push_a 11
	buildh ARRAY 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 0
	jsr s150
.o 2 1 b
	push_b 0
	notB
	jmp_false else.350
	buildAC "failed in parseIfStatement 2"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.350
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 2
	push_a 10
	push_a 10
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n232
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	push_a 10
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s150
.o 2 1 b
	push_b 0
	notB
	jmp_false else.351
	buildAC "failed in parseIfStatement 2"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.351
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 2
	push_a 10
	push_a 10
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n233
	build d_S.2 -1 n_S.2
	push_a 1
	build _ 1 n254
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 11
	updatepop_a 0 10
	updatepop_b 0 1
.d 2 1 b
	rtn
s178.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_178
.d 0 2 ii
	jmp _match_error
.string x_178 "parseElseStatement"
.n 1 _ ea254
.o 1 0
n254
	push_node _cycle_in_spine 1
.o 2 0
ea254
	jsr_eval 0
.o 2 0
s254
	eq_desc _Cons 2 0
	jmp_true case.352
	jmp s254.1
case.352
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s254.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_254
.d 0 2 ii
	jmp _match_error
.string x_254 "_match10"
.n 4 _ ea233
.o 1 0
n233
	push_node _cycle_in_spine 4
.o 5 0
ea233
.o 5 0
s233
	push_a 3
	jsr_eval 0
	buildAC "\n"
	push_a 3
	buildh _Nil 0
	update_a 0 5
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "label IF_END"
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 2 4 0
	push_a 8
	push_a 5
	update_a 1 6
	update_a 2 1
	update_a 3 2
	update_a 4 3
	update_a 5 4
	update_a 0 5
	pop_a 1
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 4 _ ea232
.o 1 0
n232
	push_node _cycle_in_spine 4
.o 5 0
ea232
.o 5 0
s232
	push_a 3
	jsr_eval 0
	buildAC "\n"
	push_a 3
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nlabel IF_FALSE"
.d 2 0
	jsr catAC
.o 1 0
	push_a 3
	buildh _Nil 0
	update_a 0 5
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "goto IF_END"
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 2 4 0
	push_a 8
	push_a 5
	update_a 1 6
	update_a 2 1
	update_a 3 2
	update_a 4 3
	update_a 5 4
	update_a 0 5
	pop_a 1
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s179
	eq_desc _Cons 2 4
	jmp_true case.353
	jmp s179.1
case.353
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.354
	pop_a 2
	jmp s179.1
case.354
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> while </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.355
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s180
else.355
	push_a 10
	jsr_eval 0
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	buildh _Nil 0
	update_a 0 13
	pop_a 1
.d 5 0
	jsr s146
.o 2 1 i
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "label WHILE_EXP"
.d 2 0
	jsr catAC
.o 1 0
	push_a 3
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_true then.356
	push_a 1
	jsr_eval 0
	pushB_a 2
	pop_a 1
	notB
	jmp_false else.356
then.356
	buildAC "failed in parseWhileStatement 1"
	updatepop_a 0 10
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.356
	push_a 2
	jsr_eval 0
	push_a 1
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 0
	jsr s147
.o 2 1 b
	push_b 0
	notB
	jmp_false else.358
	buildAC "failed in parseWhileStatement 2"
	updatepop_a 0 9
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.358
	push_a 1
	jsr_eval 0
	push_b 1
	updatepop_b 0 1
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "not\nif-goto WHILE_END"
.d 2 0
	jsr catAC
.o 1 0
	push_array 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.359
	buildAC "failed in parseWhileStatement 3"
	updatepop_a 0 9
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.359
	push_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	push_a 1
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 7 0
	jsr s150
.o 2 1 b
	push_b 0
	notB
	jmp_false else.360
	buildAC "failed in parseWhileStatement 4"
	updatepop_a 0 9
	pop_b 3
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.360
	push_b 1
	notB
	jmp_false else.361
	buildAC "failed in parseWhileStatement 5"
	updatepop_a 0 9
	pop_b 3
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.361
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 2
	push_a 9
	push_b 2
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build_u _ 3 1 n234
	build d_S.2 -1 n_S.2
	push_a 1
	build _ 1 n255
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 3
.d 2 1 b
	rtn
s179.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_179
.d 0 2 ii
	jmp _match_error
.string x_179 "parseWhileStatement"
.n 1 _ ea255
.o 1 0
n255
	push_node _cycle_in_spine 1
.o 2 0
ea255
	jsr_eval 0
.o 2 0
s255
	eq_desc _Cons 2 0
	jmp_true case.362
	jmp s255.1
case.362
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s255.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_255
.d 0 2 ii
	jmp _match_error
.string x_255 "_match11"
.nu 3 1 _ _
.o 1 0
n234
	push_node_u _cycle_in_spine 3 1
.o 4 1 i
ea234
.o 4 1 i
s234
	push_a 2
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	buildh _Nil 0
	update_a 0 4
	update_a 0 5
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "\nlabel WHILE_END"
.d 2 0
	jsr catAC
.o 1 0
	push_b 0
	updatepop_b 0 1
.d 0 1 i
	jsr ItoAC
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC "goto WHILE_EXP"
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 0
	jsr s47
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s180
	eq_desc _Cons 2 4
	jmp_true case.363
	jmp s180.1
case.363
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.364
	pop_a 2
	jmp s180.1
case.364
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.365
	pop_a 4
	jmp s180.1
case.365
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> do </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.366
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jmp s181
else.366
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 12
	update_a 5 11
	update_a 4 10
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s142
.o 2 1 b
	push_b 0
	notB
	jmp_false else.367
	buildAC "abort in parseDoStatement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.367
	push_a 1
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "pop temp 0\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	pop_b 1
	update_a 7 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.368
	buildAC "abort in parseDoStatement"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.368
	push_a 1
	build _ 1 n256
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s180.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_180
.d 0 2 ii
	jmp _match_error
.string x_180 "parseDoStatement"
.n 1 _ ea256
.o 1 0
n256
	push_node _cycle_in_spine 1
.o 2 0
ea256
	jsr_eval 0
.o 2 0
s256
	eq_desc _Cons 2 0
	jmp_true case.369
	jmp s256.1
case.369
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s256.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_256
.d 0 2 ii
	jmp _match_error
.string x_256 "_match12"
.o 7 0
s181
	eq_desc _Cons 2 4
	jmp_true case.370
	jmp s181.1
case.370
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.371
	pop_a 2
	jmp s181.1
case.371
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.372
	push_a 10
	jsr_eval 0
	push_a 10
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s182
else.372
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s147
.o 2 1 b
	push_b 0
	notB
	jmp_false else.373
	buildAC "failed returnStatement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.373
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 2
	push_a 9
	buildAC "return\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n47
	build d_S.2 -1 n_S.2
	push_a 1
	build _ 1 n257
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 1
.d 2 1 b
	rtn
s181.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_181
.d 0 2 ii
	jmp _match_error
.string x_181 "parseReturnStatement"
.n 1 _ ea257
.o 1 0
n257
	push_node _cycle_in_spine 1
.o 2 0
ea257
	jsr_eval 0
.o 2 0
s257
	eq_desc _Cons 2 0
	jmp_true case.374
	jmp s257.1
case.374
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s257.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_257
.d 0 2 ii
	jmp _match_error
.string x_257 "_match13"
.o 7 0
s182
	eq_desc _Cons 2 4
	jmp_true case.375
	jmp s182.1
case.375
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.376
	pop_a 1
	jmp s182.1
case.376
	repl_args 2 2
	pop_a 1
	push_a 7
	push_a 7
	buildAC "push constant 0\nreturn\n"
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	update_a 7 14
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s148
.o 1 1 b
	push_b 0
	notB
	jmp_false else.377
	buildAC "failed return void"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.377
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s182.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_182
.d 0 2 ii
	jmp _match_error
.string x_182 "retrunVoid"
.impmod _system
.implab _match_error
.implab selector_m_error
