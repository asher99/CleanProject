.comp 920 000111010
.start _nostart_
.depend "symTable" "20190614010302"
.depend "Tokenizer" "20190528111305"
.depend "FileManipulation" "20190524120125"
.depend "StdLibMisc" "20180913124337"
.depend "Directory" "20180913124337"
.depend "_SystemEnumStrict" "20180913124337"
.depend "_SystemStrictLists" "20180913124337"
.depend "StdStrictLists" "20180913124337"
.depend "_SystemEnum" "20180913124337"
.depend "StdEnum" "20180913124337"
.depend "StdMisc" "20180913124337"
.depend "StdFunctions" "20180913124337"
.depend "StdCharList" "20180913124337"
.depend "StdTuple" "20180913124337"
.depend "StdOrdList" "20180913124337"
.depend "StdList" "20180913124337"
.depend "StdClass" "20180913124337"
.depend "StdFile" "20180913124337"
.depend "StdString" "20180913124337"
.depend "_SystemArray" "20180913124337"
.depend "StdArray" "20180913124337"
.depend "StdChar" "20180913124337"
.depend "StdReal" "20180913124337"
.depend "StdInt" "20180913124337"
.depend "StdOverloaded" "20180913124337"
.depend "StdBool" "20180913124337"
.depend "StdEnv" "20180913124337"
.depend "ParserToVM" "20190614173944"
.module m_ParserToVM "ParserToVM" "20190615225419"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod symTable
.impdesc e_symTable_dinsertRecordMethodTable
.implab e_symTable_sinsertRecordMethodTable
.implab e_symTable_ninsertRecordMethodTable
.impdesc e_symTable_dgetMethodSymbolIndex
.implab e_symTable_ngetMethodSymbolIndex
.implab e_symTable_sgetMethodSymbolKind
.implab e_symTable_sgetMethodTableCounter
.impmod FileManipulation
.implab e_FileManipulation_slistOfLinesInFile
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod StdList
.implab e_StdList_stake
.implab e_StdList_sdrop
.implab e_StdList_slength;47
.implab e_StdList_stoString;79
.impmod StdFile
.impdesc e_StdFile_dfwrites
.implab e_StdFile_sfwrites
.implab e_StdFile_nfwrites
.impdesc e_StdFile_dFileSystem;.fclose
.implab e_StdFile_nFileSystem;.fclose e_StdFile_eaFileSystem;.fclose
.impdesc e_StdFile_dFileSystem;.fopen
.implab e_StdFile_nFileSystem;.fopen e_StdFile_eaFileSystem;.fopen
.impmod StdString
.implab e_StdString_s==;2
.implab e_StdString_stoString;5
.impdesc e_StdString_d+++;11
.implab e_StdString_s+++;11
.implab e_StdString_n+++;11
.impmod _SystemArray
.impdesc e__SystemArray_dusize;23
.implab e__SystemArray_nusize;23
.impmod StdChar
.implab e_StdChar_s==;18
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s<;17
.implab e_StdInt_stoInt;20
.impmod StdBool
.implab e_StdBool_snot
.export e_ParserToVM_sParseMultipleFiles
.descexp e_ParserToVM_dParseMultipleFiles e_ParserToVM_nParseMultipleFiles e_ParserToVM_lParseMultipleFiles 3 0 "ParseMultipleFiles"
.a 0 a1
.o 2 0
e_ParserToVM_lParseMultipleFiles
	repl_args 2 2
.o 3 0
a1
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_ParserToVM_dParseMultipleFiles
.o 1 0
e_ParserToVM_nParseMultipleFiles
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 6 0
e_ParserToVM_sParseMultipleFiles
	jsr_eval 4
.d 6 0
	jmp s1
.o 3 0
ea1
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 6 0
s1
	eq_desc _Nil 0 4
	jmp_true case.1
	jmp case.2
case.1
	push_a 5
	buildB TRUE
	update_a 1 7
	updatepop_a 0 6
.d 2 0
	rtn
case.2
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n125
	push_a 0
	build _ 1 n126
	push_a 0
	build _ 1 n127
	push_a 11
	buildI 1
	push_a 2
	build _ 1 n128
	push_a 10
	buildh _Nil 0
	update_a 0 16
	update_a 0 8
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.3
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.3
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC ""
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 9
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.4
	buildAC "failed to close file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.4
	push_arg 0 2 2
	push_a 6
	buildAC "TxmlFiles\\"
	buildh ARRAY 1
	build _ 2 e_StdString_n+++;11
	push_a 10
	build _ 3 n123
	push_a 0
	build d_S.2 -1 n_S.2
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 0
	jsr e_FileManipulation_slistOfLinesInFile
.o 2 0
	push_a 2
	build d_S.3 -1 n_S.3
	push_a 11
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 3 n124
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	buildI 1
	push_a 7
	push_a 17
	push_a 17
	push_a 17
	push_a 17
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 8 0
	jsr s106
.o 1 1 b
	push_b 0
	notB
	jmp_false else.5
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ", execution terminated\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "Failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.5
	push_a 6
	jsr_eval 0
	push_a 1
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 13
	update_a 0 14
	update_a 0 15
	update_a 0 16
	update_a 0 12
	pop_a 1
.d 6 0
	jsr s107
.o 1 1 b
	pop_a 1
	notB
	jmp_false else.6
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "T.xml\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.6
	pop_a 6
	jmp s1.1
s1.1
	pop_a 6
	pushD m_ParserToVM
	pushD e_ParserToVM_dParseMultipleFiles
.d 0 2 ii
	jmp _match_error
.n 1 _ ea128
.o 1 0
n128
	push_node _cycle_in_spine 1
.o 2 0
ea128
.o 2 0
s128
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".vm"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea127
.o 1 0
n127
	push_node _cycle_in_spine 1
.o 2 0
ea127
.o 2 0
s127
	push_a 0
	jsr_eval 0
	push_a 1
	pushI 0
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr s65
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s64
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea126
.o 1 0
n126
	push_node _cycle_in_spine 1
.o 2 0
ea126
.o 2 0
s126
	push_a 0
	jsr_eval 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 0
	updatepop_a 0 1
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea125
.o 1 0
n125
	push_node _cycle_in_spine 2
.o 3 0
ea125
.o 3 0
s125
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s62
.n 3 _ ea124
.o 1 0
n124
	push_node _cycle_in_spine 3
.o 4 0
ea124
.o 4 0
s124
	push_a 2
	push_a 1
	jsr_eval 0
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.n 3 _ ea123
.o 1 0
n123
	push_node _cycle_in_spine 3
.o 4 0
ea123
.o 4 0
s123
	push_a 2
	buildI 0
	push_a 2
	jsr_eval 0
	push_a 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 3
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 1 1 i
s65
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s87
.o 1 1 i
s87
	eq_desc _Cons 2 0
	jmp_true case.7
	jmp case.8
case.7
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s65
case.8
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s64
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s86
.o 3 0
s86
	eq_desc _Cons 2 0
	jmp_true case.9
	jmp case.10
case.9
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n150
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s64
case.10
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea150
.o 1 0
n150
	push_node _cycle_in_spine 1
.o 2 0
ea150
.o 2 0
s150
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s62
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.11
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n149
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.11
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n149
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea149
.o 2 2 ii
s149
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s62
.export e_ParserToVM_sstartParsing
.descexp e_ParserToVM_dstartParsing e_ParserToVM_nstartParsing e_ParserToVM_lstartParsing 5 0 "startParsing"
.a 0 a2
.o 2 0
e_ParserToVM_lstartParsing
	repl_args 4 4
.o 5 0
a2
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 5 e_ParserToVM_dstartParsing
.o 1 0
e_ParserToVM_nstartParsing
	push_node _cycle_in_spine 5
.d 5 0
	jsr ea2
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
e_ParserToVM_sstartParsing
	jsr_eval 4
.d 8 0
	jmp s2
.o 5 0
ea2
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 8 0
s2
	eq_desc _Nil 0 4
	jmp_true case.12
	jmp case.13
case.12
	push_a 7
	buildB TRUE
	update_a 1 9
	updatepop_a 0 8
.d 2 0
	rtn
case.13
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s61
.o 1 0
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "<tokens>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.14
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s2
else.14
	buildAC "<keyword> class </keyword>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.15
	push_a 8
	jsr_eval 0
	push_a 8
	jsr_eval 0
	pushI_a 9
	pop_a 1
	push_a 7
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 1 i
	jmp s4
else.15
	buildAC "This is why you fail"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
.o 2 2 ii
s61
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.16
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n148
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.16
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n148
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea148
.o 2 2 ii
s148
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s61
.o 7 1 i
s4
	eq_desc _Cons 2 4
	jmp_true case.17
	jmp s4.1
case.17
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.18
	pop_a 1
	jmp s4.1
case.18
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 8
	buildI_b 0
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 8 0
	jsr s104
.o 2 1 b
	push_b 0
	notB
	jmp_false else.19
	buildAC "failed to parse vardec"
	updatepop_a 0 9
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.19
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_b 1
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	updatepop_b 0 2
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 1 i
	jsr s105
.o 2 1 b
	pop_a 2
	notB
	jmp_false else.20
	buildAC "failed to parse subroutine"
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.20
	buildh _Nil 0
	push_a 0
	push_a 1
	push_a 2
	push_a 3
	push_a 4
	push_a 5
	pushI 0
	jmp s4.1
s4.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_4
.d 0 2 ii
	jmp _match_error
.string x_4 "parseClass"
.o 1 1 b
s84
	eqB_b TRUE 0
	jmp_true case.21
	jmp case.22
case.21
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.22
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.23
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.23
	buildAC "<keyword> while </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.24
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.24
	buildAC "<keyword> do </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.25
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.25
	buildAC "<keyword> return </keyword>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 b
s83
	eqB_b TRUE 0
	jmp_true case.26
	jmp case.27
case.26
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.27
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.28
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.28
	buildAC "<keyword> while </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.29
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.29
	buildAC "<keyword> do </keyword>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.30
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.30
	buildAC "<keyword> return </keyword>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 1 b
s82
	eqB_b TRUE 0
	jmp_true case.31
	jmp case.32
case.31
	jsr_eval 0
	push_arg 0 3 1
	pop_b 1
	jsr_eval 0
	pushB_a 0
	pop_a 2
.d 0 1 b
	rtn
case.32
	pop_a 1
	pop_b 1
	pushB FALSE
.d 0 1 b
	rtn
.o 7 0
s32
	eq_desc _Cons 2 4
	jmp_true case.33
	jmp s32.1
case.33
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
.impmod StdFile
.impdesc e_StdFile_rFileSystem;
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n22
	push_a 0
	build d_S.3 -1 n_S.3
	push_a 1
	build d_S.2 -1 n_S.2
	build _ 1 n157
	build d_S.2 -1 n_S.2
	buildB TRUE
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
s32.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_32
.d 0 2 ii
	jmp _match_error
.string x_32 "parseTermExpression"
.n 1 _ ea157
.o 1 0
n157
	push_node _cycle_in_spine 1
.o 2 0
ea157
	jsr_eval 0
.o 2 0
s157
	eq_desc _Cons 2 0
	jmp_true case.34
	jmp s157.1
case.34
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s157.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_157
.d 0 2 ii
	jmp _match_error
.string x_157 "_match0"
.o 7 0
s31
	eq_desc _Cons 2 4
	jmp_true case.35
	jmp s31.1
case.35
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 4
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n24
	push_a 0
	build d_S.3 -1 n_S.3
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 10
	push_a 4
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n137
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.2 -1 n_S.2
	buildB TRUE
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 3 0
	rtn
s31.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_31
.d 0 2 ii
	jmp _match_error
.string x_31 "parseUnaryOp"
.n 4 _ ea137
.o 1 0
n137
	push_node _cycle_in_spine 4
.o 5 0
ea137
.o 5 0
s137
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s38
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.n 4 _
.o 1 0
n24
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea24
.o 3 0
	push_a 2
	push_a 2
	push_a 2
	fillh _Tuple 3 6
	pop_a 3
.d 1 0
	rtn
.o 4 0
ea24
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 7 0
s24
	eq_desc _Cons 2 4
	jmp_true case.36
	jmp s24.1
case.36
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pushI 17
	push_a 0
.d 1 1 i
	jsr s35
.o 1 0
	buildAC "<integerConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.37
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s27
else.37
	pushI 16
	push_a 0
.d 1 1 i
	jsr s35
.o 1 0
	buildAC "<stringConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.38
	push_a 8
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s25
else.38
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.39
	buildAC "<symbol> ~ </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.39
then.39
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s31
else.39
	buildAC "<symbol> ( </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.41
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s32
else.41
	pushI 12
	push_a 0
.d 1 1 i
	jsr s35
.o 1 0
	buildAC "<identifier>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.42
	push_a 7
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 10
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s28
else.42
	pop_a 2
	jmp s24.1
s24.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_24
.d 0 2 ii
	jmp _match_error
.string x_24 "parseTerm"
.n 4 _
.o 1 0
n22
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea22
.o 3 0
	push_a 2
	push_a 2
	push_a 2
	fillh _Tuple 3 6
	pop_a 3
.d 1 0
	rtn
.o 4 0
ea22
	jsr_eval 1
	jsr_eval 0
	repl_r_args 4 0
.o 7 0
s22
	eq_desc _Cons 2 4
	jmp_true case.43
	jmp s22.1
case.43
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.44
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
else.44
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s94
.o 2 1 b
	push_b 0
	notB
	jmp_false else.45
	buildAC "failed to generate code for term"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.45
	push_a 0
	build _ 1 n158
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	buildh _Cons 2
	push_a 3
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jsr s93
.o 2 1 b
	push_b 0
	notB
	jmp_false else.46
	buildAC "failed expression"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.46
	push_a 1
	push_a 1
	buildB TRUE
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 3 0
	rtn
s22.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_22
.d 0 2 ii
	jmp _match_error
.string x_22 "parseExpression"
.n 1 _ ea158
.o 1 0
n158
	push_node _cycle_in_spine 1
.o 2 0
ea158
	jsr_eval 0
.o 2 0
s158
	eq_desc _Cons 2 0
	jmp_true case.47
	jmp s158.1
case.47
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s158.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_158
.d 0 2 ii
	jmp _match_error
.string x_158 "_match1"
.o 1 1 b
s81
	eqB_b TRUE 0
	jmp_true case.48
	jmp case.49
case.48
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.49
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.50
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.50
	buildAC "<symbol> * </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.51
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.51
	buildAC "<symbol> / </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.52
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.52
	buildAC "<symbol> = </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.53
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.53
	buildAC "<symbol> &amp; </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.54
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.54
	buildAC "<symbol> | </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.55
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.55
	buildAC "<symbol> &lt; </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.56
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
else.56
	buildAC "<symbol> &gt; </symbol>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 1 0
s37
	buildAC "<symbol> + </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.57
	pop_a 1
	buildAC "add"
.d 1 0
	rtn
else.57
	buildAC "<symbol> - </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.58
	pop_a 1
	buildAC "sub"
.d 1 0
	rtn
else.58
	buildAC "<symbol> * </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.59
	pop_a 1
	buildAC "call Math.multiply 2"
.d 1 0
	rtn
else.59
	buildAC "<symbol> / </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.60
	pop_a 1
	buildAC "call Math.divide 2"
.d 1 0
	rtn
else.60
	buildAC "<symbol> = </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.61
	pop_a 1
	buildAC "eq"
.d 1 0
	rtn
else.61
	buildAC "<symbol> &amp; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.62
	pop_a 1
	buildAC "and"
.d 1 0
	rtn
else.62
	buildAC "<symbol> | </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.63
	pop_a 1
	buildAC "or"
.d 1 0
	rtn
else.63
	buildAC "<symbol> &lt; </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.64
	pop_a 1
	buildAC "lt"
.d 1 0
	rtn
else.64
	buildAC "<symbol> &gt; </symbol>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.65
	buildAC "gt"
.d 1 0
	rtn
else.65
	buildh _Nil 0
	jmp s37.1
s37.1
	pop_a 1
	pushD m_ParserToVM
	pushD x_37
.d 0 2 ii
	jmp _match_error
.string x_37 "opName"
.o 7 0
s28
	eq_desc _Cons 2 4
	jmp_true case.66
	jmp s28.1
case.66
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.67
	pop_a 2
	jmp s28.1
case.67
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ( </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.68
	push_a 10
	jsr_eval 0
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s30
else.68
	buildAC "<symbol> . </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.69
	push_a 10
	jsr_eval 0
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s30
else.69
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s29
s28.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_28
.d 0 2 ii
	jmp _match_error
.string x_28 "var_or_subroutine"
.o 7 0
s29
	eq_desc _Cons 2 4
	jmp_true case.70
	jmp s29.1
case.70
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.71
	pop_a 2
	jmp s29.1
case.71
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 11
	push_a 1
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	buildh _Nil 0
	update_a 0 18
	update_a 0 10
	pop_a 1
.d 6 0
	jsr e_symTable_sgetMethodSymbolKind
.o 3 0
	build_r e_StdFile_rFileSystem; 4 0 8 0
	push_a 3
	push_a 5
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build e_symTable_dgetMethodSymbolIndex 3 e_symTable_ngetMethodSymbolIndex
	push_a 1
	jsr_eval 0
	pushB_a 2
	pop_a 1
	push_a 0
	update_a 7 9
	update_a 6 8
	update_a 3 7
	update_a 1 6
	updatepop_a 0 5
.d 1 1 b
	jsr s80
.o 0 1 b
	notB
	jmp_false else.72
	buildAC "failed to get symbol record fields"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.72
	jsr_eval 0
	push_arg 0 3 3
	jsr_eval 0
	push_arg 1 3 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 10 17
	update_a 9 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jsr s96
.o 1 1 b
	push_b 0
	notB
	jmp_false else.73
	buildAC "failed to write vm code to file"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.73
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 1
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	pop_b 1
.d 3 0
	rtn
s29.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_29
.d 0 2 ii
	jmp _match_error
.string x_29 "parseVarName"
.o 1 1 b
s80
	eqB_b TRUE 0
	jmp_true case.74
	jmp case.75
case.74
	jsr_eval 0
	push_arg 0 3 1
	pop_b 1
	jsr_eval 0
	pushB_a 0
	pop_a 2
.d 0 1 b
	rtn
case.75
	pop_a 1
	pop_b 1
	pushB FALSE
.d 0 1 b
	rtn
.o 7 0
s30
	eq_desc _Cons 2 4
	jmp_true case.76
	jmp s30.1
case.76
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.77
	pop_a 2
	jmp s30.1
case.77
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	update_a 0 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 11
	updatepop_a 0 10
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
s30.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_30
.d 0 2 ii
	jmp _match_error
.string x_30 "parseSubroutineCall"
.o 1 0
s38
	buildAC "<symbol> ~ </symbol>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.78
	pop_a 1
	buildAC "not\n"
.d 1 0
	rtn
else.78
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.79
	buildAC "neg\n"
.d 1 0
	rtn
else.79
	buildh _Nil 0
	jmp s38.1
s38.1
	pop_a 1
	pushD m_ParserToVM
	pushD x_38
.d 0 2 ii
	jmp _match_error
.string x_38 "unaryOpName"
.o 7 0
s25
	eq_desc _Cons 2 4
	jmp_true case.80
	jmp s25.1
case.80
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
.d 1 0
	jsr s3
.o 1 0
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s60
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s91
.o 2 0
	pop_a 1
	push_a 8
	buildAC "call String.new 1\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
.d 7 0
	jsr s91
.o 2 0
	pop_a 1
	push_a 8
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 8 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s92
.o 1 1 b
	push_b 0
	notB
	jmp_false else.81
	buildAC "failed to append chars to string"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
.d 3 0
	rtn
else.81
	push_a 0
	push_a 2
	buildB TRUE
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 3 0
	rtn
s25.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_25
.d 0 2 ii
	jmp _match_error
.string x_25 "parseStringConstant"
.o 2 2 ii
s60
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.82
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n139
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.82
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n139
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea139
.o 2 2 ii
s139
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s60
.o 7 0
s27
	eq_desc _Cons 2 4
	jmp_true case.83
	jmp s27.1
case.83
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n140
	build d_S.2 -1 n_S.2
	push_a 2
	buildB TRUE
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 3 0
	rtn
s27.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_27
.d 0 2 ii
	jmp _match_error
.string x_27 "parseIntegerConstant"
.n 4 _ ea140
.o 1 0
n140
	push_node _cycle_in_spine 4
.o 5 0
ea140
.o 5 0
s140
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 1 1 i
s35
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n142
	create
	push_a 1
	push_b 0
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	create
	push_a 2
	push_b 0
	updatepop_b 0 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 0
.d 1 1 i
	jsr s59
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s58
.n 2 _ ea142
.o 1 0
n142
	push_node _cycle_in_spine 2
.o 3 0
ea142
.o 3 0
s142
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s56
.o 1 1 i
s59
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s79
.o 1 1 i
s79
	eq_desc _Cons 2 0
	jmp_true case.84
	jmp case.85
case.84
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s59
case.85
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s58
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s78
.o 3 0
s78
	eq_desc _Cons 2 0
	jmp_true case.86
	jmp case.87
case.86
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n144
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s58
case.87
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea144
.o 1 0
n144
	push_node _cycle_in_spine 1
.o 2 0
ea144
.o 2 0
s144
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s56
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.88
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n143
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.88
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n143
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea143
.o 2 2 ii
s143
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s56
.n 4 _
.o 1 0
n12
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea12
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea12
	jsr_eval 1
	push_array 1
	push_r_args 1 4 0
	update_a 4 6
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 7 0
s12
	buildAC "<keyword> method </keyword>\n"
	push_a 5
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.89
	push_a 6
	buildB TRUE
	update_a 1 8
	updatepop_a 0 7
.d 2 0
	rtn
else.89
	push_a 6
	jsr_eval 0
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "push argument 0\npop pointer 0\n"
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s96
.o 1 1 b
	push_b 0
	notB
	jmp_false else.90
	buildAC "failed to print method prefix"
	updatepop_a 0 1
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.90
	push_a 0
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	rtn
.n 4 _
.o 1 0
n33
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea33
	jsr_eval 3
	jsr_eval 2
	push_array 2
	push_array 2
	push_r_args 2 4 0
	update_a 5 8
	update_a 2 5
	update_a 4 7
	update_a 1 4
	update_a 3 6
	update_a 0 3
	pop_a 3
.o 7 0
s33
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n133
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.91
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.91
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.92
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.92
	push_arg 0 2 2
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.n 1 _ ea133
.o 1 0
n133
	push_node _cycle_in_spine 1
.o 2 0
ea133
.o 2 0
s133
	buildAC ".vm"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 4 _
.o 1 0
n34
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea34
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 4 0
ea34
	jsr_eval 3
	push_array 2
	push_array 2
	push_r_args 2 4 0
	update_a 5 8
	update_a 2 5
	update_a 4 7
	update_a 1 4
	update_a 3 6
	update_a 0 3
	pop_a 3
.o 7 0
s34
	push_a 6
	buildI 1
	push_a 3
	push_a 8
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.93
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.93
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.94
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
.d 2 0
	rtn
else.94
	push_arg 0 2 2
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.o 1 1 b
s74
	eqB_b TRUE 0
	jmp_true case.95
	jmp case.96
case.95
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.96
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> field </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.o 8 0
s8
	eq_desc _Cons 2 4
	jmp_true case.97
	jmp s8.1
case.97
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.98
	pop_a 2
	jmp s8.1
case.98
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s73
.o 0 1 b
	notB
	jmp_false else.99
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 12
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 3 0
	rtn
else.99
	buildAC "<symbol> , </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.100
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 13
	buildAC "local"
	buildh ARRAY 1
	push_a 13
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 2
	jsr_eval 0
	push_a 12
	push_a 12
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 8 0
	jmp s8
else.100
	buildAC "<symbol> ; </symbol>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.101
	push_a 1
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 12
	buildAC "local"
	buildh ARRAY 1
	push_a 12
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 11
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s7
else.101
	pop_a 3
	jmp s8.1
s8.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_8
.d 0 2 ii
	jmp _match_error
.string x_8 "parseMultipleVarsInLine"
.n 4 _
.o 1 0
n7
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea7
.o 3 0
	push_a 2
	push_a 2
	push_a 2
	fillh _Tuple 3 6
	pop_a 3
.d 1 0
	rtn
.o 4 0
ea7
	jsr_eval 1
	repl_r_args 4 0
.o 7 0
s7
	eq_desc _Cons 2 4
	jmp_true case.102
	jmp s7.1
case.102
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.103
	pop_a 2
	jmp s7.1
case.103
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.104
	pop_a 4
	jmp s7.1
case.104
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.105
	pop_a 6
	jmp s7.1
case.105
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> var </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.106
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 15
	buildB TRUE
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
	update_a 2 17
	update_a 1 16
	updatepop_a 0 15
.d 3 0
	rtn
else.106
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.107
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 9 0
	push_a 16
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	jsr_eval 0
	push_a 15
	push_a 14
	push_a 14
	push_a 14
	push_a 14
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 7 21
	update_a 6 20
	update_a 5 19
	update_a 4 18
	update_a 3 17
	update_a 2 16
	update_a 1 15
	updatepop_a 0 14
.d 8 0
	jmp s8
else.107
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 9 0
	push_a 16
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 20
	update_a 5 19
	update_a 4 18
	update_a 3 17
	update_a 2 16
	update_a 1 15
	updatepop_a 0 14
.d 7 0
	jmp s7
s7.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_7
.d 0 2 ii
	jmp _match_error
.string x_7 "parseAllVars"
.o 1 1 b
s73
	eqB_b TRUE 0
	jmp_true case.108
	jmp case.109
case.108
	pop_a 1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
case.109
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
.export e_ParserToVM_sgetTokenValue
.descexp e_ParserToVM_dgetTokenValue e_ParserToVM_ngetTokenValue e_ParserToVM_lgetTokenValue 1 0 "getTokenValue"
.o 2 0
e_ParserToVM_lgetTokenValue
	pop_a 1
.d 1 0
	jsr ea3
.o 1 0
	buildh ARRAY 1
.d 1 0
	rtn
.n 1 e_ParserToVM_dgetTokenValue
.o 1 0
e_ParserToVM_ngetTokenValue
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea3
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 0
e_ParserToVM_sgetTokenValue
.o 1 0
ea3
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
.o 1 0
s3
	push_a 0
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s51
.o 1 0
	pushI 0
.d 1 1 i
	jsr s36
.o 0 1 i
	push_a 0
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s52
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	push_b 1
	push_b 1
	subI
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	create
	push_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 1
	push_b 2
	addI
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 1 i
	jsr e_StdList_sdrop
.o 1 0
	push_b 1
	push_b 1
	subI
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	create
	push_a 2
	updatepop_b 0 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 2 1 i
	jsr e_StdList_stake
.o 1 0
	pushI 1
	push_b 1
	addI
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	updatepop_b 0 1
.d 2 1 i
	jsr e_StdList_sdrop
.o 1 0
	pushI 0
.d 1 1 i
	jsr s55
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s54
.o 1 1 i
s55
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s72
.o 1 1 i
s72
	eq_desc _Cons 2 0
	jmp_true case.110
	jmp case.111
case.110
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s55
case.111
	pop_a 1
.d 0 1 i
	rtn
.o 3 0
s54
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s71
.o 3 0
s71
	eq_desc _Cons 2 0
	jmp_true case.112
	jmp case.113
case.112
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n129
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s54
case.113
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea129
.o 1 0
n129
	push_node _cycle_in_spine 1
.o 2 0
ea129
.o 2 0
s129
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s52
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.114
	push_b 0
	push_array 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n130
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.114
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n130
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea130
.o 2 2 ii
s130
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s52
.o 2 2 ii
s51
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.115
	push_b 0
	push_array 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n131
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.115
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n131
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea131
.o 2 2 ii
s131
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s51
.o 1 1 i
s36
	eq_desc _Cons 2 0
	jmp_true case.116
	jmp s36.1
case.116
	repl_args 2 2
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	pushC '>'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqC
	jmp_false else.117
	pushI 1
	push_b 1
	update_b 1 2
	updatepop_b 0 1
	pop_a 2
	addI
.d 0 1 i
	rtn
else.117
	pushI 1
	push_b 1
	addI
	push_a 1
	jsr_eval 0
	updatepop_a 0 2
	updatepop_b 0 1
.d 1 1 i
	jmp s36
s36.1
	pop_a 1
	pop_b 1
	pushD m_ParserToVM
	pushD x_36
.d 0 2 ii
	jmp _match_error
.string x_36 "tagLength"
.o 7 0
s90
	eq_desc _Cons 2 4
	jmp_true case.118
	jmp s90.1
case.118
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.119
	pop_a 2
	jmp s90.1
case.119
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.120
	pop_a 4
	jmp s90.1
case.120
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.121
	pop_a 6
	jmp s90.1
case.121
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 6
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> var </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.122
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 7
	buildh _Cons 2
	push_a 15
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 16
	updatepop_a 0 15
.d 2 1 b
	rtn
else.122
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.123
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 9 0
	push_a 16
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	jsr_eval 0
	push_a 15
	push_a 14
	push_a 14
	push_a 14
	push_a 14
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 7 21
	update_a 6 20
	update_a 5 19
	update_a 4 18
	update_a 3 17
	update_a 2 16
	update_a 1 15
	updatepop_a 0 14
.d 8 0
	jmp s116
else.123
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 9 0
	push_a 16
	buildAC "local"
	buildh ARRAY 1
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 1 4
	update_a 3 1
	update_a 0 3
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 20
	update_a 5 19
	update_a 4 18
	update_a 3 17
	update_a 2 16
	update_a 1 15
	updatepop_a 0 14
.d 7 0
	jmp s90
s90.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_90
.d 0 2 ii
	jmp _match_error
.string x_90 "parseAllVars"
.o 7 0
s91
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n138
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.124
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 1
.d 2 0
	rtn
else.124
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.125
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 1
.d 2 0
	rtn
else.125
	push_arg 0 2 2
	jsr_eval 0
	buildB TRUE
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
.n 1 _ ea138
.o 1 0
n138
	push_node _cycle_in_spine 1
.o 2 0
ea138
.o 2 0
s138
	buildAC ".vm"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s92
	eq_desc _Cons 2 4
	jmp_true case.126
	jmp s92.1
case.126
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.127
	jmp case.128
case.127
	push_args 1 2 2
	jsr_eval 0
	eqC_a ' ' 0
	jmp_true case.129
	pop_a 2
	jmp case.128
case.129
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.130
	pop_a 2
	jmp case.128
case.130
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	CtoI
	pop_a 2
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\ncall String.appendChar 2\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
.d 7 0
	jsr s96
.o 1 1 b
	push_b 0
	notB
	jmp_false else.131
	buildAC "failed to append char to string"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.131
	push_a 0
	pushB TRUE
	updatepop_a 0 10
	updatepop_b 0 1
.d 1 1 b
	rtn
case.128
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	CtoI
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\ncall String.appendChar 2\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 8
	push_a 8
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s96
.o 1 1 b
	push_b 0
	notB
	jmp_false else.132
	buildAC "failed to append char to string"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.132
	push_a 0
	jsr_eval 0
	push_a 8
	push_a 3
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s92
s92.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_92
.d 0 2 ii
	jmp _match_error
.string x_92 "parseAppendChar"
.o 7 0
s93
	eq_desc _Cons 2 4
	jmp_true case.133
	jmp s93.1
case.133
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> + </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s81
.o 0 1 b
	notB
	jmp_false else.134
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.134
	push_a 1
	jsr_eval 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s94
.o 2 1 b
	push_b 0
	notB
	jmp_false else.135
	buildAC "failed expression"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.135
	build_r e_StdFile_rFileSystem; 4 0 3 0
	push_a 2
	push_a 10
	push_a 5
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n135
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
	pop_b 1
.d 7 0
	jmp s93
s93.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_93
.d 0 2 ii
	jmp _match_error
.string x_93 "parseOpTerm"
.n 4 _ ea135
.o 1 0
n135
	push_node _cycle_in_spine 4
.o 5 0
ea135
.o 5 0
s135
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s37
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s94
	eq_desc _Cons 2 4
	jmp_true case.136
	jmp s94.1
case.136
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pushI 17
	push_a 0
.d 1 1 i
	jsr s35
.o 1 0
	buildAC "<integerConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.137
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s115
else.137
	pushI 16
	push_a 0
.d 1 1 i
	jsr s35
.o 1 0
	buildAC "<stringConstant>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.138
	push_a 8
	jsr_eval 0
	push_a 8
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s114
else.138
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> - </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_true then.139
	buildAC "<symbol> ~ </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.139
then.139
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s113
else.139
	buildAC "<symbol> ( </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.141
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s112
else.141
	pushI 12
	push_a 0
.d 1 1 i
	jsr s35
.o 1 0
	buildAC "<identifier>"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.142
	push_a 7
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 10
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 5 7
	update_a 6 5
	update_a 0 6
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s111
else.142
	pop_a 2
	jmp s94.1
s94.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_94
.d 0 2 ii
	jmp _match_error
.string x_94 "parseTerm"
.o 7 0
s95
	eq_desc _Cons 2 4
	jmp_true case.143
	jmp s95.1
case.143
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.144
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.144
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s94
.o 2 1 b
	push_b 0
	notB
	jmp_false else.145
	buildAC "failed to generate code for term"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.145
	push_a 0
	build _ 1 n159
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	buildh _Cons 2
	push_a 3
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 7 0
	jsr s93
.o 2 1 b
	push_b 0
	notB
	jmp_false else.146
	buildAC "failed expression"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.146
	push_a 1
	push_a 1
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s95.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_95
.d 0 2 ii
	jmp _match_error
.string x_95 "parseExpression"
.n 1 _ ea159
.o 1 0
n159
	push_node _cycle_in_spine 1
.o 2 0
ea159
	jsr_eval 0
.o 2 0
s159
	eq_desc _Cons 2 0
	jmp_true case.147
	jmp s159.1
case.147
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s159.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_159
.d 0 2 ii
	jmp _match_error
.string x_159 "_match2"
.o 7 0
s96
	push_a 6
	buildI 2
	push_a 7
	build _ 1 n134
	push_a 4
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.148
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.148
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.149
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.149
	push_arg 0 2 2
	pushB TRUE
	updatepop_a 0 1
.d 1 1 b
	rtn
.n 1 _ ea134
.o 1 0
n134
	push_node _cycle_in_spine 1
.o 2 0
ea134
.o 2 0
s134
	buildAC ".vm"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 0
s97
	eq_desc _Cons 2 4
	jmp_true case.150
	jmp s97.1
case.150
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.151
	pop_a 2
	jmp s97.1
case.151
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.152
	pop_a 4
	jmp s97.1
case.152
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.153
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jmp s110
else.153
	push_a 1
	jsr_eval 0
	push_a 13
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 9 12
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 7 0
	jsr s95
.o 2 1 b
	push_b 0
	notB
	jmp_false else.154
	buildAC "failed to gen code for expression"
	updatepop_a 0 10
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.154
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 2
	push_a 1
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	pop_b 1
	update_a 7 9
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 6 0
	jsr e_symTable_sgetMethodSymbolKind
.o 3 0
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 3
	push_a 5
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build e_symTable_dgetMethodSymbolIndex 3 e_symTable_ngetMethodSymbolIndex
	push_a 1
	jsr_eval 0
	pushB_a 2
	pop_a 1
	push_a 0
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 1 1 b
	jsr s82
.o 0 1 b
	notB
	jmp_false else.155
	buildAC "failed to get symbol record fields"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.155
	jsr_eval 0
	push_arg 0 3 3
	jsr_eval 0
	push_a 9
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_arg 2 3 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 13
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "pop "
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	update_a 9 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jsr s96
.o 1 1 b
	push_b 0
	notB
	jmp_false else.156
	buildAC "failed to write vm code to file"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.156
	push_a 1
	build _ 1 n160
	build d_S.2 -1 n_S.2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s97.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_97
.d 0 2 ii
	jmp _match_error
.string x_97 "parseLetStatement"
.n 1 _ ea160
.o 1 0
n160
	push_node _cycle_in_spine 1
.o 2 0
ea160
	jsr_eval 0
.o 2 0
s160
	eq_desc _Cons 2 0
	jmp_true case.157
	jmp s160.1
case.157
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s160.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_160
.d 0 2 ii
	jmp _match_error
.string x_160 "_match3"
.o 7 0
s98
	eq_desc _Cons 2 4
	jmp_true case.158
	jmp s98.1
case.158
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s83
.o 0 1 b
	notB
	jmp_false else.159
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.159
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s97
.o 2 1 b
	push_b 0
	notB
	jmp_false else.160
	buildAC "error in let statement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.160
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s98
s98.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_98
.d 0 2 ii
	jmp _match_error
.string x_98 "parseStatement"
.o 7 0
s99
	eq_desc _Cons 2 4
	jmp_true case.161
	jmp s99.1
case.161
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.162
	pop_a 2
	jmp s99.1
case.162
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.163
	pop_a 4
	jmp s99.1
case.163
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 6 0
	push_a 13
	buildAC "symtables\\methodcounter.txt"
	buildh ARRAY 1
	buildAC "0"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n34
	build d_S.2 -1 n_S.2
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 6
	buildh _Cons 2
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
.d 7 0
	jsr s90
.o 2 1 b
	push_b 0
	notB
	jmp_false else.164
	buildAC "failed vardec"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.164
	push_a 1
	push_a 1
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s99.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_99
.d 0 2 ii
	jmp _match_error
.string x_99 "parseVarDec"
.o 7 0
s100
	eq_desc _Cons 2 4
	jmp_true case.165
	jmp s100.1
case.165
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> let </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s84
.o 0 1 b
	notB
	jmp_false else.166
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
else.166
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 8
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s98
.o 2 1 b
	push_b 0
	notB
	jmp_false else.167
	buildAC "failed statments"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.167
	push_a 0
	jsr_eval 0
	push_a 2
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	pop_b 1
.d 7 0
	jmp s98
s100.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_100
.d 0 2 ii
	jmp _match_error
.string x_100 "parseStatements"
.o 7 0
s101
	push_a 6
	buildI 1
	push_a 3
	push_a 8
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 10
	update_a 0 11
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.168
	buildAC "failed to open file"
	updatepop_a 0 8
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.168
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 7
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.169
	buildAC "failed to close file"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.169
	push_arg 0 2 2
	pushB TRUE
	updatepop_a 0 1
.d 1 1 b
	rtn
.o 7 1 i
s102
	eq_desc _Cons 2 4
	jmp_true case.170
	jmp s102.1
case.170
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.171
	pop_a 2
	jmp s102.1
case.171
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.172
	pop_a 4
	jmp s102.1
case.172
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ) </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.173
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 14
	updatepop_a 0 13
	updatepop_b 0 1
.d 2 1 b
	rtn
else.173
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ) </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.174
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 13
	push_b 0
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 19
	update_a 5 18
	update_a 4 17
	update_a 3 16
	update_a 2 15
	update_a 1 14
	updatepop_a 0 13
	updatepop_b 0 1
.d 7 1 i
	jmp s109
else.174
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 14
	buildAC "argument"
	buildh ARRAY 1
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	update_a 9 13
	update_a 8 12
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	buildh _Nil 0
	update_a 0 17
	pop_a 1
.d 8 0
	jsr e_symTable_sinsertRecordMethodTable
.o 2 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.175
	buildAC "failed to insert argument symbol"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.175
	buildAC "<symbol> , </symbol>\n"
	push_array 3
	update_a 3 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.176
	push_a 1
	jsr_eval 0
	push_a 1
	push_b 0
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 1
.d 7 1 i
	jmp s102
else.176
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 1
.d 2 1 b
	rtn
s102.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_102
.d 0 2 ii
	jmp _match_error
.string x_102 "parseParameterList"
.o 9 0
s103
	eq_desc _Cons 2 4
	jmp_true case.177
	jmp s103.1
case.177
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 10
	push_a 8
	buildh ARRAY 1
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s99
.o 2 1 b
	push_b 0
	notB
	jmp_false else.178
	buildAC "failed to parse vardec"
	updatepop_a 0 11
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.178
	push_a 1
	push_a 6
	push_a 6
	push_a 6
	push_a 6
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 5 0
	jsr e_symTable_sgetMethodTableCounter
.o 3 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	push_b 0
	notB
	jmp_false else.179
	buildAC "failed to get number of locals"
	updatepop_a 0 13
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.179
	push_b 0
	notB
	jmp_false else.180
	buildAC "failed to print 'function' instruction"
	updatepop_a 0 13
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.180
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 3
	push_a 3
	push_a 13
	push_a 13
	buildh ARRAY 1
	push_a 4
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 5 n132
	build d_S.2 -1 n_S.2
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 11
	buildh ARRAY 1
	push_a 14
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n12
	build d_S.2 -1 n_S.2
	push_a 4
	jsr_eval 0
	push_a 11
	buildh ARRAY 1
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 16 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 7 0
	jsr s100
.o 2 1 b
	push_b 0
	notB
	jmp_false else.181
	buildAC "failed to parse statements"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.181
	push_a 0
	build _ 1 n161
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 4
	updatepop_a 0 3
	updatepop_b 0 1
.d 2 1 b
	rtn
s103.1
	pop_a 9
	pushD m_ParserToVM
	pushD x_103
.d 0 2 ii
	jmp _match_error
.string x_103 "parseSubroutineBody"
.n 1 _ ea161
.o 1 0
n161
	push_node _cycle_in_spine 1
.o 2 0
ea161
	jsr_eval 0
.o 2 0
s161
	eq_desc _Cons 2 0
	jmp_true case.182
	jmp s161.1
case.182
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s161.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_161
.d 0 2 ii
	jmp _match_error
.string x_161 "_match4"
.n 5 _ ea132
.o 1 0
n132
	push_node _cycle_in_spine 5
.o 6 0
ea132
.o 6 0
s132
	push_a 4
	jsr_eval 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 8
	update_a 0 9
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "."
.d 2 0
	jsr catAC
.o 1 0
	push_array 4
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "function "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 7 0
	jsr s33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
s104
	eq_desc _Cons 2 4
	jmp_true case.183
	jmp s104.1
case.183
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.184
	pop_a 2
	jmp s104.1
case.184
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> static </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 2
.d 1 1 b
	jsr s74
.o 0 1 b
	notB
	jmp_false else.185
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 12
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 13
	updatepop_a 0 12
.d 2 1 b
	rtn
else.185
	push_a 11
	buildI 2
	push_a 11
	build _ 1 n145
	push_a 8
	buildh _Nil 0
	update_a 0 16
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.186
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.186
	push_arg 0 3 3
	push_arg 1 3 2
	push_a 3
	push_a 6
	build _ 3 n146
	push_a 7
	update_a 5 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.187
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.187
	push_arg 0 2 2
	build_r e_StdFile_rFileSystem; 4 0 3 0
	push_a 9
	push_a 4
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n7
	push_a 0
	build d_S.3 -1 n_S.3
	buildI 2
	push_a 10
	build _ 1 n147
	push_a 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.188
	buildAC "failed to open file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.188
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC "</classVarDec>\n"
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.189
	buildAC "failed to close file"
	updatepop_a 0 10
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.189
	push_arg 0 2 2
	jsr_eval 2
	push_arg 2 3 2
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s104
s104.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_104
.d 0 2 ii
	jmp _match_error
.string x_104 "parseClassVarDec"
.n 1 _ ea147
.o 1 0
n147
	push_node _cycle_in_spine 1
.o 2 0
ea147
.o 2 0
s147
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 3 _ ea146
.o 1 0
n146
	push_node _cycle_in_spine 3
.o 4 0
ea146
.o 4 0
s146
	push_a 2
	jsr_eval 0
	pushF_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr catAC
.o 1 0
	buildAC "<classVarDec>\n"
.d 2 0
	jsr catAC
.o 1 0
.d 1 2 f
	jsr writeFS
.o 0 2 f
	fillF_b 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 _ ea145
.o 1 0
n145
	push_node _cycle_in_spine 1
.o 2 0
ea145
.o 2 0
s145
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".xml"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "xmlFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 7 1 i
s105
	eq_desc _Cons 2 4
	jmp_true case.190
	jmp s105.1
case.190
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.191
	pop_a 2
	jmp s105.1
case.191
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.192
	pop_a 3
	jmp s105.1
case.192
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.193
	pop_a 4
	jmp s105.1
case.193
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	pop_a 1
	push_a 11
	buildAC "symtables\\methodtable.txt"
	buildAC ""
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	buildh _Nil 0
	update_a 0 19
	pop_a 1
.d 7 0
	jsr s101
.o 1 1 b
	push_b 0
	notB
	jmp_false else.194
	buildAC "failed to intialize method symbol table"
	updatepop_a 0 13
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.194
	push_a 0
	jsr_eval 0
	buildAC "symtables\\methodcounter.txt"
	buildAC "0"
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	pop_b 1
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 7 0
	jsr s101
.o 1 1 b
	push_b 0
	notB
	jmp_false else.195
	buildAC "failed to intialize method counter"
	updatepop_a 0 13
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.195
	push_a 1
	jsr_eval 0
	push_a 1
	push_b 1
	push_a 13
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	updatepop_b 0 1
	update_a 9 10
	update_a 6 9
	update_a 5 8
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 7 1 i
	jsr s102
.o 2 1 b
	push_b 0
	notB
	jmp_false else.196
	buildAC "failed to parse params list"
	updatepop_a 0 12
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.196
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	exit_false selector_m_error
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	push_a 3
	push_a 6
	push_a 14
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 8
	update_a 7 9
	update_a 0 7
	update_a 8 0
	update_a 6 8
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 8 13
	update_a 7 12
	update_a 6 11
	update_a 5 10
	update_a 4 9
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 9 0
	jsr s103
.o 2 1 b
	push_b 0
	notB
	jmp_false else.197
	buildAC "failed to parse subroutine body"
	updatepop_a 0 9
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.197
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_b 1
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 2
.d 7 1 i
	jmp s105
s105.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_105
.d 0 2 ii
	jmp _match_error
.string x_105 "parseSubroutineDec"
.o 8 0
s106
	eq_desc _Nil 0 4
	jmp_true case.198
	jmp case.199
case.198
	push_a 7
	pushB TRUE
	updatepop_a 0 8
.d 1 1 b
	rtn
case.199
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s61
.o 1 0
.d 1 0
	jsr e_StdList_stoString;79
.o 1 0
	buildAC "<tokens>\n"
	push_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.200
	push_a 1
	jsr_eval 0
	push_a 10
	push_a 10
	push_a 10
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 17
	update_a 6 16
	update_a 5 15
	update_a 4 14
	update_a 3 13
	update_a 2 12
	update_a 1 11
	updatepop_a 0 10
.d 8 0
	jmp s106
else.200
	buildAC "<keyword> class </keyword>\n"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.201
	push_a 8
	jsr_eval 0
	push_a 8
	jsr_eval 0
	pushI_a 9
	pop_a 1
	push_a 7
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 1 i
	jmp s108
else.201
	buildAC "This is why you fail"
	updatepop_a 0 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
.o 6 0
s107
	eq_desc _Nil 0 4
	jmp_true case.202
	jmp case.203
case.202
	push_a 5
	pushB TRUE
	updatepop_a 0 6
.d 1 1 b
	rtn
case.203
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	build e__SystemArray_dusize;23 1 e__SystemArray_nusize;23
	push_a 0
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.1 -1 n_S.1
	build _ 2 n153
	push_a 0
	build _ 1 n154
	push_a 0
	build _ 1 n155
	push_a 11
	buildI 1
	push_a 2
	build _ 1 n156
	push_a 10
	buildh _Nil 0
	update_a 0 16
	update_a 0 8
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.204
	buildAC "failed to open file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.204
	push_arg 0 3 3
	push_arg 1 3 2
	buildAC ""
	buildh ARRAY 1
	build _ 2 e_StdFile_nfwrites
	push_a 9
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.205
	buildAC "failed to close file"
	updatepop_a 0 13
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.205
	push_arg 0 2 2
	push_a 6
	buildAC "TxmlFiles\\"
	buildh ARRAY 1
	build _ 2 e_StdString_n+++;11
	push_a 10
	build _ 3 n151
	push_a 0
	build d_S.2 -1 n_S.2
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 0
	jsr e_FileManipulation_slistOfLinesInFile
.o 2 0
	push_a 2
	build d_S.3 -1 n_S.3
	push_a 11
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 3 n152
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	buildI 1
	push_a 7
	push_a 17
	push_a 17
	push_a 17
	push_a 17
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 11
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 8 0
	jsr s106
.o 1 1 b
	push_b 0
	notB
	jmp_false else.206
	push_a 5
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ", execution terminated\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 1
	update_a 5 14
	update_a 4 13
	update_a 1 12
	updatepop_a 0 11
.d 2 0
	jsr catAC
.o 1 0
	buildAC "Failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.206
	push_a 6
	jsr_eval 0
	push_a 1
	push_a 12
	push_a 12
	push_a 12
	push_a 12
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 13
	update_a 0 14
	update_a 0 15
	update_a 0 16
	update_a 0 12
	pop_a 1
.d 6 0
	jsr s107
.o 1 1 b
	pop_a 1
	notB
	jmp_false else.207
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "T.xml\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "failed to parse file "
.d 2 0
	jsr catAC
.o 1 0
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.207
	pop_a 6
	jmp s107.1
s107.1
	pop_a 6
	pushD m_ParserToVM
	pushD x_107
.d 0 2 ii
	jmp _match_error
.string x_107 "ParseMultipleFiles"
.n 1 _ ea156
.o 1 0
n156
	push_node _cycle_in_spine 1
.o 2 0
ea156
.o 2 0
s156
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC ".vm"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "vmFiles\\"
.d 2 0
	jsr catAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea155
.o 1 0
n155
	push_node _cycle_in_spine 1
.o 2 0
ea155
.o 2 0
s155
	push_a 0
	jsr_eval 0
	push_a 1
	pushI 0
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr s65
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jsr s64
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.n 1 _ ea154
.o 1 0
n154
	push_node _cycle_in_spine 1
.o 2 0
ea154
.o 2 0
s154
	push_a 0
	jsr_eval 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 5
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 0
	updatepop_a 0 1
.d 2 1 i
	jmp e_StdList_stake
.n 2 _ ea153
.o 1 0
n153
	push_node _cycle_in_spine 2
.o 3 0
ea153
.o 3 0
s153
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	push_a 1
	pushI 0
	updatepop_a 0 2
.d 2 2 ii
	jmp s62
.n 3 _ ea152
.o 1 0
n152
	push_node _cycle_in_spine 3
.o 4 0
ea152
.o 4 0
s152
	push_a 2
	push_a 1
	jsr_eval 0
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.n 3 _ ea151
.o 1 0
n151
	push_node _cycle_in_spine 3
.o 4 0
ea151
.o 4 0
s151
	push_a 2
	buildI 0
	push_a 2
	jsr_eval 0
	push_a 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 3
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 7 1 i
s108
	eq_desc _Cons 2 4
	jmp_true case.208
	jmp s108.1
case.208
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.209
	pop_a 1
	jmp s108.1
case.209
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	push_a 8
	buildI_b 0
	push_a 9
	buildh ARRAY 1
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 7
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 8
	update_a 6 7
	update_a 5 6
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 15
	pop_a 1
.d 8 0
	jsr s104
.o 2 1 b
	push_b 0
	notB
	jmp_false else.210
	buildAC "failed to parse vardec"
	updatepop_a 0 9
	pop_b 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.210
	push_a 1
	jsr_eval 0
	push_a 1
	jsr_eval 0
	push_b 1
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	updatepop_b 0 2
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 1 i
	jsr s105
.o 2 1 b
	pop_a 2
	notB
	jmp_false else.211
	buildAC "failed to parse subroutine"
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 1 1 b
	rtn
else.211
	buildh _Nil 0
	push_a 0
	push_a 1
	push_a 2
	push_a 3
	push_a 4
	push_a 5
	pushI 0
	jmp s108.1
s108.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_108
.d 0 2 ii
	jmp _match_error
.string x_108 "parseClass"
.o 7 1 i
s109
	eq_desc _Cons 2 4
	jmp_true case.212
	jmp s109.1
case.212
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.213
	pop_a 2
	jmp s109.1
case.213
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.214
	pop_a 4
	jmp s109.1
case.214
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 4
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 3
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 14
	buildAC "argument"
	buildh ARRAY 1
	push_a 13
	push_a 13
	push_a 13
	push_a 13
	push_a 7
	update_a 6 8
	update_a 0 6
	update_a 7 0
	update_a 5 7
	update_a 0 5
	pop_a 1
	pop_b 1
	update_a 9 20
	update_a 8 19
	update_a 7 18
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 8 0
	jsr e_symTable_sinsertRecordMethodTable
.o 2 0
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	notB
	jmp_false else.215
	buildAC "failed to insert argument symbol"
	updatepop_a 0 4
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.215
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 2
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 5
	updatepop_a 0 4
.d 2 1 b
	rtn
s109.1
	pop_a 7
	pop_b 1
	pushD m_ParserToVM
	pushD x_109
.d 0 2 ii
	jmp _match_error
.string x_109 "finishParameterList"
.o 7 0
s110
	eq_desc _Cons 2 4
	jmp_true case.216
	jmp s110.1
case.216
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.217
	pop_a 2
	jmp s110.1
case.217
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> if </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.218
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s119
else.218
	pop_a 4
	jmp s110.1
s110.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_110
.d 0 2 ii
	jmp _match_error
.string x_110 "parseIfStatement"
.o 7 0
s111
	eq_desc _Cons 2 4
	jmp_true case.219
	jmp s111.1
case.219
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.220
	pop_a 2
	jmp s111.1
case.220
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ( </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.221
	push_a 10
	jsr_eval 0
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s118
else.221
	buildAC "<symbol> . </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.222
	push_a 10
	jsr_eval 0
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 4
	buildh _Cons 2
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s118
else.222
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s117
s111.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_111
.d 0 2 ii
	jmp _match_error
.string x_111 "var_or_subroutine"
.o 7 0
s112
	eq_desc _Cons 2 4
	jmp_true case.223
	jmp s112.1
case.223
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 1 0
	push_a 8
	push_a 8
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n22
	push_a 0
	build d_S.3 -1 n_S.3
	push_a 1
	build d_S.2 -1 n_S.2
	build _ 1 n162
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
s112.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_112
.d 0 2 ii
	jmp _match_error
.string x_112 "parseTermExpression"
.n 1 _ ea162
.o 1 0
n162
	push_node _cycle_in_spine 1
.o 2 0
ea162
	jsr_eval 0
.o 2 0
s162
	eq_desc _Cons 2 0
	jmp_true case.224
	jmp s162.1
case.224
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s162.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_162
.d 0 2 ii
	jmp _match_error
.string x_162 "_match5"
.o 7 0
s113
	eq_desc _Cons 2 4
	jmp_true case.225
	jmp s113.1
case.225
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 4
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n24
	push_a 0
	build d_S.3 -1 n_S.3
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 10
	push_a 4
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n136
	build d_S.2 -1 n_S.2
	push_a 1
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 11
	updatepop_a 0 10
.d 2 1 b
	rtn
s113.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_113
.d 0 2 ii
	jmp _match_error
.string x_113 "parseUnaryOp"
.n 4 _ ea136
.o 1 0
n136
	push_node _cycle_in_spine 4
.o 5 0
ea136
.o 5 0
s136
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s38
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 7 0
s114
	eq_desc _Cons 2 4
	jmp_true case.226
	jmp s114.1
case.226
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
.d 1 0
	jsr s3
.o 1 0
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s60
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	buildh _Nil 0
	update_a 0 16
	pop_a 1
.d 7 0
	jsr s91
.o 2 0
	pop_a 1
	push_a 8
	buildAC "call String.new 1\n"
	push_a 8
	push_a 8
	push_a 8
	push_a 8
.d 7 0
	jsr s91
.o 2 0
	pop_a 1
	push_a 8
	push_a 2
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	update_a 8 15
	update_a 6 14
	update_a 5 13
	update_a 4 12
	update_a 3 11
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
.d 7 0
	jsr s92
.o 1 1 b
	push_b 0
	notB
	jmp_false else.227
	buildAC "failed to append chars to string"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.227
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s114.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_114
.d 0 2 ii
	jmp _match_error
.string x_114 "parseStringConstant"
.o 7 0
s115
	eq_desc _Cons 2 4
	jmp_true case.228
	jmp s115.1
case.228
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 9
	push_a 9
	push_a 3
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n141
	build d_S.2 -1 n_S.2
	push_a 2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
.d 2 1 b
	rtn
s115.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_115
.d 0 2 ii
	jmp _match_error
.string x_115 "parseIntegerConstant"
.n 4 _ ea141
.o 1 0
n141
	push_node _cycle_in_spine 4
.o 5 0
ea141
.o 5 0
s141
	push_a 3
	jsr_eval 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	update_a 0 7
	pop_a 1
.d 1 0
	jsr s3
.o 1 0
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push constant "
.d 2 0
	jsr catAC
.o 1 0
	push_r_args 3 4 0
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 7 0
	jsr s33
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 8 0
s116
	eq_desc _Cons 2 4
	jmp_true case.229
	jmp s116.1
case.229
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.230
	pop_a 2
	jmp s116.1
case.230
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> , </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	push_a 0
.d 1 1 b
	jsr s73
.o 0 1 b
	notB
	jmp_false else.231
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 12
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 13
	updatepop_a 0 12
.d 2 1 b
	rtn
else.231
	buildAC "<symbol> , </symbol>\n"
	push_array 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.232
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 5 0
	push_a 13
	buildAC "local"
	buildh ARRAY 1
	push_a 13
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 2
	jsr_eval 0
	push_a 12
	push_a 12
	push_a 11
	push_a 11
	push_a 11
	push_a 11
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 7 19
	update_a 6 18
	update_a 5 17
	update_a 4 16
	update_a 3 15
	update_a 2 14
	update_a 1 13
	updatepop_a 0 12
.d 8 0
	jmp s116
else.232
	buildAC "<symbol> ; </symbol>\n"
	push_array 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.233
	push_a 1
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	build_r e_StdFile_rFileSystem; 4 0 4 0
	push_a 12
	buildAC "local"
	buildh ARRAY 1
	push_a 12
	push_a 4
	update_a 3 5
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 0 2
	pop_a 1
	build e_symTable_dinsertRecordMethodTable 5 e_symTable_ninsertRecordMethodTable
	build d_S.2 -1 n_S.2
	push_a 1
	jsr_eval 0
	push_a 11
	push_a 9
	push_a 9
	push_a 9
	push_a 9
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s90
else.233
	pop_a 3
	jmp s116.1
s116.1
	pop_a 8
	pushD m_ParserToVM
	pushD x_116
.d 0 2 ii
	jmp _match_error
.string x_116 "parseMultipleVarsInLine"
.o 7 0
s117
	eq_desc _Cons 2 4
	jmp_true case.234
	jmp s117.1
case.234
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.235
	pop_a 2
	jmp s117.1
case.235
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	build e_ParserToVM_dgetTokenValue 1 e_ParserToVM_ngetTokenValue
	push_a 11
	push_a 1
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	buildh _Nil 0
	update_a 0 18
	update_a 0 10
	pop_a 1
.d 6 0
	jsr e_symTable_sgetMethodSymbolKind
.o 3 0
	build_r e_StdFile_rFileSystem; 4 0 8 0
	push_a 3
	push_a 5
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build e_symTable_dgetMethodSymbolIndex 3 e_symTable_ngetMethodSymbolIndex
	push_a 1
	jsr_eval 0
	pushB_a 2
	pop_a 1
	push_a 0
	update_a 7 9
	update_a 6 8
	update_a 3 7
	update_a 1 6
	updatepop_a 0 5
.d 1 1 b
	jsr s80
.o 0 1 b
	notB
	jmp_false else.236
	buildAC "failed to get symbol record fields"
	updatepop_a 0 11
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.236
	jsr_eval 0
	push_arg 0 3 3
	jsr_eval 0
	push_arg 1 3 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 3
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	pop_a 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "push "
.d 2 0
	jsr catAC
.o 1 0
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 5
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 10 17
	update_a 9 16
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jsr s96
.o 1 1 b
	push_b 0
	notB
	jmp_false else.237
	buildAC "failed to write vm code to file"
	updatepop_a 0 3
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.237
	push_a 2
	push_a 2
	buildh _Cons 2
	push_a 1
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 4
	updatepop_a 0 3
	updatepop_b 0 1
.d 2 1 b
	rtn
s117.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_117
.d 0 2 ii
	jmp _match_error
.string x_117 "parseVarName"
.o 7 0
s118
	eq_desc _Cons 2 4
	jmp_true case.238
	jmp s118.1
case.238
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.239
	pop_a 2
	jmp s118.1
case.239
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	update_a 0 1
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 11
	updatepop_a 0 10
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
s118.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_118
.d 0 2 ii
	jmp _match_error
.string x_118 "parseSubroutineCall"
.o 7 0
s119
	eq_desc _Cons 2 4
	jmp_true case.240
	jmp s119.1
case.240
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.241
	pop_a 2
	jmp s119.1
case.241
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> while </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.242
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 3
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s120
else.242
	pop_a 4
	jmp s119.1
s119.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_119
.d 0 2 ii
	jmp _match_error
.string x_119 "parseWhileStatement"
.o 7 0
s120
	eq_desc _Cons 2 4
	jmp_true case.243
	jmp s120.1
case.243
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<keyword> do </keyword>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	notB
	jmp_false else.244
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 9
	push_a 9
	push_a 8
	push_a 8
	push_a 8
	push_a 8
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 15
	update_a 5 14
	update_a 4 13
	update_a 3 12
	update_a 2 11
	update_a 1 10
	updatepop_a 0 9
.d 7 0
	jmp s121
else.244
	pop_a 2
	jmp s120.1
s120.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_120
.d 0 2 ii
	jmp _match_error
.string x_120 "parseDoStatement"
.o 7 0
s121
	eq_desc _Cons 2 4
	jmp_true case.245
	jmp s121.1
case.245
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.246
	pop_a 2
	jmp s121.1
case.246
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	buildAC "<symbol> ; </symbol>\n"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.247
	push_a 10
	jsr_eval 0
	push_a 10
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_a 3
	push_a 3
	buildh _Cons 2
	push_a 5
	buildh _Cons 2
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	update_a 6 17
	update_a 5 16
	update_a 4 15
	update_a 3 14
	update_a 2 13
	update_a 1 12
	updatepop_a 0 11
.d 7 0
	jmp s122
else.247
	push_a 1
	push_a 1
	buildh _Cons 2
	push_a 11
	push_a 11
	push_a 10
	push_a 10
	push_a 10
	push_a 10
	push_a 6
	update_a 6 7
	update_a 5 6
	update_a 0 5
	pop_a 1
	update_a 6 10
	update_a 5 9
	update_a 4 8
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	buildh _Nil 0
	update_a 0 14
	pop_a 1
.d 7 0
	jsr s95
.o 2 1 b
	push_b 0
	notB
	jmp_false else.248
	buildAC "failed returnStatement"
	updatepop_a 0 9
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.248
	build_r e_StdFile_rFileSystem; 4 0 2 0
	push_a 2
	push_a 9
	buildAC "return\n"
	buildh ARRAY 1
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n33
	build d_S.2 -1 n_S.2
	push_a 1
	build _ 1 n163
	build d_S.2 -1 n_S.2
	pushB TRUE
	update_a 1 10
	updatepop_a 0 9
	updatepop_b 0 1
.d 2 1 b
	rtn
s121.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_121
.d 0 2 ii
	jmp _match_error
.string x_121 "parseReturnStatement"
.n 1 _ ea163
.o 1 0
n163
	push_node _cycle_in_spine 1
.o 2 0
ea163
	jsr_eval 0
.o 2 0
s163
	eq_desc _Cons 2 0
	jmp_true case.249
	jmp s163.1
case.249
	push_args 0 2 2
	pop_a 2
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
s163.1
	pop_a 2
	pushD m_ParserToVM
	pushD x_163
.d 0 2 ii
	jmp _match_error
.string x_163 "_match6"
.o 7 0
s122
	eq_desc _Cons 2 4
	jmp_true case.250
	jmp s122.1
case.250
	push_args 4 2 2
	buildh _Nil 0
	update_a 0 7
	pop_a 1
	pop_a 1
	jsr_eval 0
	eq_desc _Cons 2 0
	jmp_true case.251
	pop_a 1
	jmp s122.1
case.251
	repl_args 2 2
	pop_a 1
	push_a 7
	push_a 7
	buildAC "push constant 0\nreturn\n"
	push_a 7
	push_a 7
	push_a 7
	push_a 7
	update_a 7 14
	update_a 6 13
	update_a 5 12
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
.d 7 0
	jsr s96
.o 1 1 b
	push_b 0
	notB
	jmp_false else.252
	buildAC "failed return void"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 3 3
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 2 1 b
	rtn
else.252
	push_a 0
	push_a 2
	pushB TRUE
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 b
	rtn
s122.1
	pop_a 7
	pushD m_ParserToVM
	pushD x_122
.d 0 2 ii
	jmp _match_error
.string x_122 "retrunVoid"
.impmod _system
.implab _match_error
.implab selector_m_error
