 // This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press 2004. Book site: http://www.idc.ac.il/tecs
// File name: projects/11/pong/Bat.jack.   Version: beta 1.4


class Bat {

    // the location on the screen
    field int x, y;

    // the width & height
    field int width, height;

    // The bat's movement direction
    field int direction; // 1=left,2=right

    
    constructor Bat new(int Ax, int Ay, int Awidth, int Aheight) {
	let x = Ax;
	let y = Ay;
	let width = Awidth;
	let height = Aheight;
	let direction = 2;

        do show();

        return this;
    }

    
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    
    method void show() {
        do Screen.setColor(true);
	do draw();
        return;
    }

    
    method void hide() {
        do Screen.setColor(false);
	do draw();
        return;
    }

    
    method void draw() {
	do Screen.drawRectangle(x, y, x + width, y + height);
	return;
    }

    
    method void setDirection(int Adirection) {
	let direction = Adirection;
        return;
    }

    
    method int getLeft() {
        return x;
    }

    
    method int getRight() {
        return x + width;
    }

    
    method void setWidth(int Awidth) {
        do hide();
	let width = Awidth;
        do show();
        return;
    }

    
    method void move() {
	if (direction = 1) {
            let x = x - 4;
	    if (x < 0) {
		let x = 0;
    	    }
            do Screen.setColor(false);
            do Screen.drawRectangle((x + width) + 1, y, (x + width) + 4, y + height);
            do Screen.setColor(true);
   	    do Screen.drawRectangle(x, y, x + 3, y + height);
	} 
	else {
            let x = x + 4;
	    if ((x + width) > 511) {
		let x = 511 - width;
  	    }
            do Screen.setColor(false);
            do Screen.drawRectangle(x - 4, y, x - 1, y + height);
            do Screen.setColor(true);
	    do Screen.drawRectangle((x + width) - 3, y, x + width, y + height);
	}

        return;
    }
}
