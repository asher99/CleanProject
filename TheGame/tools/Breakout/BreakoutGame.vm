function BreakoutGame.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
call Paddle.new 0
pop this 0
push constant 0
pop this 1
call Ball.new 0
pop this 2
call Wall.new 0
pop this 3
push pointer 0
return
function BreakoutGame.dispose 0
push argument 0
pop pointer 0
push this 0
call Paddle.dispose 1
pop temp 0
push this 2
call Ball.dispose 1
pop temp 0
push this 3
call Wall.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function BreakoutGame.run 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push this 3
call Wall.isCompletlyBroken 1
pop local 1
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call BreakoutGame.calculate_frame 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 1
label IF_FALSE0
push local 0
push constant 131
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop this 1
label IF_FALSE1
push local 0
push constant 133
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 2
pop this 1
label IF_FALSE2
push local 0
push constant 130
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 3
pop this 1
label IF_FALSE3
push local 0
push constant 132
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 4
pop this 1
label IF_FALSE4
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call BreakoutGame.calculate_frame 1
pop temp 0
goto WHILE_EXP2
label WHILE_END2
push this 3
call Wall.isCompletlyBroken 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function BreakoutGame.calculate_frame 8
push argument 0
pop pointer 0
push this 0
call Paddle.get_placement 1
pop local 0
push this 0
call Paddle.get_placement 1
push this 0
call Paddle.get_x_size 1
add
pop local 1
push this 0
call Paddle.get_hight 1
push constant 8
sub
pop local 2
push this 2
call Ball.get_center_x 1
pop local 4
push this 2
call Ball.get_center_y 1
pop local 5
push local 4
push local 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push local 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 5
push local 2
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push this 2
push local 4
push local 0
push local 1
call BreakoutGame.ball_hit_paddle 5
pop temp 0
label IF_FALSE2
label IF_FALSE1
label IF_FALSE0
push this 2
call Ball.get_center_x 1
pop local 6
push this 2
call Ball.get_center_y 1
pop local 7
push this 3
push local 6
push local 7
push this 2
call Wall.checkHit 4
pop temp 0
push this 3
call Wall.draw 1
pop temp 0
push this 2
call Ball.movement 1
pop temp 0
push this 1
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
call Paddle.moveLeft 1
pop temp 0
label IF_FALSE3
push this 1
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
call Paddle.moveRight 1
pop temp 0
label IF_FALSE4
push constant 5
call Sys.wait 1
pop temp 0
push constant 0
return
function BreakoutGame.ball_hit_paddle 2
push argument 0
pop pointer 0
push argument 4
push argument 3
sub
pop local 0
push constant 2
neg
pop local 1
push argument 2
push argument 3
gt
push constant 1
push constant 4
call Math.divide 2
add
push local 0
call Math.multiply 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
add
pop local 1
label IF_FALSE0
push argument 2
push argument 3
gt
push constant 1
push constant 2
call Math.divide 2
add
push local 0
call Math.multiply 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 2
add
pop local 1
label IF_FALSE1
push argument 2
push argument 3
gt
push constant 3
push constant 4
call Math.divide 2
add
push local 0
call Math.multiply 2
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 1
add
pop local 1
label IF_FALSE2
push argument 1
push local 1
call Ball.set_ball_direction_x 2
pop temp 0
push argument 1
call Ball.flip_direction_y 1
pop temp 0
push constant 0
return
